/*! For license information please see app.js.LICENSE.txt */
(()=>{var e={61480:(e,t,n)=>{"use strict";n.r(t),n.d(t,{ObjectDetection:()=>Sf,load:()=>vf,version:()=>kf});var r={};n.r(r),n.d(r,{arraysEqual:()=>tr,assert:()=>Jn,assertNonNegativeIntegerDimensions:()=>Or,assertNonNull:()=>Xn,assertShapesMatch:()=>Yn,bytesFromStringArray:()=>br,bytesPerElement:()=>gr,checkConversionForErrors:()=>dr,clamp:()=>jn,computeStrides:()=>Er,createScalarValue:()=>Tr,createShuffledIndices:()=>sr,decodeString:()=>Rr,distSquared:()=>Hn,encodeString:()=>Br,fetch:()=>Cr,flatten:()=>Zn,getArrayFromDType:()=>hr,getTypedArrayFromDType:()=>cr,hasEncodingLoss:()=>fr,indexToLoc:()=>Lr,inferDtype:()=>kr,inferFromImplicitShape:()=>ur,isBoolean:()=>xr,isFunction:()=>vr,isInt:()=>nr,isNumber:()=>Nr,isScalarShape:()=>er,isString:()=>wr,isTypedArray:()=>yr,isValidDtype:()=>mr,locToIndex:()=>zr,makeOnesTypedArray:()=>_r,makeZerosNestedTypedArray:()=>Mr,makeZerosTypedArray:()=>Fr,nearestDivisor:()=>Sr,nearestLargerEven:()=>Un,now:()=>$r,parseAxisParam:()=>lr,randUniform:()=>Gn,repeatedTry:()=>ir,rightPad:()=>or,shuffle:()=>Wn,sizeFromShape:()=>Qn,sizeToSquarishShape:()=>ar,squeezeShape:()=>pr,sum:()=>Kn,tanh:()=>rr,toNestedArray:()=>Ar,toTypedArray:()=>Dr});var a={};n.r(a),n.d(a,{assertTypesMatch:()=>la,getTensorsInContainer:()=>ca,isTensorInList:()=>pa,makeTypesMatch:()=>ua});var s={};n.r(s),n.d(s,{isBrowser:()=>wa,isMobile:()=>ba});var o={};n.r(o),n.d(o,{browserFiles:()=>As,browserHTTPRequest:()=>zs,concatenateArrayBuffers:()=>Ra,copyModel:()=>bs,decodeWeights:()=>$a,encodeWeights:()=>Ma,fromMemory:()=>Vs,getLoadHandlers:()=>Ua,getModelArtifactsInfoForJSON:()=>La,getSaveHandlers:()=>ja,http:()=>Rs,isHTTPScheme:()=>Cs,listModels:()=>ys,loadWeights:()=>Ms,moveModel:()=>ws,registerLoadRouter:()=>Wa,registerSaveRouter:()=>qa,removeModel:()=>gs,weightsLoaderFactory:()=>$s,withSaveHandler:()=>qs});var i={};n.r(i),n.d(i,{confusionMatrix:()=>Gs});var u={};n.r(u),n.d(u,{fromPixels:()=>Xs,toPixels:()=>Ys});var l={};n.r(l),n.d(l,{prepareAndValidate:()=>Zs});var p={};n.r(p),n.d(p,{calculateShapes:()=>to,validateInput:()=>eo,validateUpdateShape:()=>Qs});var c={};n.r(c),n.d(c,{assertParamsValid:()=>no,computeFlatOffset:()=>yo,computeOutShape:()=>ao,getNormalizedAxes:()=>uo,isSliceContinous:()=>fo,maskToAxes:()=>ro,parseSliceParams:()=>go,startForAxis:()=>ho,startIndicesWithElidedDims:()=>lo,stopForAxis:()=>mo,stopIndicesWithElidedDims:()=>po,stridesForAxis:()=>co,stridesWithElidedDims:()=>so});var h={};n.r(h),n.d(h,{Serializable:()=>bo,SerializationMap:()=>wo,registerClass:()=>xo});var d={};n.r(d),n.d(d,{TEST_EPSILON_FLOAT16:()=>No,expectArrayBuffersEqual:()=>_o,expectArraysClose:()=>ko,expectArraysEqual:()=>To,expectNumbersClose:()=>Do,expectPromiseToFail:()=>Eo,expectValuesInRange:()=>Ao,testEpsilon:()=>vo});var m={};n.r(m),n.d(m,{collectGatherOpShapeInfo:()=>il,computeOutShape:()=>ol,segOpComputeOptimalWindowSize:()=>sl});var f={};n.r(f),n.d(f,{conv2d:()=>Bc,depthwiseConv2d:()=>Lc,matMul:()=>Pc});var y={};n.r(y),n.d(y,{ERF_A1:()=>Vh,ERF_A2:()=>qh,ERF_A3:()=>Wh,ERF_A4:()=>jh,ERF_A5:()=>Uh,ERF_P:()=>Ph,PARALLELIZE_THRESHOLD:()=>rl,SELU_SCALE:()=>Lh,SELU_SCALEALPHA:()=>zh,applyActivation:()=>Oc,assertAndGetBroadcastShape:()=>Si,assertAxesAreInnerMostDims:()=>Ri,assertParamsConsistent:()=>cu,assignToTypedArray:()=>Qh,axesAreInnerMostDims:()=>$i,calculateShapes:()=>to,castTensor:()=>nd,combineLocations:()=>Oi,complexWithEvenIndex:()=>Yh,complexWithOddIndex:()=>Xh,computeConv2DInfo:()=>Qi,computeConv3DInfo:()=>eu,computeDefaultPad:()=>tu,computeDilation2DInfo:()=>Yi,computeOptimalWindowSize:()=>al,computeOutAndReduceShapes:()=>Ci,computeOutShape:()=>hu,computePool2DInfo:()=>Xi,computePool3DInfo:()=>Zi,convertConv2DDataFormat:()=>uu,eitherStridesOrDilationsAreOne:()=>iu,expandShapeToKeepDim:()=>Bi,exponent:()=>td,exponents:()=>ed,getAxesPermutation:()=>zi,getBroadcastDims:()=>ki,getComplexWithIndex:()=>Zh,getFusedBiasGradient:()=>$c,getFusedDyActivation:()=>Mc,getImageCenter:()=>Mh,getInnerMostAxes:()=>Pi,getPermuted:()=>Oh,getReductionAxes:()=>vi,getReshaped:()=>$h,getReshapedPermuted:()=>Ch,getSliceBeginCoords:()=>Bh,getSliceSize:()=>Rh,getUndoAxesPermutation:()=>Li,linspaceImpl:()=>ad,log:()=>Gh,mergeRealAndImagArrays:()=>Hh,prepareAndValidate:()=>Zs,prepareSplitSize:()=>zp,reshapeTensor:()=>rd,segment_util:()=>m,shouldFuse:()=>Cc,slice_util:()=>c,splitRealAndImagArrays:()=>Jh,tupleValuesAreOne:()=>ou,upcastType:()=>oa,validateInput:()=>eo,validateUpdateShape:()=>Qs,warn:()=>Kh});var g={};n.r(g),n.d(g,{nonMaxSuppressionV3Impl:()=>Zc,nonMaxSuppressionV4Impl:()=>Qc,nonMaxSuppressionV5Impl:()=>eh,split:()=>sd,tile:()=>od,topkImpl:()=>id,whereImpl:()=>rc});var b={};n.r(b),n.d(b,{Abs:()=>j,Acos:()=>U,Acosh:()=>K,AdadeltaOptimizer:()=>fi,AdagradOptimizer:()=>gi,AdamOptimizer:()=>xi,AdamaxOptimizer:()=>Ti,Add:()=>G,AddN:()=>H,All:()=>J,Any:()=>Y,ArgMax:()=>X,ArgMin:()=>Z,Asin:()=>Q,Asinh:()=>ee,Atan:()=>te,Atan2:()=>re,Atanh:()=>ne,AvgPool:()=>ae,AvgPool3D:()=>oe,AvgPool3DBackprop:()=>ie,AvgPoolBackprop:()=>se,BatchMatMul:()=>ue,BatchToSpaceND:()=>le,BroadcastTo:()=>pe,Cast:()=>ce,Ceil:()=>he,ClipByValue:()=>de,Complex:()=>me,Concat:()=>fe,Conv2D:()=>ye,Conv2DBackpropFilter:()=>ge,Conv2DBackpropInput:()=>be,Conv3D:()=>we,Conv3DBackpropFilterV2:()=>xe,Conv3DBackpropInputV2:()=>Ne,Cos:()=>ke,Cosh:()=>ve,CropAndResize:()=>Ee,Cumsum:()=>Se,DataStorage:()=>C,DepthToSpace:()=>Te,DepthwiseConv2dNative:()=>De,DepthwiseConv2dNativeBackpropFilter:()=>Ie,DepthwiseConv2dNativeBackpropInput:()=>Ae,Diag:()=>_e,Dilation2D:()=>Fe,Dilation2DBackpropFilter:()=>$e,Dilation2DBackpropInput:()=>Me,Div:()=>Oe,ENV:()=>V,Elu:()=>Ce,EluGrad:()=>Be,Environment:()=>z,Equal:()=>ze,Erf:()=>Re,Exp:()=>Le,Expm1:()=>Pe,FFT:()=>Ve,Fill:()=>qe,FlipLeftRight:()=>We,Floor:()=>je,FloorDiv:()=>Ue,FromPixels:()=>Dn,FusedBatchNorm:()=>Ke,FusedConv2D:()=>_n,FusedDepthwiseConv2D:()=>Fn,GatherNd:()=>He,GatherV2:()=>Ge,Greater:()=>Je,GreaterEqual:()=>Ye,IFFT:()=>Ze,Identity:()=>Xe,Imag:()=>Qe,IsFinite:()=>et,IsInf:()=>tt,IsNan:()=>nt,KernelBackend:()=>B,LRN:()=>ht,LRNBackprop:()=>dt,Less:()=>rt,LessEqual:()=>at,LinSpace:()=>st,Log:()=>ot,Log1p:()=>it,LogSoftmax:()=>ct,LogicalAnd:()=>ut,LogicalNot:()=>lt,LogicalOr:()=>pt,Max:()=>mt,MaxPool:()=>yt,MaxPool3D:()=>bt,MaxPool3DBackprop:()=>wt,MaxPoolBackprop:()=>gt,MaxPoolWithArgmax:()=>xt,Maximum:()=>ft,Mean:()=>Nt,Min:()=>kt,Minimum:()=>vt,Mod:()=>St,MomentumOptimizer:()=>Ii,Multiply:()=>Et,Negate:()=>Tt,NonMaxSuppressionV3:()=>It,NonMaxSuppressionV4:()=>At,NonMaxSuppressionV5:()=>_t,NotEqual:()=>Dt,OP_SCOPE_SUFFIX:()=>Ta,OneHot:()=>Mt,OnesLike:()=>Ft,Optimizer:()=>mi,PadV2:()=>$t,Pool:()=>Ot,Pow:()=>Ct,Prelu:()=>Bt,Prod:()=>Rt,RMSPropOptimizer:()=>Ai,Range:()=>zt,Rank:()=>ea,Real:()=>Lt,Reciprocal:()=>Pt,Reduction:()=>dh,Relu:()=>Vt,Relu6:()=>Gt,Reshape:()=>qt,ResizeBilinear:()=>Ut,ResizeBilinearGrad:()=>Kt,ResizeNearestNeighbor:()=>Wt,ResizeNearestNeighborGrad:()=>jt,Reverse:()=>Ht,RotateWithOffset:()=>In,Round:()=>Jt,Rsqrt:()=>Yt,SGDOptimizer:()=>Di,ScatterNd:()=>Xt,SelectV2:()=>Zt,Selu:()=>Qt,Sigmoid:()=>an,Sign:()=>rn,Sin:()=>tn,Sinh:()=>nn,Slice:()=>en,Softmax:()=>cn,Softplus:()=>sn,SpaceToBatchND:()=>ln,SparseToDense:()=>fn,SplitV:()=>pn,Sqrt:()=>on,Square:()=>dn,SquaredDifference:()=>hn,Step:()=>Tn,StridedSlice:()=>yn,Sub:()=>mn,Sum:()=>un,Tan:()=>gn,Tanh:()=>bn,Tensor:()=>Zr,TensorBuffer:()=>Hr,Tile:()=>wn,TopK:()=>xn,Transpose:()=>Nn,Unique:()=>kn,Unpack:()=>vn,UnsortedSegmentSum:()=>Sn,Variable:()=>Qr,ZerosLike:()=>En,_FusedMatMul:()=>An,abs:()=>Ni,acos:()=>_i,acosh:()=>Fi,add:()=>Qo,addN:()=>Mi,addStrict:()=>hc,all:()=>Vi,any:()=>qi,argMax:()=>Wi,argMin:()=>ji,asin:()=>Ui,asinh:()=>Ki,atan:()=>Gi,atan2:()=>Hi,atanh:()=>Ji,avgPool:()=>lu,avgPool3d:()=>pu,backend:()=>Xo,backend_util:()=>y,basicLSTMCell:()=>gu,batchNorm:()=>xu,batchNorm2d:()=>Nu,batchNorm3d:()=>ku,batchNorm4d:()=>vu,batchToSpaceND:()=>bu,booleanMaskAsync:()=>sc,broadcastTo:()=>Su,browser:()=>u,buffer:()=>ks,cast:()=>vs,ceil:()=>Eu,clipByValue:()=>Tu,clone:()=>Ss,complex:()=>Ia,concat:()=>du,concat1d:()=>Du,concat2d:()=>Iu,concat3d:()=>Au,concat4d:()=>_u,conv1d:()=>Mu,conv2d:()=>Fu,conv2dTranspose:()=>Ou,conv3d:()=>Cu,conv3dTranspose:()=>Ru,copyRegisteredKernels:()=>Vn,cos:()=>zu,cosh:()=>Lu,cosineWindow:()=>Ac,cumsum:()=>Pu,customGrad:()=>ci,deprecationWarn:()=>Co,depthToSpace:()=>Vu,depthwiseConv2d:()=>qu,device_util:()=>s,diag:()=>Wu,dilation2d:()=>ju,disableDeprecationWarnings:()=>Oo,dispose:()=>Vo,disposeVariables:()=>Bo,div:()=>ti,divNoNan:()=>Gu,divStrict:()=>dc,dot:()=>Hu,dropout:()=>Dc,elu:()=>Ju,enableDebugMode:()=>$o,enableProdMode:()=>Mo,enclosingPowerOfTwo:()=>Ic,engine:()=>Ro,env:()=>L,equal:()=>Uu,equalStrict:()=>oc,erf:()=>Yu,exp:()=>Xu,expandDims:()=>Zu,expm1:()=>Qu,eye:()=>tl,fft:()=>Cp,fill:()=>yi,findBackend:()=>Ho,findBackendFactory:()=>Jo,floor:()=>nl,floorDiv:()=>ei,fused:()=>f,gather:()=>ul,gatherND:()=>Tc,gather_util:()=>l,getBackend:()=>Ko,getGradient:()=>Cn,getKernel:()=>On,getKernelsForBackend:()=>Bn,grad:()=>oi,grads:()=>ii,greater:()=>ll,greaterEqual:()=>pl,greaterEqualStrict:()=>ic,greaterStrict:()=>uc,ifft:()=>Bp,imag:()=>cl,image:()=>Eh,inTopKAsync:()=>_c,io:()=>o,irfft:()=>Rp,isFinite:()=>hl,isInf:()=>dl,isNaN:()=>ml,keep:()=>qo,kernel_impls:()=>g,leakyRelu:()=>fl,less:()=>yl,lessEqual:()=>gl,lessEqualStrict:()=>lc,lessStrict:()=>pc,linalg:()=>Th,linspace:()=>bl,localResponseNormalization:()=>wl,log:()=>xl,log1p:()=>Nl,logSigmoid:()=>Sl,logSoftmax:()=>Dl,logSumExp:()=>Il,logicalAnd:()=>Al,logicalNot:()=>_l,logicalOr:()=>Fl,logicalXor:()=>Ml,losses:()=>Dh,matMul:()=>js,math:()=>i,max:()=>El,maxPool:()=>$l,maxPool3d:()=>Ol,maxPoolWithArgmax:()=>Cl,maximum:()=>Ei,maximumStrict:()=>mc,mean:()=>zl,memory:()=>zo,min:()=>Ll,minimum:()=>Pl,minimumStrict:()=>fc,mod:()=>Vl,modStrict:()=>yc,moments:()=>ql,movingAverage:()=>vc,mul:()=>ni,mulStrict:()=>gc,multiRNNCell:()=>Wl,multinomial:()=>jl,neg:()=>kl,nextFrame:()=>Fh,norm:()=>kc,notEqual:()=>Ul,notEqualStrict:()=>cc,oneHot:()=>Us,ones:()=>Rl,onesLike:()=>Gl,op:()=>Da,outerProduct:()=>Hl,pad:()=>Jl,pad1d:()=>Yl,pad2d:()=>Xl,pad3d:()=>Zl,pad4d:()=>Ql,pool:()=>tp,pow:()=>bi,powStrict:()=>bc,prelu:()=>np,print:()=>Es,prod:()=>rp,profile:()=>Lo,rand:()=>ap,randomGamma:()=>lp,randomNormal:()=>pp,randomUniform:()=>cp,range:()=>dp,ready:()=>Uo,real:()=>Kl,reciprocal:()=>mp,registerBackend:()=>Yo,registerGradient:()=>zn,registerKernel:()=>Rn,relu:()=>fp,relu6:()=>yp,removeBackend:()=>Go,reshape:()=>Ws,reverse:()=>gp,reverse1d:()=>bp,reverse2d:()=>wp,reverse3d:()=>xp,reverse4d:()=>Np,rfft:()=>Pp,round:()=>kp,rsqrt:()=>vp,scalar:()=>di,scatterND:()=>Sc,scatter_util:()=>p,selu:()=>Sp,separableConv2d:()=>Ep,serialization:()=>h,setBackend:()=>jo,setPlatform:()=>Zo,setdiff1dAsync:()=>Tp,sigmoid:()=>mu,sign:()=>Dp,signal:()=>Sh,sin:()=>Ip,sinh:()=>Ap,slice:()=>fu,slice1d:()=>_p,slice2d:()=>Fp,slice3d:()=>Mp,slice4d:()=>$p,slice_util:()=>c,softmax:()=>Op,softplus:()=>vl,spaceToBatchND:()=>ep,sparseToDense:()=>Ec,spectral:()=>vh,split:()=>Lp,sqrt:()=>ri,square:()=>ai,squaredDifference:()=>Vp,squaredDifferenceStrict:()=>wc,squeeze:()=>qp,stack:()=>Wp,step:()=>jp,stridedSlice:()=>Up,sub:()=>wi,subStrict:()=>xc,sum:()=>Tl,sumOutType:()=>ia,tan:()=>Kp,tanh:()=>yu,tensor:()=>_a,tensor1d:()=>hp,tensor2d:()=>Gp,tensor3d:()=>Hs,tensor4d:()=>Hp,tensor5d:()=>Jp,tensor6d:()=>Yp,tensor_util:()=>a,test_util:()=>d,tidy:()=>Po,tile:()=>el,time:()=>Wo,topk:()=>Xp,train:()=>Ah,transpose:()=>Ks,truncatedNormal:()=>Zp,unique:()=>Qp,unregisterGradient:()=>Pn,unregisterKernel:()=>Ln,unsortedSegmentSum:()=>ec,unstack:()=>tc,upcastType:()=>oa,util:()=>r,valueAndGrad:()=>ui,valueAndGrads:()=>li,variable:()=>nc,variableGrads:()=>pi,version_core:()=>Fo,where:()=>Ku,whereAsync:()=>ac,zeros:()=>Bl,zerosLike:()=>si});var w={};n.r(w),n.d(w,{json:()=>Im});var x={};n.r(x),n.d(x,{json:()=>Am});var N={};n.r(N),n.d(N,{json:()=>_m});var k={};n.r(k),n.d(k,{json:()=>Fm});var v={};n.r(v),n.d(v,{json:()=>Mm});var S={};n.r(S),n.d(S,{json:()=>$m});var E={};n.r(E),n.d(E,{json:()=>Om});var T={};n.r(T),n.d(T,{json:()=>Cm});var D={};n.r(D),n.d(D,{json:()=>Bm});var I={};n.r(I),n.d(I,{json:()=>Rm});var A={};n.r(A),n.d(A,{json:()=>zm});var _={};n.r(_),n.d(_,{json:()=>Lm});var F={};n.r(F),n.d(F,{json:()=>Pm});var M={};n.r(M),n.d(M,{json:()=>Vm});var $={};n.r($),n.d($,{json:()=>qm});var O={};n.r(O),n.d(O,{json:()=>Wm});class C{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class B{time(e){return R("time")}read(e){return R("read")}readSync(e){return R("readSync")}numDataIds(){return R("numDataIds")}disposeData(e){return R("disposeData")}write(e,t,n){return R("write")}move(e,t,n,r){return R("move")}memory(){return R("memory")}floatPrecision(){return R("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return R("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:a,activation:s,preluActivationWeights:o}){return R("fusedBatchMatMul")}slice(e,t,n){return R("slice")}stridedSlice(e,t,n,r){return R("stridedSlice")}unstack(e,t){return R("unstack")}reverse(e,t){return R("reverse")}concat(e,t){return R("concat")}neg(e){return R("neg")}add(e,t){return R("add")}addN(e){return R("addN")}subtract(e,t){return R("subtract")}multiply(e,t){return R("multiply")}realDivide(e,t){return R("realDivide")}floorDiv(e,t){return R("floorDiv")}sum(e,t){return R("sum")}prod(e,t){return R("prod")}unsortedSegmentSum(e,t,n){return R("unsortedSegmentSum")}argMin(e,t){return R("argMin")}argMax(e,t){return R("argMax")}equal(e,t){return R("equal")}notEqual(e,t){return R("notEqual")}less(e,t){return R("less")}lessEqual(e,t){return R("lessEqual")}greater(e,t){return R("greater")}greaterEqual(e,t){return R("greaterEqual")}logicalNot(e){return R("logicalNot")}logicalAnd(e,t){return R("logicalAnd")}logicalOr(e,t){return R("logicalOr")}where(e){return R("where")}select(e,t,n){return R("select")}topk(e,t,n){return R("topk")}min(e,t){return R("min")}minimum(e,t){return R("minimum")}mod(e,t){return R("mod")}max(e,t){return R("max")}maximum(e,t){return R("maximum")}all(e,t){return R("all")}any(e,t){return R("any")}squaredDifference(e,t){return R("squaredDifference")}ceil(e){return R("ceil")}floor(e){return R("floor")}round(e){return R("round")}sign(e){return R("sign")}isNaN(e){return R("isNaN")}isInf(e){return R("isInf")}isFinite(e){return R("isFinite")}pow(e,t){return R("pow")}exp(e){return R("exp")}expm1(e){return R("expm1")}softmax(e,t){return R("softmax")}log(e){return R("log")}log1p(e){return R("log1p")}sqrt(e){return R("sqrt")}rsqrt(e){return R("rsqrt")}square(e){return R("square")}reciprocal(e){return R("reciprocal")}relu(e){return R("relu")}relu6(e){return R("relu6")}prelu(e,t){return R("prelu")}elu(e){return R("elu")}eluDer(e,t){return R("eluDer")}selu(e){return R("selu")}int(e){return R("int")}clip(e,t,n){return R("clip")}abs(e){return R("abs")}complexAbs(e){return R("complexAbs")}sigmoid(e){return R("sigmoid")}softplus(e){return R("softplus")}sin(e){return R("sin")}cos(e){return R("cos")}tan(e){return R("tan")}asin(e){return R("asin")}acos(e){return R("acos")}atan(e){return R("atan")}atan2(e,t){return R("atan2")}sinh(e){return R("sinh")}cosh(e){return R("cosh")}tanh(e){return R("tanh")}asinh(e){return R("asinh")}acosh(e){return R("acosh")}atanh(e){return R("atanh")}erf(e){return R("erf")}step(e,t){return R("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){return R("fusedConv2d")}conv2d(e,t,n){return R("conv2d")}conv2dDerInput(e,t,n){return R("conv2dDerInput")}conv2dDerFilter(e,t,n){return R("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){return R("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return R("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return R("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return R("depthwiseConv2DDerFilter")}conv3d(e,t,n){return R("conv3d")}conv3dDerInput(e,t,n){return R("conv3dDerInput")}conv3dDerFilter(e,t,n){return R("conv3dDerFilter")}maxPool(e,t){return R("maxPool")}maxPoolBackprop(e,t,n,r){return R("maxPoolBackprop")}avgPool(e,t){return R("avgPool")}avgPoolBackprop(e,t,n){return R("avgPoolBackprop")}avgPool3d(e,t){return R("avgPool3d")}avgPool3dBackprop(e,t,n){return R("avgPool3dBackprop")}maxPool3d(e,t){return R("maxPool3d")}maxPool3dBackprop(e,t,n,r){return R("maxPool3dBackprop")}reshape(e,t){return R("reshape")}cast(e,t){return R("cast")}tile(e,t){return R("tile")}pad(e,t,n){return R("pad")}transpose(e,t){return R("transpose")}gather(e,t,n){return R("gather")}gatherND(e,t){return R("gatherND")}scatterND(e,t,n){return R("scatterND")}batchToSpaceND(e,t,n){return R("batchToSpaceND")}spaceToBatchND(e,t,n){return R("spaceToBatchND")}resizeBilinear(e,t,n,r){return R("resizeBilinear")}resizeBilinearBackprop(e,t,n){return R("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r){return R("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return R("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,a,s){return R("batchNorm")}localResponseNormalization4D(e,t,n,r,a){return R("localResponseNormalization4D")}LRNGrad(e,t,n,r,a,s,o){return R("LRNGrad")}multinomial(e,t,n,r){return R("multinomial")}oneHot(e,t,n,r){return R("oneHot")}cumsum(e,t,n,r){return R("cumsum")}nonMaxSuppression(e,t,n,r,a){return R("nonMaxSuppression")}fft(e){return R("fft")}ifft(e){return R("ifft")}complex(e,t){return R("complex")}real(e){return R("real")}imag(e){return R("imag")}cropAndResize(e,t,n,r,a,s){return R("cropAndResize")}depthToSpace(e,t,n){return R("depthToSpace")}split(e,t,n){return R("split")}sparseToDense(e,t,n,r){return R("sparseToDense")}diag(e){return R("diag")}fill(e,t,n){return R("fill")}onesLike(e){return R("onesLike")}zerosLike(e){return R("zerosLike")}linspace(e,t,n){return R("linspace")}dispose(){return R("dispose")}}function R(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}class z{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(t instanceof Promise)throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function L(){return V}let P,V=null;function q(){if(null==P){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}P=e}return P}function W(e,t){const n=function(){const e=q();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const j="Abs",U="Acos",K="Acosh",G="Add",H="AddN",J="All",Y="Any",X="ArgMax",Z="ArgMin",Q="Asin",ee="Asinh",te="Atan",ne="Atanh",re="Atan2",ae="AvgPool",se="AvgPoolBackprop",oe="AvgPool3D",ie="AvgPool3DBackprop",ue="BatchMatMul",le="BatchToSpaceND",pe="BroadcastTo",ce="Cast",he="Ceil",de="ClipByValue",me="Complex",fe="Concat",ye="Conv2D",ge="Conv2DBackpropFilter",be="Conv2DBackpropInput",we="Conv3D",xe="Conv3DBackpropFilterV2",Ne="Conv3DBackpropInputV2",ke="Cos",ve="Cosh",Se="Cumsum",Ee="CropAndResize",Te="DepthToSpace",De="DepthwiseConv2dNative",Ie="DepthwiseConv2dNativeBackpropFilter",Ae="DepthwiseConv2dNativeBackpropInput",_e="Diag",Fe="Dilation2D",Me="Dilation2DBackpropInput",$e="Dilation2DBackpropFilter",Oe="Div",Ce="Elu",Be="EluGrad",Re="Erf",ze="Equal",Le="Exp",Pe="Expm1",Ve="FFT",qe="Fill",We="FlipLeftRight",je="Floor",Ue="FloorDiv",Ke="FusedBatchNorm",Ge="GatherV2",He="GatherNd",Je="Greater",Ye="GreaterEqual",Xe="Identity",Ze="IFFT",Qe="Imag",et="IsFinite",tt="IsInf",nt="IsNan",rt="Less",at="LessEqual",st="LinSpace",ot="Log",it="Log1p",ut="LogicalAnd",lt="LogicalNot",pt="LogicalOr",ct="LogSoftmax",ht="LRN",dt="LRNBackprop",mt="Max",ft="Maximum",yt="MaxPool",gt="MaxPoolBackprop",bt="MaxPool3D",wt="MaxPool3DBackprop",xt="MaxPoolWithArgmax",Nt="Mean",kt="Min",vt="Minimum",St="Mod",Et="Multiply",Tt="Negate",Dt="NotEqual",It="NonMaxSuppressionV3",At="NonMaxSuppressionV4",_t="NonMaxSuppressionV5",Ft="OnesLike",Mt="OneHot",$t="PadV2",Ot="Pool",Ct="Pow",Bt="Prelu",Rt="Prod",zt="Range",Lt="Real",Pt="Reciprocal",Vt="Relu",qt="Reshape",Wt="ResizeNearestNeighbor",jt="ResizeNearestNeighborGrad",Ut="ResizeBilinear",Kt="ResizeBilinearGrad",Gt="Relu6",Ht="Reverse",Jt="Round",Yt="Rsqrt",Xt="ScatterNd",Zt="SelectV2",Qt="Selu",en="Slice",tn="Sin",nn="Sinh",rn="Sign",an="Sigmoid",sn="Softplus",on="Sqrt",un="Sum",ln="SpaceToBatchND",pn="SplitV",cn="Softmax",hn="SquaredDifference",dn="Square",mn="Sub",fn="SparseToDense",yn="StridedSlice",gn="Tan",bn="Tanh",wn="Tile",xn="TopK",Nn="Transpose",kn="Unique",vn="Unpack",Sn="UnsortedSegmentSum",En="ZerosLike",Tn="Step",Dn="FromPixels",In="RotateWithOffset",An="_FusedMatMul",_n="FusedConv2D",Fn="FusedDepthwiseConv2D",Mn=W("kernelRegistry",(()=>new Map)),$n=W("gradRegistry",(()=>new Map));function On(e,t){const n=qn(e,t);return Mn.get(n)}function Cn(e){return $n.get(e)}function Bn(e){const t=Mn.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function Rn(e){const{kernelName:t,backendName:n}=e,r=qn(t,n);Mn.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Mn.set(r,e)}function zn(e){const{kernelName:t}=e;$n.has(t)&&L().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),$n.set(t,e)}function Ln(e,t){const n=qn(e,t);if(!Mn.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Mn.delete(n)}function Pn(e){if(!$n.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);$n.delete(e)}function Vn(e,t){Bn(e).forEach((e=>{Rn(Object.assign({},e,{backendName:t}))}))}function qn(e,t){return`${t}_${e}`}function Wn(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function jn(e,t,n){return Math.max(e,Math.min(t,n))}function Un(e){return e%2==0?e:e+1}function Kn(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function Gn(e,t){const n=Math.random();return t*n+(1-n)*e}function Hn(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function Jn(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Yn(e,t,n=""){Jn(tr(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function Xn(e){Jn(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Zn(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||yr(e)&&!n)for(let r=0;r<e.length;++r)Zn(e[r],t,n);else t.push(e);return t}function Qn(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function er(e){return 0===e.length}function tr(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function nr(e){return e%1==0}function rr(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function ar(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function sr(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Wn(t),t}function or(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ir(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const o=()=>{if(e())return void r();s++;const i=t(s);null!=n&&s>=n?a():setTimeout(o,i)};o()}))}function ur(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function lr(e,t){const n=t.length;return Jn((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e)),Jn(e.every((e=>nr(e))),(()=>"All values in axis param must be integers but got axis "+e)),e.map((e=>e<0?n+e:e))}function pr(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:lr(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[o]||s[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function cr(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function hr(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function dr(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function mr(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function fr(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function yr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function gr(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function br(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function wr(e){return"string"==typeof e||e instanceof String}function xr(e){return"boolean"==typeof e}function Nr(e){return"number"==typeof e}function kr(e){return Array.isArray(e)?kr(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Nr(e)?"float32":wr(e)?"string":xr(e)?"bool":"float32"}function vr(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Sr(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Er(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Tr(e,t){return"string"===t?Br(e):Dr([e],t)}function Dr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Zn(e)),L().getBool("DEBUG")&&dr(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function Ir(e,t,n){const r=new Array;if(1===t.length){const a=t[0];for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],s=t.slice(1),o=s.reduce(((e,t)=>e*t));for(let t=0;t<a;t++)r[t]=Ir(e+t*o,s,n)}return r}function Ar(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return Ir(0,e,t)}function _r(e,t){const n=Fr(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Fr(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function Mr(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Ar(e,new Float32Array(n));if("int32"===t)return Ar(e,new Int32Array(n));if("bool"===t)return Ar(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function $r(){return L().platform.now()}function Or(e){e.forEach((t=>{Jn(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Cr(e,t){return L().platform.fetch(e,t)}function Br(e,t="utf-8"){return t=t||"utf-8",L().platform.encode(e,t)}function Rr(e,t="utf-8"){return t=t||"utf-8",L().platform.decode(e,t)}function zr(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Lr(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}class Pr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new qr)}profileKernel(e,t,n){let r;const a=this.backendTimer.time((()=>{r=n()}));for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Vr(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function Vr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class qr{logKernelProfile(e,t,n,r,a,s){const o="number"==typeof r?or(r+"ms",9):r.error,i=or(e,25),u=t.rank,l=t.size,p=or(t.shape.toString(),14);let c="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;c+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${p}\t%c${l}\t%c${c}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Wr(e,t,n,r){const a=Er(t),s=function(e,t,n,r){const a=Qn(t),s=r[r.length-1],o=new Array(s).fill(0),i=t.length,u="complex64"===n?Gr(e):e;if(i>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)o[e]=Math.max(o[e],jr(u[t+e],0,n).length)}return o}(e,t,n,a),o=t.length,i=Kr(e,t,n,a,s),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+o),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map((e=>"    "+e)).join("\n")),u.join("\n")}function jr(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":wr(e)?`'${e}'`:"bool"===n?Ur(e):parseFloat(e.toFixed(7)).toString(),or(r,t)}function Ur(e){return 0===e?"false":"true"}function Kr(e,t,n,r,a,s=!0){const o="complex64"===n?2:1,i=t[0],u=t.length;if(0===u)return"complex64"===n?[jr(Gr(e)[0],0,n)]:"bool"===n?[Ur(e[0])]:[e[0].toString()];if(1===u){if(i>20){const t=3*o;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((i-3)*o,i*o));return"complex64"===n&&(r=Gr(r),s=Gr(s)),["["+r.map(((e,t)=>jr(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>jr(e,a[i-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Gr(e):Array.from(e)).map(((e,t)=>jr(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),p=r.slice(1),c=r[0]*o,h=[];if(i>20){for(let t=0;t<3;t++){const r=t*c,s=r+c;h.push(...Kr(e.slice(r,s),l,n,p,a,!1))}h.push("...");for(let t=i-3;t<i;t++){const r=t*c,s=r+c;h.push(...Kr(e.slice(r,s),l,n,p,a,t===i-1))}}else for(let t=0;t<i;t++){const r=t*c,s=r+c;h.push(...Kr(e.slice(r,s),l,n,p,a,t===i-1))}const d=2===u?",":"";h[0]="["+h[0]+d;for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+d;let m=",\n";for(let e=2;e<u;e++)m+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":m),h}function Gr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Hr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Qn(e),null!=n){const e=n.length;Jn(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||hr(t,this.size),this.strides=Er(e)}set(e,...t){0===t.length&&(t=[0]),Jn(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Jr().makeTensor(this.values,this.shape,this.dtype)}}let Jr=null,Yr=null,Xr=null;class Zr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Qn(e),this.strides=Er(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Yr.buffer(this.shape,this.dtype,e)}bufferSync(){return Yr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Ar(this.shape,e)}arraySync(){return Ar(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=Jr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Rr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Jr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Rr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Jr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Jr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Yr.print(this,e)}clone(){return this.throwIfDisposed(),Yr.clone(this)}toString(e=!1){return Wr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Yr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Jr().makeVariable(this,e,t,n)}}Object.defineProperty(Zr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class Qr extends Zr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!tr(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Jr().disposeTensor(this),this.dataId=e.dataId,Jr().incRef(this,null)}dispose(){Jr().disposeVariable(this),this.isDisposedInternal=!0}}var ea,ta,na,ra,aa;Object.defineProperty(Qr,Symbol.hasInstance,{value:e=>e instanceof Zr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ea||(ea={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ta||(ta={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(na||(na={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ra||(ra={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(aa||(aa={}));const sa={float32:ra,int32:ta,bool:na,complex64:aa};function oa(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return sa[e][t]}function ia(e){return oa(e,"int32")}function ua(e,t){if(e.dtype===t.dtype)return[e,t];const n=oa(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function la(e,t){Jn(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function pa(e,t){return t.some((t=>t.id===e.id))}function ca(e){const t=[];return ha(e,t,new Set),t}function ha(e,t,n){if(null==e)return;if(e instanceof Zr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),ha(r,t,n))}}class da{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ma{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new da}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Pr(this.backendInstance),!0}setupRegisteredKernels(){Bn(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Bn(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof B||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ma.nextTensorId++}nextVariableId(){return ma.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return ya.runKernelFunc((n=>n.cast(e,t)),n,null,ce,r)}})),[],{}),t}runKernel(e,t,n,r,a){return this.runKernelFunc(null,t,null,e,n,r,a)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,a,s,o){let i,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const p=this.state.numBytes,c=this.state.numTensors;let h;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const d=On(r,this.backendName);let m,f;if(null!=d)h=()=>{const e=this.backend.numDataIds();m=d.kernelFunc({inputs:t,attrs:a,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const i=n.map((({dataId:e,shape:t,dtype:n})=>this.makeTensorFromDataId(e,t,n)));if(l){let e=this.getTensorsForGradient(r,t,i);if(null==e){null==o&&(o=[]);const t=i.filter(((e,t)=>o[t]));e=(s||[]).slice().concat(t)}u=this.saveTensorsForBackwardMode(e)}return i};else{const t=e=>{l&&(u=e.map((e=>this.keep(this.clone(e)))))};h=()=>{const n=this.backend.numDataIds();m=this.tidy((()=>e(this.backend,t)));const a=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,a),a}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(r,t,(()=>h())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),i=f.outputs):i=h()})),l&&this.addTapeNode(r,t,i,n,u,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-p,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-c,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((e=>null!=t[e]?t[e].shape:null)),outputShapes:i.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(m)?i:i[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Cn(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(Jn(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>a[t]));return s.concat(o)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&wr(e[0])&&(a=e.map((e=>Br(e))));const s=r.write(a,t,n),o=new Zr(t,n,s,this.nextTensorId());if(this.incRef(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=br(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const a=new Zr(t,n=n||"float32",e,this.nextTensorId());return this.incRef(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Qr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*gr(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof Qr||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},i=Cn(e);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Fr(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ca(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(Jn(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Jn(a instanceof Zr,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],o=s.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),i=!0,a[s.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=_r(Qn(e),"float32");return ya.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n((()=>i[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!tr(a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),ga);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return Jn(vr(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;Jn(t.every((e=>e instanceof Zr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc(((r,a)=>(n=e(...t,a),Jn(n.value instanceof Zr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Jn(vr(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];Jn(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Jn(s.every((e=>e instanceof Zr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((e,t)=>{o[t]=()=>e})),o}))}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=$r(),n=await this.backend.time(e);return n.wallMs=$r()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new da;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function fa(){const e=q();if(null==e._tfengine){const t=new z(e);e._tfengine=new ma(t)}var t;return t=e._tfengine.ENV,V=t,Jr=()=>e._tfengine,e._tfengine}ma.nextTensorId=0,ma.nextVariableId=0;const ya=fa();function ga(e,t){const n={a:e,b:t};return ya.runKernelFunc(((n,r)=>{const a=n.add(e,t);return r([e,t]),a}),n,null,G)}function ba(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function wa(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const xa=L();function Na(e,t){let n=e;if(yr(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||yr(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&L().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ka(e,r,[]),r}function ka(e,t,n){if(n=n||[],!Array.isArray(e)&&!yr(e))return void Jn(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Jn(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Jn(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)ka(e[t],r,n.concat(t))}function va(e,t,n,r){if(null!=e&&("numeric"!==e&&e!==t||"numeric"===e&&"string"===t))throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}function Sa(e,t,n,r="numeric"){if(e instanceof Zr)return va(r,e.dtype,t,n),e;let a=kr(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),va(r,a,t,n),null==e||!yr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Na(e,a);yr(e)||Array.isArray(e)||(e=[e]);const o="string"!==a?Dr(e,a):Zn(e,[],!0);return ya.makeTensor(o,s,a)}function Ea(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>Sa(e,`${t}[${r}]`,n)),r)}xa.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),xa.registerFlag("IS_BROWSER",(()=>wa())),xa.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),xa.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),xa.registerFlag("PROD",(()=>!1)),xa.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>xa.getBool("DEBUG"))),xa.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),xa.registerFlag("IS_TEST",(()=>!1));const Ta="__op";function Da(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ta;const a=(...e)=>{ya.startScope(n);try{const t=r(...e);return t instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),ya.endScope(t),t}catch(e){throw ya.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}const Ia=Da({complex_:function(e,t){const n=Sa(e,"real","complex"),r=Sa(t,"imag","complex");Yn(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return ya.runKernelFunc((e=>e.complex(n,r)),a,null,me)}});function Aa(e,t,n,r){if(null==r&&(r=kr(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!yr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Or(t);const e=Qn(t),r=Qn(n);Jn(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==Qn(t.slice(e));Jn(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return yr(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Dr(e,r):Zn(e,[],!0),ya.makeTensor(e,t,r)}function _a(e,t,n){return Aa(e,t,Na(e,n),n)}const Fa={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ma(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const o=a[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:Oa(await Promise.all(r)),specs:n}}function $a(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,o=s.dtype,i=s.shape,u=Qn(i);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=Fa[n.dtype],p=e.slice(a,a+u*i),c="uint8"===n.dtype?new Uint8Array(p):new Uint16Array(p);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Pa()),l=r(c)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*i}else if("string"===o){const t=Qn(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=Fa[o],s=e.slice(a,a+u*r);if("float32"===o)l=new Float32Array(s);else if("int32"===o)l=new Int32Array(s);else if("bool"===o)l=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=_a(e,i,"float32"),o=_a(r,i,"float32");n[t]=Ia(a,o)}}a+=u*r}"complex64"!==o&&(n[t]=_a(l,i,o))}return n}function Oa(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const Ca="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ba(e){return Ca?Buffer.byteLength(e):new Blob([e]).size}function Ra(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function za(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function La(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ba(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ba(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Pa(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const o=r[a],i=e[n[o>>10]+(1023&o)]+t[o>>10];s[a]=i}return new Float32Array(a)}}class Va{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Va.instance&&(Va.instance=new Va),Va.instance}static registerSaveRouter(e){Va.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Va.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Va.getHandlers(e,"save")}static getLoadHandlers(e,t){return Va.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Va.getInstance().loadRouters:Va.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const qa=e=>Va.registerSaveRouter(e),Wa=e=>Va.registerLoadRouter(e),ja=e=>Va.getSaveHandlers(e),Ua=(e,t)=>Va.getLoadHandlers(e,t),Ka="tensorflowjs",Ga="models_store",Ha="model_info_store";function Ja(){if(!L().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ya(e){const t=e.result;t.createObjectStore(Ga,{keyPath:"modelPath"}),t.createObjectStore(Ha,{keyPath:"modelPath"})}class Xa{constructor(e){if(this.indexedDB=Ja(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Ka,1);r.onupgradeneeded=()=>Ya(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(Ga,"readonly"),r=t.objectStore(Ga).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=La(t),s=a.transaction(Ha,"readwrite");let o=s.objectStore(Ha);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction(Ga,"readwrite");const i=u.objectStore(Ga).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=s.objectStore(Ha);const t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(i.error)),t.onerror=e=>(a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}Xa.URL_SCHEME="indexeddb://";const Za=e=>{return L().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Xa.URL_SCHEME)?(t=e.slice(Xa.URL_SCHEME.length),new Xa(t)):null;var t};Va.registerSaveRouter(Za),Va.registerLoadRouter(Za);class Qa{constructor(){this.indexedDB=Ja()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Ka,1);n.onupgradeneeded=()=>Ya(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(Ha,"readonly"),s=a.objectStore(Ha).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Xa.URL_SCHEME)?t.slice(Xa.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Ka,1);r.onupgradeneeded=()=>Ya(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(Ha,"readwrite"),o=s.objectStore(Ha),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{u=a.transaction(Ga,"readwrite");const r=u.objectStore(Ga).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const es="/",ts="tensorflowjs_models",ns="info",rs="model_topology",as="weight_specs",ss="weight_data",os="model_metadata";function is(e){return{info:[ts,e,ns].join(es),topology:[ts,e,rs].join(es),weightSpecs:[ts,e,as].join(es),weightData:[ts,e,ss].join(es),modelMetadata:[ts,e,os].join(es)}}function us(e){const t=e.split(es);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(es)}class ls{constructor(e){if(!L().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=is(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=La(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ca)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,t.userDefinedMetadata=e.userDefinedMetadata}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ca){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}ls.URL_SCHEME="localstorage://";const ps=e=>{return L().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ls.URL_SCHEME)?(t=e.slice(ls.URL_SCHEME.length),new ls(t)):null;var t};Va.registerSaveRouter(ps),Va.registerLoadRouter(ps);class cs{constructor(){Jn(L().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Jn("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ts+es,n=es+ns;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[us(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=is(e=(t=e).startsWith(ls.URL_SCHEME)?t.slice(ls.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const hs="://";class ds{constructor(){this.managers={}}static getInstance(){return null==ds.instance&&(ds.instance=new ds),ds.instance}static registerManager(e,t){Jn(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(hs)&&(e=e.slice(0,e.indexOf(hs))),Jn(e.length>0,(()=>"scheme must not be an empty string."));const n=ds.getInstance();Jn(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function ms(e){if(-1===e.indexOf(hs))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+ds.getSchemes().join(","));return{scheme:e.split(hs)[0],path:e.split(hs)[1]}}async function fs(e,t,n=!1){Jn(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Va.getLoadHandlers(e);Jn(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Jn(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=Va.getSaveHandlers(t);Jn(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Jn(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=s[0],i=ms(e).scheme,u=ms(e).path,l=i===ms(e).scheme,p=await a.load();n&&l&&await ds.getManager(i).removeModel(u);const c=await o.save(p);return n&&!l&&await ds.getManager(i).removeModel(u),c.modelArtifactsInfo}async function ys(){const e=ds.getSchemes(),t={};for(const n of e){const e=await ds.getManager(n).listModels();for(const r in e)t[n+hs+r]=e[r]}return t}async function gs(e){const t=ms(e);return ds.getManager(t.scheme).removeModel(t.path)}async function bs(e,t){return fs(e,t,!1)}async function ws(e,t){return fs(e,t,!0)}class xs{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(L().get("IS_BROWSER")){L().setPlatform("browser",new xs);try{ds.registerManager(ls.URL_SCHEME,new cs)}catch(e){}try{ds.registerManager(Xa.URL_SCHEME,new Qa)}catch(e){}}let Ns;function ks(e,t="float32",n){return t=t||"float32",Or(e),new Hr(e,t,n)}L().get("IS_NODE")&&L().setPlatform("node",new class{constructor(){this.util=n(61758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=L().global.fetch?L().global.fetch(e,t):(null==Ns&&(Ns=n(78352)),Ns(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const vs=Da({cast_:function(e,t){const n=Sa(e,"x","cast");if(!mr(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return ya.runKernelFunc((e=>e.cast(n,t)),r,null,ce,a)}}),Ss=Da({clone_:function(e){const t=Sa(e,"x","clone",null),n={x:t};return ya.runKernelFunc((()=>ya.makeTensorFromDataId(t.dataId,t.shape,t.dtype)),n,null,Xe)}});function Es(e,t=!1){console.log(e.toString(t))}function Ts(e){return new Promise((e=>setTimeout(e))).then(e)}fa(),Yr={buffer:ks,cast:vs,clone:Ss,print:Es};class Ds{constructor(e){if(!L().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ds.URL_SCHEME)&&(e=e.slice(Ds.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await Ts((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ts((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:La(e)}}}}Ds.URL_SCHEME="downloads://";class Is{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise(((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),o=s.modelTopology;if(null==o)return void r(new Error("modelTopology field is missing from file "+e.name));0===t.length&&n({modelTopology:o});const i=s.weightsManifest;if(null==i)return void r(new Error("weightManifest field is missing from file "+e.name));let u;try{u=this.checkManifestAndWeightFiles(i,t)}catch(e){return void r(e)}const l=[],p=[],c=[];i.forEach((e=>{e.paths.forEach((e=>{p.push(e),c.push(null)})),l.push(...e.weights)})),i.forEach((e=>{e.paths.forEach((e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,a=p.indexOf(e);c[a]=r,-1===c.indexOf(null)&&n({modelTopology:o,weightSpecs:l,weightData:Ra(c),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,userDefinedMetadata:s.userDefinedMetadata})},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])}))}))},a.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(e)}))}checkManifestAndWeightFiles(e,t){const n=[],r=t.map((e=>za(e.name))),a={};for(const s of e)s.paths.forEach((e=>{const s=za(e);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[e]=t[r.indexOf(s)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return a}}function As(e){return new Is(e)}function _s(e,t,n,r){!function(e){Jn(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Jn(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but got startFraction "+e)),Jn(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but got endFraction "+t)),Jn(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++a/e.length*(r-n);return t(o),s})),s))))}async function Fs(e,t){null==t&&(t={});const n=null==t.fetchFunc?L().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await _s(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await _s(a,t.onProgress,.5,1)}async function Ms(e,t="",n,r){return $s((e=>Fs(e,{requestInit:r})))(e,t,n)}function $s(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=Fa[u]*Qn(e.shape),p=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(p(),o[n]=!0)})):p(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error("Could not find weights in manifest with names: "+e.join(", ")+". \nManifest JSON has weights with names: "+i.join(", ")+".")}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const p=await e(l),c={};let h=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=p[h+e].byteLength;const a=new ArrayBuffer(r),o=new Uint8Array(a);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(p[h+e]);o.set(t,i),i+=t.byteLength}s[e].forEach((e=>{const t=$a(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)c[e]=t[e]})),h+=n})),c}}Va.registerSaveRouter((e=>L().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ds.URL_SCHEME)?function(e="model"){return new Ds(e)}(e.slice(Ds.URL_SCHEME.length)):null));class Os{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Jn("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=L().platform.fetch,Jn(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Jn(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n};t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:La(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,o=t.format,i=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const e=await this.loadWeights(r);[u,l]=e}const p={modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:i,generatedBy:a,convertedBy:s,format:o},c=t.modelInitializer;return c&&(p.modelInitializer=c),p}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(a+e+r);return this.weightUrlConverter&&o.push(...await Promise.all(i)),[s,Ra(await Fs(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Cs(e){return null!=e.match(Os.URL_SCHEME_REGEX)}Os.URL_SCHEME_REGEX=/^https?:\/\//;const Bs=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Cs(e))):Cs(e),n)return Rs(e,t)}return null};function Rs(e,t){return new Os(e,t)}function zs(e,t){return Rs(e,t)}Va.registerSaveRouter(Bs),Va.registerLoadRouter(Bs);class Ls{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Ps{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Vs(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Ls(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ls({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ls({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function qs(e){return new Ps(e)}const Ws=Da({reshape_:function(e,t){const n=Sa(e,"x","reshape",null),r={x:n},a={shape:t};return ya.runKernelFunc(((e,r)=>(t=ur(t,n.size),Jn(n.size===Qn(t),(()=>"new shape and old shape must have the same number of elements.")),r([n]),e.reshape(n,t))),r,null,qt,a)}}),js=Da({matMul_:function(e,t,n=!1,r=!1){let a=Sa(e,"a","matMul"),s=Sa(t,"b","matMul");[a,s]=ua(a,s),Jn(a.rank>=2&&s.rank>=2&&a.rank===s.rank,(()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${a.rank} and ${s.rank}.`));const o=n?a.shape[a.rank-2]:a.shape[a.rank-1],i=r?s.shape[s.rank-1]:s.shape[s.rank-2],u=n?a.shape[a.rank-1]:a.shape[a.rank-2],l=r?s.shape[s.rank-2]:s.shape[s.rank-1],p=a.shape.slice(0,-2),c=s.shape.slice(0,-2),h=Qn(p),d=Qn(c);Jn(tr(p,c),(()=>`Error in matMul: outer dimensions (${p}) and (${c}) of Tensors with shapes ${a.shape} and `+s.shape+" must match.")),Jn(o===i,(()=>`Error in matMul: inner shapes (${o}) and (${i}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${n} and transposeB=${r} must match.`));const m=a.shape.slice(0,-2).concat([u,l]),f=Ws(a,n?[h,o,u]:[h,u,o]),y=Ws(s,r?[d,l,i]:[d,i,l]),g={a:f,b:y},b={transposeA:n,transposeB:r},w=ya.runKernelFunc(((e,t)=>(t([f,y]),e.batchMatMul(f,y,n,r))),g,null,ue,b);return Ws(w,m)}}),Us=Da({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const a=Sa(e,"indices","oneHot","int32"),s=[...a.shape,t],o={indices:a},i={depth:t,onValue:n,offValue:r};return ya.runKernelFunc(((e,o)=>(o([a]),Ws(e.oneHot(Ws(a,[a.size]),t,n,r),s))),o,null,Mt,i)}}),Ks=Da({transpose_:function(e,t){const n=Sa(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),Jn(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{Jn(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return ya.runKernelFunc((e=>e.transpose(n,t)),r,null,Nn,a)}}),Gs=Da({confusionMatrix_:function(e,t,n){const r=Sa(e,"labels","confusionMatrix"),a=Sa(t,"predictions","confusionMatrix");Jn(null==n||n>0&&Number.isInteger(n),(()=>"If provided, numClasses must be a positive integer, but got "+n)),Jn(1===r.rank,(()=>"Expected the rank of labels to be 1, but got "+r.rank)),Jn(1===a.rank,(()=>"Expected the rank of predictions to be 1, but got "+a.rank)),Jn(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),Jn(n>0&&Number.isInteger(n),(()=>"numClasses is required to be a positive integer, but got "+n));const s=Us(vs(r,"int32"),n),o=Us(vs(a,"int32"),n),i=Ks(s);return vs(js(i,o),"int32")}});function Hs(e,t,n){if(Xn(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Na(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Aa(e,t,r,n)}let Js;async function Ys(e,t){let n=Sa(e,"img","toPixels");if(!(e instanceof Zr)){const e=n;n=vs(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=o[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*i,t[1]=a*i,t[2]=a*i):t[r]=a*i}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Xs=Da({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else{if(null==e.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=On(Dn,ya.backendName)){const n={pixels:e},r={numChannels:t};return ya.runKernel(Dn,n,r)}const[i,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,p;if(o?l=e.getContext("2d").getImageData(0,0,i,u).data:r||n?l=e.data:(s||a)&&(null==Js&&(Js=document.createElement("canvas").getContext("2d")),Js.canvas.width=i,Js.canvas.height=u,Js.drawImage(e,0,0,i,u),l=Js.getImageData(0,0,i,u).data),4===t)p=new Int32Array(l);else{const e=i*u;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=l[4*n+e]}return Hs(p,[u,i,t],"int32")}});function Zs(e,t){if(e.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[t.rank-1]>e.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[t.rank-1]} vs. ${e.rank}`);if(0===e.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const n=t.shape,r=n[n.length-1];let a=1;for(let e=0;e<n.length-1;++e)a*=n[e];const s=e.shape,o=n.slice();o.pop();let i=1;for(let t=r;t<e.rank;++t)i*=s[t],o.push(s[t]);const u=[...Er(e.shape).map((e=>e/i)),1].slice(0,r);return[o,a,i,u]}function Qs(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function eo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}Qs(n,t,e)}function to(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let o=1;for(let e=a;e<s;++e)o*=n[e];const i=a<1?1:a;return{sliceRank:a,numUpdates:Qn(t.shape)/i,sliceSize:o,strides:[...Er(n.slice(0,a)),1],outputSize:Qn(n)}}function no(e,t,n){const r=e.shape.length;Jn(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Jn(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)Jn(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function ro(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ao(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function so(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function oo(e,t,n){return n<=e?n:n-(t-1)}function io(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function uo(e,t,n,r,a,s,o,i,u){const l=e.length;let p=new Array(l),c=new Array(l),h=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;p=lo(o,u,l,r,e),c=po(i,u,l,a,e),h=so(s,u,l,e)}else for(let t=0;t<l;t++)p[t]=ho(o,r,s,e,t,u),c[t]=mo(i,a,s,e,t,u),h[t]=co(s,t,u);return{begin:p,end:c,strides:h}}function lo(e,t,n,r,a){const s=[...a],o=io(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=0;else{const o=oo(t,n,a);let i=r[o];e&1<<o&&(i=0),s[a]=i}return s}function po(e,t,n,r,a){const s=[...a],o=io(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const o=oo(t,n,a);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),s[a]=i}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=jn(0,s[e],a[e])}return s}function co(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function ho(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=jn(0,o,u-1),o}function mo(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=i>0?jn(0,o,u):jn(-1,o,u-1),o}function fo(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function yo(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function go(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{Jn(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(Jn(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}class bo{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class wo{constructor(){this.classNameMap={}}static getMap(){return null==wo.instance&&(wo.instance=new wo),wo.instance}static register(e){wo.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function xo(e){Jn(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Jn("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Jn(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),wo.register(e)}const No=.1;function ko(e,t,n){return null==n&&(n=vo()),So(e,t,((e,t)=>Io(e,t,n)))}function vo(){return 32===ya.backend.floatPrecision()?.001:No}function So(e,t,n){let r=!0;if((yr(e)||yr(t))&&(r=!1),yr(e)&&yr(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(e)&&Array.isArray(t)){const n=Na(e),r=Na(t);if(!tr(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=yr(e)?e:Zn(e),s=yr(t)?t:Zn(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Eo(e,t){e().then((()=>t.fail()),(()=>t()))}function To(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return wr(e)||wr(e[0])||wr(t)||wr(t[0])?So(e,n,((e,t)=>e==t)):So(e,t,((e,t)=>Io(e,t,0)))}function Do(e,t,n){if(null==n&&(n=vo()),!Io(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Io(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Ao(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function _o(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}const Fo="2.6.0";function Mo(){L().set("PROD",!0)}function $o(){L().set("DEBUG",!0)}function Oo(){L().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Co(e){L().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Bo(){ya.disposeVariables()}function Ro(){return ya}function zo(){return ya.memory()}function Lo(e){return ya.profile(e)}function Po(e,t){return ya.tidy(e,t)}function Vo(e){ca(e).forEach((e=>e.dispose()))}function qo(e){return ya.keep(e)}function Wo(e){return ya.time(e)}function jo(e){return ya.setBackend(e)}function Uo(){return ya.ready()}function Ko(){return ya.backendName}function Go(e){ya.removeBackend(e)}function Ho(e){return ya.findBackend(e)}function Jo(e){return ya.findBackendFactory(e)}function Yo(e,t,n=1){return ya.registerBackend(e,t,n)}function Xo(){return ya.backend}function Zo(e,t){L().setPlatform(e,t)}Xr=Co;const Qo=Da({add_:function(e,t){let n=Sa(e,"a","add"),r=Sa(t,"b","add");[n,r]=ua(n,r);const a={a:n,b:r};return ya.runKernelFunc(((e,t)=>{const a=e.add(n,r);return t([n,r]),a}),a,null,G)}}),ei=Da({floorDiv_:function(e,t){let n=Sa(e,"a","floorDiv"),r=Sa(t,"b","floorDiv");[n,r]=ua(n,r);const a={a:n,b:r};return ya.runKernelFunc(((e,t)=>{const a=e.floorDiv(n,r);return t([n,r]),a}),a,null,Ue)}}),ti=Da({div_:function(e,t){let n=Sa(e,"a","div"),r=Sa(t,"b","div");if([n,r]=ua(n,r),"int32"===n.dtype&&"int32"===r.dtype)return ei(n,r);const a={a:n,b:r};return ya.runKernelFunc(((e,t)=>{const a=e.realDivide(n,r);return t([n,r]),a}),a,null,Oe,{})}}),ni=Da({mul_:function(e,t){let n=Sa(e,"a","mul"),r=Sa(t,"b","mul");[n,r]=ua(n,r);const a={a:n,b:r};return ya.runKernelFunc(((e,t)=>{const a=e.multiply(n,r);return t([n,r]),a}),a,null,Et)}}),ri=Da({sqrt_:function(e){const t=Sa(e,"x","sqrt"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.sqrt(t);return n([t]),r}),n,null,on)}}),ai=Da({square_:function(e){const t=Sa(e,"x","square"),n=[t];return ya.runKernelFunc(((e,n)=>(n([t]),e.square(t))),{x:t},null,"Square",{},n,[])}}),si=Da({zerosLike_:function(e){const t=Sa(e,"x","zerosLike"),n={x:t};return ya.runKernelFunc((e=>e.zerosLike(t)),n,null,En)}});function oi(e){return Jn(vr(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Sa(t,"x","tf.grad",null),a=null!=n?Sa(n,"dy","tf.grad"):null;return ya.tidy((()=>{const{value:t,grads:n}=ya.gradients((()=>e(r)),[r],a);return null!=a&&Yn(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),hi(n),n[0]}))}}function ii(e){return Jn(vr(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{Jn(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Ea(t,"args","tf.grads",null),a=null!=n?Sa(n,"dy","tf.grads"):null;return ya.tidy((()=>{const{value:t,grads:n}=ya.gradients((()=>e(...r)),r,a);return null!=a&&Yn(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),hi(n),n}))}}function ui(e){return Jn(vr(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{Jn(t instanceof Zr,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Jn(null==n||n instanceof Zr,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:a}=ya.gradients((()=>e(t)),[t],n);return hi(r),{grad:r[0],value:a}}}function li(e){return Jn(vr(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{Jn(Array.isArray(t)&&t.every((e=>e instanceof Zr)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Jn(null==n||n instanceof Zr,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=ya.gradients((()=>e(...t)),t,n);return null!=n&&Yn(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),hi(r.grads),r}}function pi(e,t){Jn(vr(e),(()=>"The f passed in variableGrads(f) must be a function")),Jn(null==t||Array.isArray(t)&&t.every((e=>e instanceof Qr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ya.registeredVariables)t.push(ya.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;Jn((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:o}=ya.gradients(e,t,null,!0);Jn(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Jn(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=r&&r.forEach((e=>i[e.name]=null)),{value:s,grads:i}}function ci(e){return ya.customGrad(e)}function hi(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function di(e,t){if((yr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&yr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Aa(e,[],[],t)}class mi extends bo{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Vo(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return pi(e,t)}dispose(){null!=this.iterations_&&Vo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:di(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(mi,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class fi extends mi{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ya.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ya.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:Po((()=>si(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:Po((()=>si(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Po((()=>{const e=Qo(ni(s,this.rho),ni(ai(a),1-this.rho)),t=ni(ti(ri(Qo(o,this.epsilon)),ri(Qo(s,this.epsilon))),a),n=Qo(ni(o,this.rho),ni(ai(t),1-this.rho));s.assign(e),o.assign(n);const i=Qo(ni(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Vo(this.accumulatedGrads.map((e=>e.variable))),Vo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function yi(e,t,n){const r={shape:e,value:t,dtype:n};return ya.runKernelFunc((r=>r.fill(e,t,n)),{},null,qe,r)}fi.className="Adadelta",xo(fi);class gi extends mi{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ya.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:Po((()=>yi(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Po((()=>{const e=Qo(s,ai(a));s.assign(e);const t=Qo(ni(ti(a,ri(Qo(e,ya.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Vo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}gi.className="Adagrad",xo(gi);const bi=Da({pow_:function(e,t){let n=Sa(e,"base","pow"),r=Sa(t,"exp","pow");[n,r]=ua(n,r);const a={a:n,b:r};return ya.runKernelFunc(((e,t)=>{const a=e.pow(n,r);return t([n,r,a]),a}),a,null,Ct)}}),wi=Da({sub_:function(e,t){let n=Sa(e,"a","sub"),r=Sa(t,"b","sub");[n,r]=ua(n,r);const a={a:n,b:r};return ya.runKernelFunc(((e,t)=>{const a=e.subtract(n,r);return t([n,r]),a}),a,null,mn)}});class xi extends mi{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Po((()=>{this.accBeta1=di(t).variable(),this.accBeta2=di(n).variable()})),null==r&&(this.epsilon=ya.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Po((()=>{const n=wi(1,this.accBeta1),r=wi(1,this.accBeta2);t.forEach(((t,a)=>{const s=ya.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Po((()=>si(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:t+"/v",variable:Po((()=>si(s).variable(!1)))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=Qo(ni(i,this.beta1),ni(o,1-this.beta1)),p=Qo(ni(u,this.beta2),ni(ai(o),1-this.beta2)),c=ti(l,n),h=ti(p,r);i.assign(l),u.assign(p);const d=Qo(ni(ti(c,Qo(ri(h),this.epsilon)),-this.learningRate),s);s.assign(d)})),this.accBeta1.assign(ni(this.accBeta1,this.beta1)),this.accBeta2.assign(ni(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Vo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Vo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Po((()=>{this.accBeta1.assign(bi(this.beta1,this.iterations_+1)),this.accBeta2.assign(bi(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}xi.className="Adam",xo(xi);const Ni=Da({abs_:function(e){const t=Sa(e,"x","abs"),n={x:t};return ya.runKernelFunc(((e,n)=>(n([t]),"complex64"===t.dtype?e.complexAbs(t):e.abs(t))),n,null,j)}});function ki(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function vi(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function Si(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Ei=Da({maximum_:function(e,t){let n=Sa(e,"a","maximum"),r=Sa(t,"b","maximum");[n,r]=ua(n,r),"bool"===n.dtype&&(n=vs(n,"int32"),r=vs(r,"int32")),Si(n.shape,r.shape);const a={a:n,b:r};return ya.runKernelFunc(((e,t)=>{const a=e.maximum(n,r);return t([n,r]),a}),a,null,ft)}});class Ti extends mi{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Po((()=>{this.iteration=di(0).variable(),this.accBeta1=di(t).variable()})),null==r&&(this.epsilon=ya.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Po((()=>{const n=wi(1,this.accBeta1),r=ti(-this.learningRate,Qo(ni(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=ya.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:si(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:t+"/v",variable:si(s).variable(!1)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=Qo(ni(i,this.beta1),ni(o,1-this.beta1)),p=ni(u,this.beta2),c=Ni(o),h=Ei(p,c);i.assign(l),u.assign(h);const d=Qo(ni(ti(r,n),ti(l,Qo(h,this.epsilon))),s);s.assign(d)})),this.iteration.assign(Qo(this.iteration,1)),this.accBeta1.assign(ni(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Vo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Vo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Ti.className="Adamax",xo(Ti);class Di extends mi{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=ya.registeredVariables[t];Po((()=>{const e=Qo(ni(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=qo(di(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Di.className="SGD",xo(Di);class Ii extends Di{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=di(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ya.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:Po((()=>si(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Po((()=>{let e;const t=Qo(ni(this.m,a),s);e=this.useNesterov?Qo(ni(this.c,Qo(s,ni(t,this.m))),r):Qo(ni(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Vo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Ii.className="Momentum",xo(Ii);class Ai extends mi{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=ya.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ya.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:Po((()=>si(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:Po((()=>si(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:Po((()=>si(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Po((()=>{const e=Qo(ni(o,this.decay),ni(ai(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Qo(ni(t,this.decay),ni(s,1-this.decay)),u=ti(ni(s,this.learningRate),ri(wi(e,Qo(ai(a),this.epsilon)))),l=Qo(ni(i,this.momentum),u);o.assign(e),t.assign(a),i.assign(l);const p=wi(r,l);r.assign(p)}else{const e=Qo(ni(o,this.decay),ni(ai(s),1-this.decay)),t=Qo(ni(i,this.momentum),ti(ni(s,this.learningRate),ri(Qo(e,this.epsilon))));o.assign(e),i.assign(t);const n=wi(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Vo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Vo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Vo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Ai.className="RMSProp",xo(Ai);const _i=Da({acos_:function(e){const t=Sa(e,"x","acos"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.acos(t);return n([t]),r}),n,null,U)}}),Fi=Da({acosh_:function(e){const t=Sa(e,"x","acosh"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.acosh(t);return n([t]),r}),n,null,K)}}),Mi=Da({addN_:function(e){Jn(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Jn(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+e.length));const t=e.map(((e,t)=>Sa(e,"tensors"+t,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!tr(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return ya.runKernelFunc(((e,n)=>{const r=e.addN(t);return n(t),r}),r,null,H)}});function $i(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Oi(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}function Ci(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Bi(e,t){return Oi(e,t.map((e=>1)),t)}function Ri(e,t,n){Jn($i(t,n),(()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`))}function zi(e,t){if($i(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Li(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Pi(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Vi=Da({all_:function(e,t=null,n=!1){let r=Sa(e,"x","all","bool");const a={x:r},s={axis:t,keepDims:n};return ya.runKernelFunc((e=>{const a=lr(t,r.shape);let s=a;const o=zi(s,r.rank);null!=o&&(r=Ks(r,o),s=Pi(s.length,r.rank));const i=e.all(r,s);if(n){const e=Bi(i.shape,a);return Ws(i,e)}return i}),a,null,J,s)}}),qi=Da({any_:function(e,t=null,n=!1){let r=Sa(e,"x","any","bool");const a={x:r},s={axis:t,keepDims:n};return ya.runKernelFunc((e=>{const a=lr(t,r.shape);let s=a;const o=zi(s,r.rank);null!=o&&(r=Ks(r,o),s=Pi(s.length,r.rank));const i=e.any(r,s);if(n){const e=Bi(i.shape,a);return Ws(i,e)}return i}),a,null,Y,s)}}),Wi=Da({argMax_:function(e,t=0){let n=Sa(e,"x","argMax");const r={x:n},a={axis:t};return ya.runKernelFunc(((e,r)=>{r([n]);let a=lr(t,n.shape);const s=zi(a,n.rank);return null!=s&&(n=Ks(n,s),a=Pi(a.length,n.rank)),e.argMax(n,a[0])}),r,null,X,a)}}),ji=Da({argMin_:function(e,t=0){let n=Sa(e,"x","argMin");const r={x:n},a={axis:t};return ya.runKernelFunc(((e,r)=>{r([n]),null==t&&(t=0);let a=lr(t,n.shape);const s=zi(a,n.rank);return null!=s&&(n=Ks(n,s),a=Pi(a.length,n.rank)),e.argMin(n,a[0])}),r,null,Z,a)}}),Ui=Da({asin_:function(e){const t=Sa(e,"x","asin"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.asin(t);return n([t]),r}),n,null,Q)}}),Ki=Da({asinh_:function(e){const t=Sa(e,"x","asinh"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.asinh(t);return n([t]),r}),n,null,ee)}}),Gi=Da({atan_:function(e){const t=Sa(e,"x","atan"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.atan(t);return n([t]),r}),n,null,te)}}),Hi=Da({atan2_:function(e,t){let n=Sa(e,"a","atan2"),r=Sa(t,"b","atan2");[n,r]=ua(n,r);const a={a:n,b:r};return ya.runKernelFunc(((e,t)=>{const a=e.atan2(n,r);return t([n,r]),a}),a,null,re)}}),Ji=Da({atanh_:function(e){const t=Sa(e,"x","atanh"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.atanh(t);return n([t]),r}),n,null,ne)}});function Yi(e,t,n,r,a="NHWC",s){return Qi(e,[...t,e[3]],n,s,r,null,null,uu(a))}function Xi(e,t,n,r,a,s,o="channelsLast"){const[i,u]=nu(t);let l;if("channelsLast"===o)l=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);l=[i,u,e[1],e[1]]}return Qi(e,l,n,r,a,s,!1,o)}function Zi(e,t,n,r,a,s,o="NDHWC"){const[i,u,l]=ru(t);let p,c;if("NDHWC"===o)c="channelsLast",p=[i,u,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat "+o);c="channelsFirst",p=[i,u,l,e[1],e[1]]}return eu(e,p,n,r,a,!1,c,s)}function Qi(e,t,n,r,a,s,o=!1,i="channelsLast"){let[u,l,p,c]=[-1,-1,-1,-1];if("channelsLast"===i)[u,l,p,c]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,c,l,p]=e}const[h,d,,m]=t,[f,y]=nu(n),[g,b]=nu(r),w=au(h,g),x=au(d,b),{padInfo:N,outHeight:k,outWidth:v}=function(e,t,n,r,a,s,o,i,u){let l,p,c;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=tu(e,t,n));const s=e[1],o=su((e[0]-t+2*r)/n+1,a);Jn(nr(o),(()=>`The output # of rows (${o}) must be an integer. Change the stride and/or zero pad parameters`));const i=su((s-t+2*r)/n+1,a);return Jn(nr(i),(()=>`The output # of columns (${i}) must be an integer. Change the stride and/or zero pad parameters`)),[o,i]}([t,n],s,r,e,i);p=a[0],c=a[1]}else if("same"===e){p=Math.ceil(t/r),c=Math.ceil(n/a);const e=Math.max(0,(p-1)*r+s-t),i=Math.max(0,(c-1)*a+o-n),u=Math.floor(e/2),h=e-u,d=Math.floor(i/2);l={top:u,bottom:h,left:d,right:i-d,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/r),c=Math.ceil((n-o+1)/a);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const h="channelsLast"===u?e[1][0]:e[2][0],d="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],f="channelsLast"===u?e[2][1]:e[3][1];l={top:h,bottom:d,left:m,right:f,type:0===h&&0===d&&0===m&&0===f?"VALID":"EXPLICIT"},p=su((t-s+h+d)/r+1,i),c=su((n-o+m+f)/a+1,i)}}return{padInfo:l,outHeight:p,outWidth:c}}(a,l,p,f,y,w,x,s,i),S=o?m*c:m;let E;return"channelsFirst"===i?E=[u,S,k,v]:"channelsLast"===i&&(E=[u,k,v,S]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:p,inChannels:c,outHeight:k,outWidth:v,outChannels:S,padInfo:N,strideHeight:f,strideWidth:y,filterHeight:h,filterWidth:d,effectiveFilterHeight:w,effectiveFilterWidth:x,dilationHeight:g,dilationWidth:b,inShape:e,outShape:E,filterShape:t}}function eu(e,t,n,r,a,s=!1,o="channelsLast",i){let[u,l,p,c,h]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,l,p,c,h]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,h,l,p,c]=e}const[d,m,f,,y]=t,[g,b,w]=ru(n),[x,N,k]=ru(r),v=au(d,x),S=au(m,N),E=au(f,k),{padInfo:T,outDepth:D,outHeight:I,outWidth:A}=function(e,t,n,r,a,s,o,i,u,l,p){let c,h,d,m;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=tu(e,t,r));const o=e[1],i=e[2],u=su((e[0]-t+2*a)/r+1,s);Jn(nr(u),(()=>`The output # of depths (${u}) must be an integer. Change the stride and/or zero pad parameters`));const l=su((o-t+2*a)/r+1,s);Jn(nr(l),(()=>`The output # of rows (${l}) must be an integer. Change the stride and/or zero pad parameters`));const p=su((i-t+2*a)/r+1,s);return Jn(nr(p),(()=>`The output # of columns (${p}) must be an integer. Change the stride and/or zero pad parameters`)),[u,l,p,1]}([t,n,r,1],i,0,a,e,p);h=s[0],d=s[1],m=s[2]}else if("same"===e){h=Math.ceil(t/a),d=Math.ceil(n/s),m=Math.ceil(r/o);const e=(h-1)*a+i-t,p=(d-1)*s+u-n,f=(m-1)*o+l-r,y=Math.floor(e/2),g=e-y,b=Math.floor(p/2),w=p-b,x=Math.floor(f/2);c={top:b,bottom:w,left:x,right:f-x,front:y,back:g,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);c={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-i+1)/a),d=Math.ceil((n-u+1)/s),m=Math.ceil((r-l+1)/o)}return{padInfo:c,outDepth:h,outHeight:d,outWidth:m}}(a,l,p,c,g,b,w,v,S,E,i),_=s?y*h:y;let F;return"channelsFirst"===o?F=[u,_,D,I,A]:"channelsLast"===o&&(F=[u,D,I,A,_]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:p,inWidth:c,inChannels:h,outDepth:D,outHeight:I,outWidth:A,outChannels:_,padInfo:T,strideDepth:g,strideHeight:b,strideWidth:w,filterDepth:d,filterHeight:m,filterWidth:f,effectiveFilterDepth:v,effectiveFilterHeight:S,effectiveFilterWidth:E,dilationDepth:x,dilationHeight:N,dilationWidth:k,inShape:e,outShape:F,filterShape:t}}function tu(e,t,n,r=1){const a=au(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function nu(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ru(e){return"number"==typeof e?[e,e,e]:e}function au(e,t){return t<=1?e:e+(e-1)*(t-1)}function su(e,t){if(!t)return e;switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function ou(e){const[t,n,r]=nu(e);return 1===t&&1===n&&1===r}function iu(e,t){return ou(e)||ou(t)}function uu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}const lu=Da({avgPool_:function(e,t,n,r,a){const s=Sa(e,"x","avgPool","float32");Jn(iu(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=s,i=!1;3===s.rank&&(i=!0,o=Ws(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Jn(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),null!=a&&Jn(nr(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let p=ya.runKernelFunc(((e,s)=>{const i=Xi(o.shape,t,n,1,r,a);return s([o]),1===i.filterWidth&&1===i.filterHeight&&tr(i.inShape,i.outShape)?o.clone():e.avgPool(o,i)}),u,null,ae,l);return p=vs(p,s.dtype),i?Ws(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),pu=Da({avgPool3d_:function(e,t,n,r,a,s="NDHWC",o){null==o?o=[1,1,1]:Co("dilations is deprecated, this field will be gone in v3.0.0.");const i=Sa(e,"x","avgPool3d","float32");let u=i,l=!1;4===i.rank&&(l=!0,u=Ws(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Jn(5===u.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`)),Jn("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+s)),Jn(iu(n,o),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),null!=a&&Jn(nr(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const p={x:u},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s,dilations:o};let h=ya.runKernelFunc(((e,i)=>{null==o&&(o=[1,1,1]);const l=Zi(u.shape,t,n,o,r,a,s);return i([u]),e.avgPool3d(u,l)}),p,null,oe,c);return h=vs(h,u.dtype),l?Ws(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});function cu(e,t){const n=e[0].length;e.forEach(((e,t)=>{Jn(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Jn(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)Jn(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function hu(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const du=Da({concat_:function(e,t=0){Jn(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=Ea(e,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}));const r=n,a={axis:t};return ya.runKernelFunc(((e,r)=>{const a=lr(t,n[0].shape)[0],s=hu(n.map((e=>e.shape)),a);if(0===Qn(s))return _a([],s);if(n=n.filter((e=>e.size>0)),1===n.length)return n[0];cu(n.map((e=>e.shape)),a);const o=e.concat(n,a);return r(n),o}),r,null,fe,a)}}),mu=Da({sigmoid_:function(e){const t=Sa(e,"x","sigmoid"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.sigmoid(t);return n([r]),r}),n,null,an)}}),fu=Da({slice_:function(e,t,n){const r=Sa(e,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return ya.runKernelFunc(((e,a)=>{const[s,o]=go(r,t,n);return no(r,s,o),a([r]),e.slice(r,s,o)}),a,null,en,s)}}),yu=Da({tanh_:function(e){const t=Sa(e,"x","tanh"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.tanh(t);return n([r]),r}),n,null,bn)}}),gu=Da({basicLSTMCell_:function(e,t,n,r,a,s){const o=Sa(e,"forgetBias","basicLSTMCell"),i=Sa(t,"lstmKernel","basicLSTMCell"),u=Sa(n,"lstmBias","basicLSTMCell"),l=Sa(r,"data","basicLSTMCell"),p=Sa(a,"c","basicLSTMCell"),c=Sa(s,"h","basicLSTMCell"),h=du([l,c],1),d=js(h,i),m=Qo(d,u),f=m.shape[0],y=m.shape[1]/4,g=[f,y],b=fu(m,[0,0],g),w=fu(m,[0,y],g),x=fu(m,[0,2*y],g),N=fu(m,[0,3*y],g),k=Qo(ni(mu(b),yu(w)),ni(p,mu(Qo(o,x))));return[k,ni(yu(k),mu(N))]}}),bu=Da({batchToSpaceND_:function(e,t,n){const r=Sa(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));Jn(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Jn(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Jn(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},o={blockShape:t,crops:n};return ya.runKernelFunc((e=>e.batchToSpaceND(r,t,n)),s,null,le,o)}});function wu(e){return null==e?null:0===e.rank?Ws(e,[e.size]):1===e.rank?e:2===e.rank?Ws(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ws(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e}const xu=Da({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const o=Sa(e,"x","batchNorm"),i=Sa(t,"mean","batchNorm"),u=Sa(n,"variance","batchNorm");let l,p;null!=a&&(l=Sa(a,"scale","batchNorm")),null!=r&&(p=Sa(r,"offset","batchNorm")),Jn(i.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Jn(null==p||i.rank===p.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Jn(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const c=function(e){let t;return t=0===e.rank||1===e.rank?Ws(e,[1,1,1,e.size]):2===e.rank?Ws(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ws(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),h={x:c,scale:l,offset:p,mean:i,variance:u},d={varianceEpsilon:s},m=ya.runKernelFunc(((e,t)=>(t([c,i,u,l]),e.batchNorm(c,wu(i),wu(u),wu(p),wu(l),s))),h,null,Ke,d);return Ws(m,o.shape)}}),Nu=Da({batchNorm2d_:function(e,t,n,r,a,s){const o=Sa(e,"x","batchNorm"),i=Sa(t,"mean","batchNorm"),u=Sa(n,"variance","batchNorm");let l,p;return null!=a&&(l=Sa(a,"scale","batchNorm")),null!=r&&(p=Sa(r,"offset","batchNorm")),Jn(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+o.rank+".")),Jn(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),Jn(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&Jn(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=p&&Jn(2===p.rank||1===p.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`)),xu(o,i,u,p,l,s)}}),ku=Da({batchNorm3d_:function(e,t,n,r,a,s){const o=Sa(e,"x","batchNorm"),i=Sa(t,"mean","batchNorm"),u=Sa(n,"variance","batchNorm");let l,p;return null!=a&&(l=Sa(a,"scale","batchNorm")),null!=r&&(p=Sa(r,"offset","batchNorm")),Jn(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+o.rank+".")),Jn(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),Jn(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&Jn(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=p&&Jn(3===p.rank||1===p.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`)),xu(o,i,u,p,l,s)}}),vu=Da({batchNorm4d_:function(e,t,n,r,a,s){const o=Sa(e,"x","batchNorm"),i=Sa(t,"mean","batchNorm"),u=Sa(n,"variance","batchNorm");let l,p;return null!=a&&(l=Sa(a,"scale","batchNorm")),null!=r&&(p=Sa(r,"offset","batchNorm")),Jn(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+o.rank+".")),Jn(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),Jn(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&Jn(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=p&&Jn(4===p.rank||1===p.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`)),xu(o,i,u,p,l,s)}}),Su=Da({broadcastTo_:function(e,t){let n=Sa(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Ws(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ss(n);const o={x:n},i={shape:t,inputShape:a};return ya.runKernelFunc((e=>e.tile(n,s)),o,null,pe,i)}}),Eu=Da({ceil_:function(e){const t=Sa(e,"x","ceil"),n={x:t};return ya.runKernelFunc((e=>e.ceil(t)),n,null,he)}}),Tu=Da({clipByValue_:function(e,t,n){const r=Sa(e,"x","clipByValue");Jn(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return ya.runKernelFunc(((e,a)=>{const s=e.clip(r,t,n);return a([r]),s}),a,null,de,s)}}),Du=Da({concat1d_:function(e){return du(e,0)}}),Iu=Da({concat2d_:function(e,t){return du(e,t)}}),Au=Da({concat3d_:function(e,t){return du(e,t)}}),_u=Da({concat4d_:function(e,t){return du(e,t)}}),Fu=Da({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=Sa(e,"x","conv2d"),u=Sa(t,"filter","conv2d");let l=i,p=!1;3===i.rank&&(p=!0,l=Ws(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Jn(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),Jn(4===u.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+".")),null!=o&&Jn(nr(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const c="NHWC"===a?l.shape[3]:l.shape[1];Jn(c===u.shape[2],(()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${u.shape[2]}.`)),Jn(iu(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const h={x:l,filter:u},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},m=ya.runKernelFunc(((e,t)=>{const i=uu(a),p=Qi(l.shape,u.shape,n,s,r,o,!1,i),c=e.conv2d(l,u,p);return t([l,u]),c}),h,null,ye,d);return p?Ws(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Mu=Da({conv1d_:function(e,t,n,r,a="NWC",s=1,o){const i=Sa(e,"x","conv1d"),u=Sa(t,"filter","conv1d");let l=i,p=!1;2===i.rank&&(p=!0,l=Ws(i,[1,i.shape[0],i.shape[1]])),Jn(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),Jn(3===u.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+".")),null!=o&&Jn(nr(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),Jn(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),Jn(iu(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),Jn("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const c=Ws(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=Ws(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=Fu(h,c,[1,n],r,"NHWC",[1,s],o);return Ws(d,p?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),$u=Da({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",o){Jn(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,u=t,l=!1;3===t.rank&&(l=!0,u=Ws(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),Jn(4===i.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+i.length+".")),Jn(4===u.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank)),Jn(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank));const p="NHWC"===s?i[3]:i[1],c="NHWC"===s?u.shape[3]:u.shape[1];Jn(p===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[2]}.`)),Jn(c===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[3]}.`)),null!=o&&Jn(nr(a),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const h={dy:u,filter:n},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,inputShape:i},m=ya.runKernelFunc(((e,t)=>{const l=uu(s),p=Qi(i,n.shape,r,1,a,o,!1,l),c=e.conv2dDerInput(u,n,p);return t([u,n]),c}),h,null,be,d);return l?Ws(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Ou=Da({conv2dTranspose_:function(e,t,n,r,a,s){const o=Sa(e,"x","conv2dTranspose"),i=Sa(t,"filter","conv2dTranspose");return $u(n,o,i,r,a,"NHWC",s)}}),Cu=Da({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const o=Sa(e,"x","conv3d"),i=Sa(t,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=Ws(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Jn(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),Jn(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+i.rank+".")),Jn(u.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),Jn(iu(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Jn("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const p={x:u,filter:i},c={strides:n,pad:r,dataFormat:a,dilations:s},h=ya.runKernelFunc(((e,t)=>{const a=eu(u.shape,i.shape,n,s,r),o=e.conv3d(u,i,a);return t([u,i]),o}),p,null,we,c);return l?Ws(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Bu=Da({conv3DBackpropInput_:function(e,t,n,r,a){Jn(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=Ws(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=o.shape[4];Jn(5===s.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+s.length+".")),Jn(5===o.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+o.rank)),Jn(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank)),Jn(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),Jn(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const p={dy:o},c={pad:a},h=ya.runKernelFunc((e=>{const t=eu(s,n.shape,r,1,a);return e.conv3dDerInput(o,n,t)}),p,null,Ne,c);return i?Ws(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ru=Da({conv3dTranspose_:function(e,t,n,r,a){const s=Sa(e,"x","conv3dTranspose"),o=Sa(t,"filter","conv3dTranspose");return Bu(n,s,o,r,a)}}),zu=Da({cos_:function(e){const t=Sa(e,"x","cos"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.cos(t);return n([t]),r}),n,null,ke)}}),Lu=Da({cosh_:function(e){const t=Sa(e,"x","cosh"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.cosh(t);return n([t]),r}),n,null,ve)}}),Pu=Da({cumsum_:function(e,t=0,n=!1,r=!1){const a=Sa(e,"x","cumsum"),s={x:a},o={axis:t,exclusive:n,reverse:r};return ya.runKernelFunc(((e,s)=>{const o=zi([t],a.rank);let i=a;null!=o&&(i=Ks(a,o));const u=Pi(1,a.rank)[0];let l=e.cumsum(i,u,n,r);if(s([a]),null!=o){const e=Li(o);l=Ks(l,e)}return l}),s,null,Se,o)}}),Vu=Da({depthToSpace_:function(e,t,n="NHWC"){const r=Sa(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];Jn(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Jn(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Jn(o%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const i={x:r},u={blockSize:t,dataFormat:n};return ya.runKernelFunc((e=>e.depthToSpace(r,t,n)),i,null,Te,u)}}),qu=Da({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=Sa(e,"x","depthwiseConv2d"),u=Sa(t,"filter","depthwiseConv2d");let l=i,p=!1;3===i.rank&&(p=!0,l=Ws(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Jn(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),Jn(4===u.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+".")),Jn(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=o&&Jn(nr(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const c={x:l,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},d=ya.runKernelFunc(((e,t)=>{null==s&&(s=[1,1]),Jn(iu(n,s),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const a=Qi(l.shape,u.shape,n,s,r,o,!0),i=e.depthwiseConv2D(l,u,a);return t([l,u]),i}),c,null,De,h);return p?Ws(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Wu=Da({diag_:function(e){const t=Sa(e,"x","diag"),n={x:t};return ya.runKernelFunc((n=>{const r=Ws(t,[t.size]),a=n.diag(r),s=[...e.shape,...e.shape];return Ws(a,s)}),n,null,_e)}}),ju=Da({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const o=Sa(e,"x","dilation2d"),i=Sa(t,"filter","dilation2d");Jn(3===o.rank||4===o.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+o.rank+".")),Jn(3===i.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+i.rank+".")),Jn("NHWC"===s,(()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+s));let u=o,l=!1;3===o.rank&&(u=Ws(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);const p={x:u,filter:i},c={strides:n,pad:r,dilations:a},h=ya.runKernel(Fe,p,c);return l?Ws(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Uu=Da({equal_:function(e,t){let n=Sa(e,"a","equal"),r=Sa(t,"b","equal");[n,r]=ua(n,r),Si(n.shape,r.shape);const a={a:n,b:r};return ya.runKernelFunc((e=>e.equal(n,r)),a,null,ze)}}),Ku=Da({where_:function(e,t,n){const r=Sa(t,"a","where"),a=Sa(n,"b","where"),s=Sa(e,"condition","where","bool"),o=Si(r.shape,a.shape),i=Su(r,o),u=Su(a,o);1===s.rank&&Jn(s.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==s.rank&&Yn(s.shape,u.shape,"Error in where: ");const l={condition:s,t:i,e:u};return ya.runKernelFunc(((e,t)=>{const n=e.select(s,i,u);return t([s]),n}),l,null,Zt)}}),Gu=Da({divNoNan_:function(e,t){let n=Sa(e,"a","div"),r=Sa(t,"b","div");[n,r]=ua(n,r);const a=ti(n,r),s=si(a),o=Uu(r,s);return Ku(o,s,a)}}),Hu=Da({dot_:function(e,t){const n=Sa(e,"t1","dot"),r=Sa(t,"t2","dot");Jn(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(Jn(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=Ws(n,[1,-1]),t=Ws(r,[-1,1]),a=js(e,t);return Ws(a,[])}if(1===n.rank&&2===r.rank){const e=Ws(n,[1,-1]),t=Ws(r,[r.shape[0],r.shape[1]]),a=js(e,t);return Ws(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Ws(r,[-1,1]),t=js(n,e);return Ws(t,[t.size])}{const e=Ws(r,[r.shape[0],r.shape[1]]);return js(n,e)}}}),Ju=Da({elu_:function(e){const t=Sa(e,"x","elu"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.elu(t);return n([r]),r}),n,null,Ce)}}),Yu=Da({erf_:function(e){let t=Sa(e,"x","erf");Jn("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=vs(t,"float32"));const n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.erf(t);return n([t]),r}),n,null,Re)}}),Xu=Da({exp_:function(e){const t=Sa(e,"x","exp"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.exp(t);return n([r]),r}),n,null,Le)}}),Zu=Da({expandDims_:function(e,t=0){const n=Sa(e,"x","expandDims",null);Jn(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r=n.shape.slice();return t<0&&(Jn(-(n.rank+1)<=t,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),t=n.rank+t+1),r.splice(t,0,1),Ws(n,r)}}),Qu=Da({expm1_:function(e){const t=Sa(e,"x","expm1"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.expm1(t);return n([t]),r}),n,null,Pe)}}),el=Da({tile_:function(e,t){const n=Sa(e,"x","tile",null);Jn(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r=[n],a={x:n},s={reps:t};return ya.runKernelFunc(((e,r)=>{const a=e.tile(n,t);return r([n]),a}),a,null,wn,s,r)}}),tl=Da({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=ks([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const o=Ws(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return el(Zu(o,0),[n[0],1,1]);if(2===n.length)return el(Zu(Zu(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return el(Zu(Zu(Zu(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),nl=Da({floor_:function(e){const t=Sa(e,"x","floor"),n={x:t};return ya.runKernelFunc((e=>e.floor(t)),n,null,je)}}),rl=30;function al(e){return e<=rl?e:Sr(e,Math.floor(Math.sqrt(e)))}function sl(e,t){let n,r=!1;for(e<=rl?(n=e,r=!0):n=Sr(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Sr(e,n+1);return n}function ol(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function il(e,t,n){const r=e.shape[n],a=[];let s=1,o=1;for(let t=0;t<n;t++)a.push(e.shape[t]),s*=e.shape[t];for(let e=0;e<t.rank;e++)a.push(t.shape[e]);for(let t=n+1;t<e.rank;t++)a.push(e.shape[t]),o*=e.shape[t];return{batchSize:s,sliceSize:o,dimSize:r,outputShape:a}}const ul=Da({gather_:function(e,t,n=0){const r=Sa(e,"x","gather"),a=Sa(t,"indices","gather","int32"),s={x:r,indices:a},o={axis:n};return ya.runKernelFunc(((e,t)=>{const s=lr(n,r.shape)[0],o=il(r,a,s),i=e.gather(r,Ws(a,[a.size]),s);return t([r,a]),Ws(i,o.outputShape)}),s,null,Ge,o)}}),ll=Da({greater_:function(e,t){let n=Sa(e,"a","greater"),r=Sa(t,"b","greater");[n,r]=ua(n,r),Si(n.shape,r.shape);const a={a:n,b:r};return ya.runKernelFunc((e=>e.greater(n,r)),a,null,Je)}}),pl=Da({greaterEqual_:function(e,t){let n=Sa(e,"a","greaterEqual"),r=Sa(t,"b","greaterEqual");[n,r]=ua(n,r),Si(n.shape,r.shape);const a={a:n,b:r};return ya.runKernelFunc(((e,t)=>{const a=e.greaterEqual(n,r);return t([n,r]),a}),a,null,Ye)}}),cl=Da({imag_:function(e){const t=Sa(e,"input","imag"),n={input:t};return ya.runKernelFunc((e=>e.imag(t)),n,null,Qe)}}),hl=Da({isFinite_:function(e){const t=Sa(e,"x","isFinite"),n={x:t};return ya.runKernelFunc((e=>e.isFinite(t)),n,null,et)}}),dl=Da({isInf_:function(e){const t=Sa(e,"x","isInf"),n={x:t};return ya.runKernelFunc((e=>e.isInf(t)),n,null,tt)}}),ml=Da({isNaN_:function(e){const t=Sa(e,"x","isNaN"),n={x:t};return ya.runKernelFunc((e=>e.isNaN(t)),n,null,nt)}}),fl=Da({leakyRelu_:function(e,t=.2){const n=Sa(e,"x","leakyRelu");return Ei(ni(di(t),n),n)}}),yl=Da({less_:function(e,t){let n=Sa(e,"a","less"),r=Sa(t,"b","less");[n,r]=ua(n,r),Si(n.shape,r.shape);const a={a:n,b:r};return ya.runKernelFunc((e=>e.less(n,r)),a,null,rt)}}),gl=Da({lessEqual_:function(e,t){let n=Sa(e,"a","lessEqual"),r=Sa(t,"b","lessEqual");[n,r]=ua(n,r),Si(n.shape,r.shape);const a={a:n,b:r};return ya.runKernelFunc(((e,t)=>{const a=e.lessEqual(n,r);return t([n,r]),a}),a,null,at)}});function bl(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return ya.runKernelFunc((r=>r.linspace(e,t,n)),{},null,st,r)}const wl=Da({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=Sa(e,"x","localResponseNormalization");Jn(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),Jn(nr(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=s,i=!1;3===s.rank&&(i=!0,o=Ws(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:r,beta:a},p=ya.runKernelFunc(((e,s)=>{const i=e.localResponseNormalization4D(o,t,n,r,a);return s([o,i]),i}),u,null,ht,l);return i?Ws(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),xl=Da({log_:function(e){const t=Sa(e,"x","log"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.log(t);return n([t]),r}),n,null,ot)}}),Nl=Da({log1p_:function(e){const t=Sa(e,"x","log1p"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.log1p(t);return n([t]),r}),n,null,it)}}),kl=Da({neg_:function(e){const t=Sa(e,"x","neg"),n={x:t};return ya.runKernelFunc((e=>e.neg(t)),n,null,Tt)}}),vl=Da({softplus_:function(e){const t=Sa(e,"x","softplus"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.softplus(t);return n([t]),r}),n,null,sn)}}),Sl=Da({logSigmoid_:function(e){const t=Sa(e,"x","logSigmoid");return ci((e=>({value:kl(vl(kl(e))),gradFunc:t=>ni(t,mu(kl(e)))})))(t)}}),El=Da({max_:function(e,t=null,n=!1){const r=Sa(e,"x","max"),a={x:r},s={reductionIndices:t,keepDims:n};return ya.runKernelFunc(((e,a)=>{let s=lr(t,r.shape);const o=zi(s,r.rank);let i=r;null!=o&&(i=Ks(r,o),s=Pi(s.length,i.rank));const u=e.max(i,s);null!=o&&i.dispose();let l=u;if(n){const e=Bi(l.shape,lr(t,r.shape));l=Ws(l,e),u.dispose()}return a([r,l]),l}),a,null,mt,s)}}),Tl=Da({sum_:function(e,t=null,n=!1){let r=Sa(e,"x","sum");"bool"===r.dtype&&(r=vs(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return ya.runKernelFunc(((e,a)=>{a([r]);const s=lr(t,r.shape),o=zi(s,r.rank);let i=s,u=r;null!=o&&(u=Ks(r,o),i=Pi(i.length,r.rank));let l=e.sum(u,i);if(n){const e=Bi(l.shape,s);l=Ws(l,e)}return l}),a,null,un,s)}}),Dl=Da({logSoftmax_:function(e,t=-1){const n=Sa(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r={logits:n},a={axis:t};return ya.runKernelFunc(((n,r)=>{const a=El(e,t,!0),s=wi(e,a),o=wi(vs(s,"float32"),xl(Tl(Xu(s),t,!0)));return r([o]),o}),r,null,ct,a)}}),Il=Da({logSumExp_:function(e,t=null,n=!1){const r=Sa(e,"x","logSumExp"),a=lr(t,r.shape),s=El(r,a,!0),o=wi(r,s),i=Xu(o),u=Tl(i,a),l=xl(u),p=Qo(Ws(s,l.shape),l);if(n){const e=Bi(p.shape,a);return Ws(p,e)}return p}}),Al=Da({logicalAnd_:function(e,t){const n=Sa(e,"a","logicalAnd","bool"),r=Sa(t,"b","logicalAnd","bool");Si(n.shape,r.shape);const a={a:n,b:r};return ya.runKernelFunc((e=>e.logicalAnd(n,r)),a,null,ut)}}),_l=Da({logicalNot_:function(e){const t=Sa(e,"x","logicalNot","bool"),n={x:t};return ya.runKernelFunc((e=>e.logicalNot(t)),n,null,lt)}}),Fl=Da({logicalOr_:function(e,t){const n=Sa(e,"a","logicalOr","bool"),r=Sa(t,"b","logicalOr","bool");Si(n.shape,r.shape);const a={a:n,b:r};return ya.runKernelFunc((e=>e.logicalOr(n,r)),a,null,pt)}}),Ml=Da({logicalXor_:function(e,t){const n=Sa(e,"a","logicalXor","bool"),r=Sa(t,"b","logicalXor","bool");return Si(n.shape,r.shape),Al(Fl(e,t),_l(Al(e,t)))}}),$l=Da({maxPool_:function(e,t,n,r,a){const s=Sa(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=Ws(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Jn(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),Jn(iu(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=a&&Jn(nr(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},p=ya.runKernelFunc(((e,s)=>{const i=Xi(o.shape,t,n,1,r,a);let u;return u=1===i.filterWidth&&1===i.filterHeight&&tr(i.inShape,i.outShape)?o.clone():e.maxPool(o,i),s([o,u]),u}),u,null,yt,l);return i?Ws(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Ol=Da({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC",o){null==o?o=[1,1,1]:Co("dilations is deprecated, this field will be gone in v3.0.0.");const i=Sa(e,"x","maxPool3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Ws(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Jn(5===u.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`)),Jn("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+s)),Jn(iu(n,o),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),null!=a&&Jn(nr(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const p={x:u},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s,dilations:o},h=ya.runKernelFunc(((e,i)=>{null==o&&(o=[1,1,1]);const l=Zi(u.shape,t,n,o,r,a,s),p=e.maxPool3d(u,l);return i([u,p]),p}),p,null,bt,c);return l?Ws(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Cl=Da({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:Sa(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},i=ya.runKernel(xt,s,o);return{result:i[0],indexes:i[1]}}});function Bl(e,t="float32"){if("complex64"===t){const t=Bl(e,"float32"),n=Bl(e,"float32");return Ia(t,n)}const n=Fr(Qn(e),t);return ya.makeTensor(n,e,t)}function Rl(e,t="float32"){if("complex64"===t){const t=Rl(e,"float32"),n=Bl(e,"float32");return Ia(t,n)}const n=_r(Qn(e),t);return ya.makeTensor(n,e,t)}const zl=Da({mean_:function(e,t=null,n=!1){const r=Sa(e,"x","mean"),a=lr(t,r.shape),s=Qn(Ci(r.shape,a)[1]);return ci((e=>{const r=di(s),o=r.dtype===e.dtype?e:vs(e,r.dtype),i=ti(o,r);return{value:Tl(i,t,n),gradFunc:t=>{const n=e.shape.slice();a.forEach((e=>{n[e]=1}));const r=Ws(t,n);return ti(ni(r,Rl(e.shape,"float32")),s)}}}))(r)}}),Ll=Da({min_:function(e,t=null,n=!1){const r=Sa(e,"x","min"),a={x:r},s={axis:t,keepDims:n};return ya.runKernelFunc(((e,a)=>{const s=lr(t,r.shape);let o=s;const i=zi(o,r.rank);let u=r;null!=i&&(u=Ks(r,i),o=Pi(o.length,r.rank));const l=e.min(u,o);null!=i&&u.dispose();let p=l;if(n){const e=Bi(p.shape,s);p=Ws(l,e),l.dispose()}return a([r,p]),p}),a,null,kt,s)}}),Pl=Da({minimum_:function(e,t){let n=Sa(e,"a","minimum"),r=Sa(t,"b","minimum");[n,r]=ua(n,r),"bool"===n.dtype&&(n=vs(n,"int32"),r=vs(r,"int32")),Si(n.shape,r.shape);const a={a:n,b:r};return ya.runKernelFunc(((e,t)=>{const a=e.minimum(n,r);return t([n,r]),a}),a,null,vt)}}),Vl=Da({mod_:function(e,t){let n=Sa(e,"a","mod"),r=Sa(t,"b","mod");[n,r]=ua(n,r);const a={a:n,b:r};return ya.runKernelFunc(((e,t)=>{const a=e.mod(n,r);return t([n,r]),a}),a,null,St)}}),ql=Da({moments_:function(e,t=null,n=!1){const r=lr(t,(e=Sa(e,"x","moments")).shape),a=zl(e,r,n);let s=a.shape;n||(s=Bi(a.shape,r));const o=ai(wi(vs(e,"float32"),Ws(a,s)));return{mean:a,variance:zl(o,r,n)}}}),Wl=Da({multiRNNCell_:function(e,t,n,r){const a=Sa(t,"data","multiRNNCell"),s=Ea(n,"c","multiRNNCell"),o=Ea(r,"h","multiRNNCell");let i=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](i,s[t],o[t]);u.push(n[0]),u.push(n[1]),i=n[1]}const l=[],p=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),p.push(u[e+1]);return[l,p]}}),jl=Da({multinomial_:function(e,t,n,r=!1){const a=Sa(e,"logits","multinomial"),s=a.size,o=a.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+s+".");if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+o);n=n||Math.random();const i=1===o?Ws(a,[1,-1]):a,u=ya.runKernelFunc((e=>e.multinomial(i,r,t,n)),{logits2D:i});return 1===o?Ws(u,[u.size]):u}}),Ul=Da({notEqual_:function(e,t){let n=Sa(e,"a","notEqual"),r=Sa(t,"b","notEqual");[n,r]=ua(n,r),Si(n.shape,r.shape);const a={a:n,b:r};return ya.runKernelFunc((e=>e.notEqual(n,r)),a,null,Dt)}}),Kl=Da({real_:function(e){const t=Sa(e,"input","real"),n={input:t};return ya.runKernelFunc((e=>e.real(t)),n,null,Lt)}}),Gl=Da({onesLike_:function(e){const t=Sa(e,"x","onesLike"),n={x:t};return ya.runKernelFunc(((e,n)=>{if("complex64"===t.dtype){const e=Gl(Kl(t)),n=si(cl(t));return Ia(e,n)}return e.onesLike(t)}),n,null,Ft)}}),Hl=Da({outerProduct_:function(e,t){const n=Sa(e,"v1","outerProduct"),r=Sa(t,"v2","outerProduct");Jn(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=Ws(n,[-1,1]),s=Ws(r,[1,-1]);return js(a,s)}}),Jl=Da({pad_:function(e,t,n=0){const r=Sa(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return ya.runKernelFunc(((e,a)=>(a([r]),e.pad(r,t,n))),s,null,$t,a)}}),Yl=Da({pad1d_:function(e,t,n=0){return Jn(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Jl(e,[t],n)}}),Xl=Da({pad2d_:function(e,t,n=0){return Jn(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Jl(e,t,n)}}),Zl=Da({pad3d_:function(e,t,n=0){return Jn(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Jl(e,t,n)}}),Ql=Da({pad4d_:function(e,t,n=0){return Jn(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Jl(e,t,n)}}),ep=Da({spaceToBatchND_:function(e,t,n){const r=Sa(e,"x","spaceToBatchND");Jn(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Jn(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Jn(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return ya.runKernelFunc((e=>e.spaceToBatchND(r,t,n)),a,null,ln,s)}}),tp=Da({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=Sa(e,"x","maxPool");let i=o,u=!1;3===o.rank&&(u=!0,i=Ws(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Jn(iu(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const l=Xi(i.shape,t,s,a,r),p=[l.dilationHeight,l.dilationWidth];let c;c="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([l.filterHeight,l.filterWidth],p):[[0,0],[0,0]];const h=1===p[0]&&1===p[1],[d,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=a.map(((e,t)=>e+o[t]));return[t.map(((e,t)=>[r[t],i[t]])),t.map(((e,t)=>[0,o[t]]))]}([l.inHeight,l.inWidth],p,c),f=h?r:"valid",y=h?i:ep(i,p,d),g=("avg"===n?()=>lu(y,t,s,f):()=>$l(y,t,s,f))(),b=h?g:bu(g,p,m);return u?Ws(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),np=Da({prelu_:function(e,t){const n=Sa(e,"x","prelu"),r=Sa(t,"alpha","prelu"),a={x:n,alpha:r};return ya.runKernelFunc(((e,t)=>{const a=e.prelu(n,r);return t([n,r]),a}),a,null,Bt)}}),rp=Da({prod_:function(e,t=null,n=!1){let r=Sa(e,"x","prod");const a={x:r},s={axis:t,keepDims:n};return ya.runKernelFunc((e=>{"bool"===r.dtype&&(r=vs(r,"int32"));const a=lr(t,r.shape),s=zi(a,r.rank);let o=a,i=r;null!=s&&(i=Ks(r,s),o=Pi(o.length,r.rank));let u=e.prod(i,o);if(n){const e=Bi(u.shape,a);u=Ws(u,e)}return u}),a,null,Rt,s)}}),ap=Da({rand_:function(e,t,n){const r=Qn(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return ya.makeTensor(a,e,n)}});var sp=n(36377);class op{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=sp.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class ip{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=sp.alea(a.toString()),this.randn=new op(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class up{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=sp.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const lp=Da({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const s=new ip(t,n,r,a),o=ks(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),pp=Da({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new op(t,n,r,!1,a),o=ks(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),cp=Da({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=ks(e,r),o=new up(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=o.nextValue();return s.toTensor()}});function hp(e,t){Xn(e);const n=Na(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Aa(e,null,n,t)}function dp(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return ya.runKernelFunc((()=>{if(e===t||e<t&&n<0||t<e&&n>1)return Bl([0],r);const a=Fr(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return hp(a,r)}),{},null,zt,a)}const mp=Da({reciprocal_:function(e){const t=Sa(e,"x","reciprocal"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.reciprocal(t);return n([t]),r}),n,null,Pt)}}),fp=Da({relu_:function(e){const t=Sa(e,"x","relu"),n={x:t};return ya.runKernelFunc(((e,n)=>(n([t]),"bool"===t.dtype?vs(t,"int32"):e.relu(t))),n,null,Vt)}}),yp=Da({relu6_:function(e){const t=Sa(e,"x","relu6"),n={x:t};return ya.runKernelFunc(((e,n)=>(n([t]),"bool"===t.dtype?vs(t,"int32"):e.relu6(t))),n,null,Gt)}}),gp=Da({reverse_:function(e,t){const n=Sa(e,"x","reverse"),r={x:n},a={dims:t};return ya.runKernelFunc((e=>{const r=lr(t,n.shape);if(0===n.rank)return Ss(n);const a=e.reverse(n,r);return Ws(a,n.shape)}),r,null,Ht,a)}}),bp=Da({reverse1d_:function(e){const t=Sa(e,"x","reverse");return Jn(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),gp(t,0)}}),wp=Da({reverse2d_:function(e,t){const n=Sa(e,"x","reverse");return Jn(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),gp(n,t)}}),xp=Da({reverse3d_:function(e,t){const n=Sa(e,"x","reverse");return Jn(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),gp(n,t)}}),Np=Da({reverse4d_:function(e,t){const n=Sa(e,"x","reverse");return Jn(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),gp(n,t)}}),kp=Da({round_:function(e){const t=Sa(e,"x","round"),n={x:t};return ya.runKernelFunc((e=>e.round(t)),n,null,Jt)}}),vp=Da({rsqrt_:function(e){const t=Sa(e,"x","rsqrt"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.rsqrt(t);return n([t]),r}),n,null,Yt)}}),Sp=Da({selu_:function(e){const t=Sa(e,"x","selu"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.selu(t);return n([t]),r}),n,null,Qt)}}),Ep=Da({separableConv2d_:function(e,t,n,r,a,s=[1,1],o="NHWC"){const i=Sa(e,"x","separableConv2d"),u=Sa(t,"depthwiseFilter","separableConv2d"),l=Sa(n,"pointwiseFilter","separableConv2d");let p=i,c=!1;if(3===i.rank&&(c=!0,p=Ws(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Jn(4===p.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`)),Jn(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),Jn(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),Jn(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),Jn(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const h=u.shape[2],d=u.shape[3];Jn(l.shape[2]===h*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*d}, but got ${l.shape[2]}.`));const m=qu(p,u,r,a,o,s),f=Fu(m,l,1,"valid",o);return c?Ws(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Tp=async function(e,t){const n=Sa(e,"x","setdiff1d"),r=Sa(t,"y","setdiff1d");Jn(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Jn(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Jn(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),o=new Set(s);let i=0;for(let e=0;e<a.length;e++)o.has(a[e])||i++;const u=new Hr([i],n.dtype),l=new Hr([i],"int32");for(let e=0,t=0;e<a.length;e++)o.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},Dp=Da({sign_:function(e){const t=Sa(e,"x","sign"),n={x:t};return ya.runKernelFunc((e=>e.sign(t)),n,null,rn)}}),Ip=Da({sin_:function(e){const t=Sa(e,"x","sin"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.sin(t);return n([t]),r}),n,null,tn)}}),Ap=Da({sinh_:function(e){const t=Sa(e,"x","sinh"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.sinh(t);return n([t]),r}),n,null,nn)}}),_p=Da({slice1d_:function(e,t,n){const r=Sa(e,"x","slice1d");return Jn(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),fu(r,[t],[n])}}),Fp=Da({slice2d_:function(e,t,n){const r=Sa(e,"x","slice2d");return Jn(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),fu(r,t,n)}}),Mp=Da({slice3d_:function(e,t,n){const r=Sa(e,"x","slice3d");return Jn(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),fu(r,t,n)}}),$p=Da({slice4d_:function(e,t,n){const r=Sa(e,"x","slice4d");return Jn(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),fu(r,t,n)}}),Op=Da({softmax_:function(e,t=-1){const n=Sa(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return ya.runKernelFunc(((e,r)=>{const a=e.softmax(n,t);return r([a]),a}),r,null,cn,a)}}),Cp=Da({fft_:function(e){Jn("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ya.runKernelFunc((t=>{const n=e.shape[e.shape.length-1],r=e.size/n,a=e.as2D(r,n);return t.fft(a).reshape(e.shape)}),t,null,Ve)}}),Bp=Da({ifft_:function(e){Jn("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ya.runKernelFunc((t=>{const n=e.shape[e.shape.length-1],r=e.size/n,a=Ws(e,[r,n]),s=t.ifft(a);return Ws(s,e.shape)}),t,null,Ze)}}),Rp=Da({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Ws(e,[n,t]);r=Bp(a)}else{const a=[n,2*(t-1)],s=Ws(Kl(e),[n,t]),o=Ws(cl(e),[n,t]),i=gp(fu(s,[0,1],[n,t-2]),1),u=ni(gp(fu(o,[0,1],[n,t-2]),1),di(-1)),l=du([s,i],1),p=du([o,u],1),c=Ws(Ia(l,p),[a[0],a[1]]);r=Bp(c)}if(r=Kl(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Ws(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});function zp(e,t,n=0){let r=[];if("number"==typeof t)Jn(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{Jn(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}Jn(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}const Lp=Da({split_:function(e,t,n=0){const r=Sa(e,"x","split"),a={x:r},s={numOrSizeSplits:t,axis:n};return ya.runKernelFunc(((e,a)=>{const s=lr(n,r.shape)[0],o=zp(r,t,s);return e.split(r,o,s)}),a,null,pn,s)}}),Pp=Da({rfft_:function(e,t){Jn("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got "+e.dtype));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=fu(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=du([e,Bl(r)],e.shape.length-1),n=t}else a=e;const s=si(a),o=Ws(Ia(a,s),[r,n]),i=Cp(o),u=Math.floor(n/2)+1,l=Kl(i),p=cl(i),c=Lp(l,[u,n-u],l.shape.length-1),h=Lp(p,[u,n-u],p.shape.length-1),d=a.shape.slice();return d[a.shape.length-1]=u,Ws(Ia(c[0],h[0]),d)}}),Vp=Da({squaredDifference_:function(e,t){let n=Sa(e,"a","squaredDifference"),r=Sa(t,"b","squaredDifference");[n,r]=ua(n,r),Si(n.shape,r.shape);const a={a:n,b:r};return ya.runKernelFunc(((e,t)=>{const a=e.squaredDifference(n,r);return t([n,r]),a}),a,null,hn,{})}}),qp=Da({squeeze_:function(e,t){const n=Sa(e,"x","squeeze");return Ws(n,pr(n.shape,t).newShape)}}),Wp=Da({stack_:function(e,t=0){const n=Ea(e,"tensors","stack");if(Jn(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return Zu(n[0],t);const r=n[0].rank,a=n[0].shape,s=n[0].dtype;Jn(t<=r,(()=>"Axis must be <= rank of the tensor")),n.forEach((e=>{Yn(a,e.shape,"All tensors passed to stack must have matching shapes"),Jn(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=n.map((e=>Zu(e,t)));return du(o,t)}}),jp=Da({step_:function(e,t=0){const n=Sa(e,"x","step"),r={x:n},a={alpha:t};return ya.runKernelFunc((e=>e.step(n,t)),r,null,Tn,a)}}),Up=Da({stridedSlice_:function(e,t,n,r,a=0,s=0,o=0,i=0,u=0){let l=Sa(e,"x","stridedSlice");const p={x:l},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return ya.runKernelFunc((e=>{null==r&&(r=new Array(t.length));const p=ro(o);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const c=l.rank-t.length,h=ro(i),d=l.shape.slice();h.forEach((e=>{t[e]=0,n[e]=1,d.splice(e,0,1)})),l=Ws(l,d);const{begin:m,end:f,strides:y}=uo(l.shape,p,c,t,n,r,a,s,o);t=m,n=f,r=y;const g=ro(u);g.forEach((e=>{n[e]=t[e]+1,r[e]=1}));const b=ao(t,n,r),w=b.filter(((e,t)=>-1===g.indexOf(t)));if(r.every((e=>1===e)))return Ws(fu(l,t,b),w);const x=e.stridedSlice(l,t,n,r);return Ws(x,w)}),p,null,yn,c)}}),Kp=Da({tan_:function(e){const t=Sa(e,"x","tan"),n={x:t};return ya.runKernelFunc(((e,n)=>{const r=e.tan(t);return n([t]),r}),n,null,gn)}});function Gp(e,t,n){if(Xn(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Na(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Aa(e,t,r,n)}function Hp(e,t,n){if(Xn(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Na(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Aa(e,t,r,n)}function Jp(e,t,n){if(Xn(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Na(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Aa(e,t,r,n)}function Yp(e,t,n){if(Xn(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Na(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Aa(e,t=t||r,r,n)}const Xp=Da({topk_:function(e,t=1,n=!0){const r=Sa(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got `+t);const s={x:r},o={k:t,sorted:n},[i,u]=ya.runKernelFunc((e=>e.topk(r,t,n)),s,null,xn,o);return{values:i,indices:u}}}),Zp=Da({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new op(t,n,r,!0,a),o=ks(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),Qp=Da({unique_:function(e,t=0){const n=Sa(e,"x","unique",null);Jn(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,o]=ya.runKernel(kn,r,a);return{values:s,indices:o}}}),ec=Da({unsortedSegmentSum_:function(e,t,n){const r=Sa(e,"x","unsortedSegmentSum"),a=Sa(t,"segmentIds","unsortedSegmentSum","int32");Jn(nr(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},o={numSegments:n};return ya.runKernelFunc(((e,t)=>{const s=e.unsortedSegmentSum(r,a,n);return t([a]),s}),s,null,Sn,o)}}),tc=Da({unstack_:function(e,t=0){const n=Sa(e,"x","unstack");Jn(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`)),t<0&&(t+=n.shape.length);const r={value:n},a={axis:t};return ya.runKernelFunc((e=>e.unstack(n,t)),r,null,vn,a)}});function nc(e,t=!0,n,r){return ya.makeVariable(e,t,n,r)}function rc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=ks(e,"int32"),a=ks([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),o=t*e.length;a.values.set(s,o)}return a.toTensor()}const ac=async function(e){const t=Sa(e,"condition","whereAsync","bool"),n=await t.data(),r=rc(t.shape,n);return e!==t&&t.dispose(),r},sc=async function(e,t,n){const r=Sa(e,"tensor","boolMask"),a=Sa(t,"mask","boolMask","bool"),s=null==n?0:n,o=a.rank,i=r.shape;Jn(o>0,(()=>"mask cannot be scalar")),Yn(i.slice(s,s+o),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+o;e++)u*=i[e];const l=i.slice(0,s).concat([u],i.slice(s+o)),p=Ws(r,l),c=Ws(a,[-1]),h=await ac(c),d=qp(h,[1]),m=ul(p,d,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),d.dispose(),p.dispose(),c.dispose(),h.dispose(),m},oc=Da({equalStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","equalStrict"),r=Sa(t,"b","equalStrict");return Yn(n.shape,r.shape,"Error in equalStrict: "),Uu(n,r)}}),ic=Da({greaterEqualStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","greaterEqualStrict"),r=Sa(t,"b","greaterEqualStrict");return Yn(n.shape,r.shape,"Error in greaterEqualStrict: "),pl(n,r)}}),uc=Da({greaterStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","greaterStrict"),r=Sa(t,"b","greaterStrict");return Yn(n.shape,r.shape,"Error in greaterStrict: "),ll(n,r)}}),lc=Da({lessEqualStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","lessEqualStrict"),r=Sa(t,"b","lessEqualStrict");return Yn(n.shape,r.shape,"Error in lessEqualStrict: "),gl(n,r)}}),pc=Da({lessStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","lessStrict"),r=Sa(t,"b","lessStrict");return Yn(n.shape,r.shape,"Error in lessStrict: "),yl(n,r)}}),cc=Da({notEqualStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","notEqualStrict"),r=Sa(t,"b","notEqualStrict");return Yn(n.shape,r.shape,"Error in notEqualStrict: "),Ul(n,r)}}),hc=Da({addStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","addStrict"),r=Sa(t,"b","addStrict");return Yn(n.shape,r.shape,"Error in addStrict: "),Qo(n,r)}}),dc=Da({divStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","div"),r=Sa(t,"b","div");return Yn(n.shape,r.shape,"Error in divideStrict: "),ti(n,r)}}),mc=Da({maximumStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","maximumStrict"),r=Sa(t,"b","maximumStrict");return Yn(n.shape,r.shape,"Error in maximumStrict: "),Ei(n,r)}}),fc=Da({minimumStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","minimumStrict"),r=Sa(t,"b","minimumStrict");return Yn(n.shape,r.shape,"Error in minimumStrict: "),Pl(n,r)}}),yc=Da({modStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","modStrict"),r=Sa(t,"b","modStrict");return Yn(n.shape,r.shape,"Error in modStrict: "),Vl(n,r)}}),gc=Da({mulStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","mul"),r=Sa(t,"b","mul");return Yn(n.shape,r.shape,"Error in multiplyStrict: "),ni(n,r)}}),bc=Da({powStrict_:function(e,t){return Co("strict variants of ops have been deprecated and will be removed in future"),Yn(e.shape,t.shape,"Error in powStrict: "),bi(e,t)}}),wc=Da({squaredDifferenceStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","squaredDifferenceStrict"),r=Sa(t,"b","squaredDifferenceStrict");return Yn(n.shape,r.shape,"Error in squaredDifferenceStrict: "),Vp(n,r)}}),xc=Da({subStrict_:function(e,t){Co("strict variants of ops have been deprecated and will be removed in future");const n=Sa(e,"a","subStrict"),r=Sa(t,"b","subStrict");return Yn(n.shape,r.shape,"Error in subStrict: "),wi(n,r)}});function Nc(e,t,n=null){if(0===e.rank)return Ni(e);if(1!==e.rank&&null===n)return Nc(Ws(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Tl(Ni(e),n);if(t===1/0)return El(Ni(e),n);if(t===-1/0)return Ll(Ni(e),n);if("euclidean"===t||2===t)return ri(Tl(bi(Ni(e),di(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+t)}if(Array.isArray(n)&&2===n.length){if(1===t)return El(Tl(Ni(e),n[0]),n[1]-1);if(t===1/0)return El(Tl(Ni(e),n[1]),n[0]);if(t===-1/0)return Ll(Tl(Ni(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ri(Tl(ai(e),n));throw new Error("Error in norm: invalid ord value: "+t)}throw new Error("Error in norm: invalid axis: "+n)}const kc=Da({norm_:function(e,t="euclidean",n=null,r=!1){const a=Nc(e=Sa(e,"x","norm"),t,n);let s=a.shape;if(r){const t=lr(n,e.shape);s=Bi(a.shape,t)}return Ws(a,s)}}),vc=Da({movingAverage_:function(e,t,n,r,a=!0){const s=Sa(e,"v","movingAverage"),o=Sa(t,"x","movingAverage"),i=Sa(n,"decay","movingAverage");la(s,o),Jn(tr(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const u=di(1),l=wi(u,i);let p=ni(wi(o,s),l);if(a){Jn(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Sa(r,"step","movingAverage");p=ti(p,wi(u,bi(i,e)))}return Qo(s,p)}}),Sc=Da({scatterND_:function(e,t,n){const r=Sa(e,"indices","scatterND","int32"),a=Sa(t,"updates","scatterND");eo(a,r,n);const s={indices:r,updates:a},o={shape:n};return ya.runKernelFunc((e=>e.scatterND(r,a,n)),s,null,Xt,o)}}),Ec=Da({sparseToDense_:function(e,t,n,r=0){const a=Sa(e,"sparseIndices","sparseToDense","int32"),s=Sa(t,"sparseValues","sparseToDense"),o=Sa(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,o);const i={sparseIndices:a,sparseValues:s,defaultValue:o},u={outputShape:n};return ya.runKernelFunc((e=>e.sparseToDense(a,s,n,o)),i,null,fn,u)}}),Tc=Da({gatherND_:function(e,t){const n=Sa(t,"indices","gatherND","int32"),r=Sa(e,"x","gatherND"),a={params:r,indices:n};return ya.runKernelFunc((e=>e.gatherND(r,n)),a,null,He)}}),Dc=Da({dropout_:function(e,t,n,r){const a=Sa(e,"x","dropout");if(Jn("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),Jn(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Zr?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(tr(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,i=ti(nl(Qo(cp(s,0,1,"float32",r),o)),o);return ni(a,i)}});function Ic(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Ac(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return hp(a,"float32")}const _c=async function(e,t,n=1){const r=Sa(e,"predictions","inTopK"),a=Sa(t,"targets","inTopK");Jn(r.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank)),Jn(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),Yn(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Jn(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const o=await r.data(),i=await a.data(),[u,l]=[o.length/s,s],p=cr("bool",u);for(let e=0;e<u;e++){const t=e*l,r=o.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),p[e]=0;for(let t=0;t<n;t++)if(a[t].index===i[e]){p[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),_a(p,a.shape,"bool")},Fc=Da({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",o){let i=e;3===e.rank&&(i=Ws(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Ws(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Jn(4===i.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+i.shape+".")),Jn(4===u.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+".")),Jn(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+"."));const l="NHWC"===s?i.shape[3]:i.shape[1],p="NHWC"===s?u.shape[3]:u.shape[1];Jn(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),Jn(p===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${n[3]}).`)),null!=o&&Jn(nr(a),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const c={x:i,dy:u},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:o};return ya.runKernelFunc((e=>{const t=uu(s),l=Qi(i.shape,n,r,1,a,o,!1,t);return e.conv2dDerFilter(i,u,l)}),c,null,ge,h)}});function Mc(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return ni(e,jp(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function $c(e,t){let n=t;const r=vi(e.shape,t.shape);return r.length>0&&(n=Tl(n,r)),Ws(n,e.shape)}function Oc(e,t,n){if("linear"===t)return e;if("relu"===t)return fp(e);if("elu"===t)return Ju(e);if("relu6"===t)return yp(e);if("prelu"===t)return np(e,n);throw new Error(`Unknown fused activation ${t}.`)}const Cc=(e,t)=>!(e>0)||"linear"===t,Bc=Da({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l}){if(u=u||"linear",!1===Cc(ya.state.gradientDepth,u)){let p=Fu(e,t,n,r,a,s,o);return null!=i&&(p=Qo(p,i)),Oc(p,u,l)}const p=Sa(e,"x","conv2d"),c=Sa(t,"filter","conv2d");let h=p,d=!1;3===p.rank&&(d=!0,h=Ws(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Jn(4===h.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+h.rank+".")),Jn(4===c.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+c.rank+".")),null!=o&&Jn(nr(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),Jn(h.shape[3]===c.shape[2],(()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${c.shape[2]}.`)),Jn(iu(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Jn("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const m=Qi(h.shape,c.shape,n,s,r,o);let f,y;null!=i&&(f=Sa(i,"bias","fused conv2d"),[f]=ua(f,p),Si(m.outShape,f.shape)),null!=l&&(y=Sa(l,"prelu weights","fused conv2d"));const g=(e,t)=>{const[a,o,i,l]=t,p=Mc(e,i,u);Jn(ou(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const c=[$u(o.shape,p,a,n,r),Fc(o,p,a.shape,n,r)];if(null!=l){const e=$c(l,p);c.push(e)}return c},b=e=>e.fusedConv2d({input:h,filter:c,convInfo:m,bias:f,activation:u,preluActivationWeights:y}),w={x:h,filter:c,bias:f,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u};return null==i?ci(((e,t,n)=>{let r=ya.runKernelFunc(b,w,null,_n,x);return n([t,e,r]),d&&(r=Ws(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:g}}))(h,c):ci(((e,t,n,r)=>{let a=ya.runKernelFunc(b,w,null,_n,x);return r([t,e,a,n]),d&&(a=Ws(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:g}}))(h,c,f)}}),Rc=Da({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r){let a=e;3===e.rank&&(a=Ws(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let s=t;3===s.rank&&(s=Ws(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const o={x:a,dy:s};return ya.runKernelFunc((e=>e.depthwiseConv2DDerFilter(a,s,r)),o,null,Ie)}}),zc=Da({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r){let a=t,s=!1;3===t.rank&&(s=!0,a=Ws(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const o={dy:a},i=ya.runKernelFunc((e=>e.depthwiseConv2DDerInput(a,n,r)),o,null,Ae);return s?Ws(i,[i.shape[1],i.shape[2],i.shape[3]]):i}}),Lc=Da({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l}){if(!1===Cc(ya.state.gradientDepth,u)){let p=qu(e,t,n,r,a,s,o);return null!=i&&(p=Qo(p,i)),Oc(p,u,l)}const p=Sa(e,"x","depthwiseConv2d"),c=Sa(t,"filter","depthwiseConv2d");let h=p,d=!1;3===p.rank&&(d=!0,h=Ws(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Jn(4===h.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),Jn(4===c.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`)),Jn(h.shape[3]===c.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),null==s&&(s=[1,1]),Jn(iu(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=o&&Jn(nr(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`));const m=Qi(h.shape,c.shape,n,s,r,o,!0);let f,y;null!=i&&(f=Sa(i,"bias","fused conv2d"),[f]=ua(f,p),Si(m.outShape,f.shape)),null!=l&&(y=Sa(l,"prelu weights","fused depthwiseConv2d"));const g=(e,t)=>{Jn(ou(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[n,r,a,o]=t,i=Mc(e,a,u),l=zc(r.shape,i,n,m),p=Rc(r,i,n.shape,m);return null!=o?[l,p,$c(f,i)]:[l,p]},b=e=>e.fusedDepthwiseConv2D({input:h,filter:c,convInfo:m,bias:f,activation:u,preluActivationWeights:y}),w={x:h,filter:c,bias:f,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u};return null==i?ci(((e,t,n)=>{let r=ya.runKernelFunc(b,w,null,Fn,x);return n([t,e,r]),d&&(r=Ws(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:g}}))(h,c):ci(((e,t,n,r)=>{let a=ya.runKernelFunc(b,w,null,Fn,x);return r([t,e,a,n]),d&&(a=Ws(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:g}}))(h,c,f)}}),Pc=Da({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:o}){if(!1===Cc(ya.state.gradientDepth,s)){let i=js(e,t,n,r);return null!=a&&(i=Qo(i,a)),Oc(i,s,o)}let i=Sa(e,"a","fused matMul"),u=Sa(t,"b","fused matMul");[i,u]=ua(i,u);const l=n?i.shape[i.rank-2]:i.shape[i.rank-1],p=r?u.shape[u.rank-1]:u.shape[u.rank-2],c=n?i.shape[i.rank-1]:i.shape[i.rank-2],h=r?u.shape[u.rank-2]:u.shape[u.rank-1],d=i.shape.slice(0,-2),m=u.shape.slice(0,-2),f=Qn(d),y=Qn(m);Jn(i.rank>=2&&u.rank>=2&&i.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${i.rank} and ${u.rank}.`)),Jn(tr(d,m),(()=>`Error in fused matMul: outer dimensions (${d}) and (${m}) of Tensors with shapes ${i.shape} and `+u.shape+" must match.")),Jn(l===p,(()=>`Error in fused matMul: inner shapes (${l}) and (${p}) of Tensors with shapes ${i.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const g=i.shape.slice(0,-2).concat([c,h]),b=Ws(i,n?[f,l,c]:[f,c,l]),w=Ws(u,r?[y,h,p]:[y,p,h]);let x,N;null!=a&&(x=Sa(a,"bias","fused matMul"),[x]=ua(x,i),Si(g,x.shape)),null!=o&&(N=Sa(o,"prelu weights","fused matMul"));const k=(e,t)=>{const[o,i,u,l]=t,p=Mc(Ws(e,u.shape),u,s);let c,h;return n||r?!n&&r?(c=js(p,i,!1,!1),h=js(p,o,!0,!1)):n&&!r?(c=js(i,p,!1,!0),h=js(o,p,!1,!1)):(c=js(i,p,!0,!0),h=js(p,o,!0,!0)):(c=js(p,i,!1,!0),h=js(o,p,!0,!1)),null!=a?[c,h,$c(l,p)]:[c,h]},v=e=>e.fusedBatchMatMul({a:b,b:w,transposeA:n,transposeB:r,bias:x,activation:s,preluActivationWeights:N}),S={a:b,b:w,bias:x,preluActivationWeights:N},E={transposeA:n,transposeB:r,activation:s};return null==a?ci(((e,t,n)=>{const r=ya.runKernelFunc(v,S,null,An,E);return n([e,t,r]),{value:Ws(r,g),gradFunc:k}}))(b,w):ci(((e,t,n,r)=>{const a=ya.runKernelFunc(v,S,null,An,E);return r([e,t,a,n]),{value:Ws(a,g),gradFunc:k}}))(b,w,x)}}),Vc=Da({hammingWindow_:function(e){return Ac(e,.54,.46)}}),qc=Da({hannWindow_:function(e){return Ac(e,.5,.5)}}),Wc=Da({frame_:function(e,t,n,r=!1,a=0){let s=0;const o=[];for(;s+t<=e.size;)o.push(fu(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=du([fu(e,s,t-r),yi([r],a)]);o.push(i),s+=n}return 0===o.length?Gp([],[0,t]):Ws(du(o),[o.length,t])}}),jc=Da({stft_:function(e,t,n,r,a=qc){null==r&&(r=Ic(t));const s=Wc(e,t,n),o=ni(s,a(t)),i=[];for(let e=0;e<s.shape[0];e++)i.push(Pp(fu(o,[e,0],[1,t]),r));return du(i)}}),Uc=Da({cropAndResize_:function(e,t,n,r,a,s){const o=Sa(e,"image","cropAndResize"),i=Sa(t,"boxes","cropAndResize","float32"),u=Sa(n,"boxInd","cropAndResize","int32");a=a||"bilinear",s=s||0;const l=i.shape[0];Jn(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),Jn(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`)),Jn(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`)),Jn(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Jn(r[0]>=1&&r[1]>=1,(()=>"cropSize must be atleast [1,1], but was "+r)),Jn("bilinear"===a||"nearest"===a,(()=>"method must be bilinear or nearest, but was "+a));const p={image:o,boxes:i,boxInd:u},c={method:a,extrapolationValue:s,cropSize:r};return ya.runKernelFunc((e=>e.cropAndResize(o,i,u,r,a,s)),p,null,Ee,c)}}),Kc=Da({flipLeftRight_:function(e){const t=Sa(e,"image","flipLeftRight","float32");Jn(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ya.runKernel(We,n,{})}}),Gc=Da({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Sa(e,"image","rotateWithOffset","float32");Jn(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},o={radians:t,fillValue:n,center:r};return ya.runKernel(In,s,o)}});function Hc(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),Jn(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Jn(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Jn(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1])),Jn(1===t.rank,(()=>"scores must be a 1D tensor")),Jn(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was `+t.shape[0])),Jn(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const Jc=Da({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Sa(e,"boxes","nonMaxSuppression"),o=Sa(t,"scores","nonMaxSuppression"),i=Hc(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return ya.runKernelFunc((e=>e.nonMaxSuppression(s,o,n,r,a)),{boxes:s,scores:o},null,It,u)}});function Yc(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||Xc)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Xc(e,t){return e>t?1:e<t?-1:0}function Zc(e,t,n,r,a){return th(e,t,n,r,a,0).selectedIndices}function Qc(e,t,n,r,a,s){return th(e,t,n,r,a,0,!1,s,!0)}function eh(e,t,n,r,a,s){return th(e,t,n,r,a,s,!0)}function th(e,t,n,r,a,s,o=!1,i=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(ah);const p=s>0?-.5/s:0,c=[],h=[];for(;c.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<a)break;let i=!1;for(let n=c.length-1;n>=o;--n){const o=nh(e,s,c[n]);if(o>=r){i=!0;break}if(t.score=t.score*rh(r,p,o),t.score<=a)break}t.suppressBeginIndex=c.length,i||(t.score===n?(c.push(s),h.push(t.score)):t.score>a&&Yc(l,t,ah))}const d=c.length,m=n-d;i&&m>0&&(c.push(...new Array(m).fill(0)),h.push(...new Array(m).fill(0)));const f={selectedIndices:hp(c,"int32")};return o&&(f.selectedScores=hp(h,"float32")),u&&(f.validOutputs=di(d,"int32")),f}function nh(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),p=Math.min(a[1],a[3]),c=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),d=(i-s)*(u-o),m=(c-l)*(h-p);if(d<=0||m<=0)return 0;const f=Math.max(s,l),y=Math.max(o,p),g=Math.min(i,c),b=Math.min(u,h),w=Math.max(g-f,0)*Math.max(b-y,0);return w/(d+m-w)}function rh(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function ah(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const sh=Da({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=Sa(e,"boxes","nonMaxSuppression"),i=Sa(t,"scores","nonMaxSuppression"),u=Hc(o,i,n,r,a,s),l={boxes:o,scores:i},p={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},c=ya.runKernel(_t,l,p);return{selectedIndices:c[0],selectedScores:c[1]}}}),oh=Da({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=Sa(e,"boxes","nonMaxSuppression"),i=Sa(t,"scores","nonMaxSuppression"),u=Hc(o,i,n,r,a,null),l={boxes:o,scores:i},p={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},c=ya.runKernel(At,l,p);return{selectedIndices:c[0],validOutputs:c[1]}}}),ih=Da({resizeBilinear_:function(e,t,n=!1){const r=Sa(e,"images","resizeBilinear");Jn(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),Jn(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."));let a=r,s=!1;3===r.rank&&(s=!0,a=Ws(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[o,i]=t,u={images:a},l={alignCorners:n,size:t},p=ya.runKernelFunc(((e,t)=>(t([a]),e.resizeBilinear(a,o,i,n))),u,null,Ut,l);return s?Ws(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),uh=Da({resizeNearestNeighbor_:function(e,t,n=!1){const r=Sa(e,"images","resizeNearestNeighbor");Jn(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),Jn(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+".")),Jn("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let a=r,s=!1;3===r.rank&&(s=!0,a=Ws(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[o,i]=t,u={images:a},l={alignCorners:n,size:t},p=ya.runKernelFunc(((e,t)=>(t([a]),e.resizeNearestNeighbor(a,o,i,n))),u,null,Wt,l);return s?Ws(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),lh=Da({bandPart_:function(e,t,n){Jn(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Jn(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Sa(e,"a","bandPart");Jn(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,o]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=s),n<0&&(n=o);const i=Ws(dp(0,s,1,"int32"),[-1,1]),u=dp(0,o,1,"int32"),l=wi(i,u),p=Al(gl(l,di(+t,"int32")),pl(l,di(-n,"int32"))),c=Bl([s,o],r.dtype);return Ws(Wp(tc(Ws(r,[-1,s,o])).map((e=>Ku(p,e,c)))),a)}}),ph=Da({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Jn(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Jn(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Lp(e,e.shape[0],0).map((e=>qp(e,[0])));Jn(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ya.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=ni(Tl(ni(n[r],e)),n[r]);e=wi(e,t)}return ti(e,kc(e,"euclidean"))})));return t?Wp(n,0):n}});function ch(e,t=!1){return ya.tidy((()=>{Jn(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=tl(n),s=Ss(e);const o=Gp([[1]],[1,1]);let i=Ss(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=i,l=a;[i,s,a]=ya.tidy((()=>{const t=fu(s,[e,e],[n-e,1]),u=kc(t),l=fu(s,[e,e],[1,1]),p=Ku(ll(l,0),Gp([[-1]]),Gp([[1]])),c=wi(l,ni(p,u)),h=ti(t,c);i=1===h.shape[0]?Ss(o):du([o,fu(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const d=kl(ti(js(p,c),u)),m=fu(s,[e,0],[n-e,r]),f=ni(d,i),y=Ks(i);if(0===e)s=wi(m,js(f,js(y,m)));else{const t=wi(m,js(f,js(y,m)));s=du([fu(s,[0,0],[e,r]),t],0)}const g=Ks(f),b=fu(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=wi(b,js(js(b,i),g));else{const t=wi(b,js(js(b,i),g));a=du([fu(a,[0,0],[n,e]),t],1)}return[i,s,a]})),Vo([t,u,l])}return!t&&n>r&&(a=fu(a,[0,0],[n,r]),s=fu(s,[0,0],[r,r])),[a,s]}))}const hh=Da({qr_:function(e,t=!1){if(Jn(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank)),2===e.rank)return ch(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=tc(Ws(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=ch(e,t);a.push(n),s.push(r)})),[Ws(Wp(a,0),e.shape),Ws(Wp(s,0),e.shape)]}}});var dh;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(dh||(dh={}));const mh=Da({computeWeightedLoss_:function(e,t,n=dh.SUM_BY_NONZERO_WEIGHTS){const r=Sa(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Sa(t,"weights","computeWeightedLoss"));const s=null==a?r:ni(r,a);if(n===dh.NONE)return s;if(n===dh.SUM)return Tl(s);if(n===dh.MEAN){if(null==a)return zl(s);{const e=r.size/a.size,t=ti(Tl(s),Tl(a));return e>1?ti(t,di(e)):t}}if(n===dh.SUM_BY_NONZERO_WEIGHTS){if(null==a)return ti(Tl(s),di(r.size));{const e=ni(a,Rl(r.shape)),t=vs(Tl(Ul(e,di(0))),"float32");return ti(Tl(s),t)}}throw Error("Unknown reduction: "+n)}}),fh=Da({absoluteDifference_:function(e,t,n,r=dh.SUM_BY_NONZERO_WEIGHTS){const a=Sa(e,"labels","absoluteDifference"),s=Sa(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=Sa(n,"weights","absoluteDifference")),Yn(a.shape,s.shape,"Error in absoluteDifference: ");const i=Ni(wi(a,s));return mh(i,o,r)}}),yh=Da({cosineDistance_:function(e,t,n,r,a=dh.SUM_BY_NONZERO_WEIGHTS){const s=Sa(e,"labels","cosineDistance"),o=Sa(t,"predictions","cosineDistance");let i=null;null!=r&&(i=Sa(r,"weights","cosineDistance")),Yn(s.shape,o.shape,"Error in cosineDistance: ");const u=di(1),l=wi(u,Tl(ni(s,o),n,!0));return mh(l,i,a)}}),gh=Da({hingeLoss_:function(e,t,n,r=dh.SUM_BY_NONZERO_WEIGHTS){let a=Sa(e,"labels","hingeLoss");const s=Sa(t,"predictions","hingeLoss");let o=null;null!=n&&(o=Sa(n,"weights","hingeLoss")),Yn(a.shape,s.shape,"Error in hingeLoss: ");const i=di(1);a=wi(ni(di(2),a),i);const u=fp(wi(i,ni(a,s)));return mh(u,o,r)}}),bh=Da({huberLoss_:function(e,t,n,r=1,a=dh.SUM_BY_NONZERO_WEIGHTS){const s=Sa(e,"labels","huberLoss"),o=Sa(t,"predictions","huberLoss");let i=null;null!=n&&(i=Sa(n,"weights","huberLoss")),Yn(s.shape,o.shape,"Error in huberLoss: ");const u=di(r),l=Ni(wi(o,s)),p=Pl(l,u),c=wi(l,p),h=Qo(ni(di(.5),ai(p)),ni(u,c));return mh(h,i,a)}}),wh=Da({logLoss_:function(e,t,n,r=1e-7,a=dh.SUM_BY_NONZERO_WEIGHTS){const s=Sa(e,"labels","logLoss"),o=Sa(t,"predictions","logLoss");let i=null;null!=n&&(i=Sa(n,"weights","logLoss")),Yn(s.shape,o.shape,"Error in logLoss: ");const u=di(1),l=di(r),p=kl(ni(s,xl(Qo(o,l)))),c=ni(wi(u,s),xl(Qo(wi(u,o),l))),h=wi(p,c);return mh(h,i,a)}}),xh=Da({meanSquaredError_:function(e,t,n,r=dh.SUM_BY_NONZERO_WEIGHTS){const a=Sa(e,"labels","meanSquaredError"),s=Sa(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=Sa(n,"weights","meanSquaredError")),Yn(a.shape,s.shape,"Error in meanSquaredError: ");const i=Vp(a,s);return mh(i,o,r)}}),Nh=Da({sigmoidCrossEntropy_:function(e,t,n,r=0,a=dh.SUM_BY_NONZERO_WEIGHTS){let s=Sa(e,"multiClassLabels","sigmoidCrossEntropy");const o=Sa(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=Sa(n,"weights","sigmoidCrossEntropy")),Yn(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=di(r),t=di(1),n=di(.5);s=Qo(ni(s,wi(t,e)),ni(n,e))}const u=function(e,t){const n=Sa(e,"labels","sigmoidCrossEntropyWithLogits"),r=Sa(t,"logits","sigmoidCrossEntropyWithLogits");Yn(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=fp(r),s=ni(r,n),o=Nl(Xu(kl(Ni(r))));return Qo(wi(a,s),o)}(s,o);return mh(u,i,a)}}),kh=Da({softmaxCrossEntropy_:function(e,t,n,r=0,a=dh.SUM_BY_NONZERO_WEIGHTS){let s=Sa(e,"onehotLabels","softmaxCrossEntropy");const o=Sa(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=Sa(n,"weights","softmaxCrossEntropy")),Yn(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=di(r),t=di(1),n=di(s.shape[1]);s=Qo(ni(s,wi(t,e)),ti(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return ci(((e,t,r)=>{const a=Il(t,[n],!0),s=wi(vs(t,"float32"),a);r([e,s]);const o=kl(ni(s,e));return{value:Tl(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Bi(e.shape,[n]);return[ni(Ws(e,s),wi(vs(r,"float32"),Xu(a))),ni(Ws(e,s),wi(Xu(a),vs(r,"float32")))]}}}))(e,t)}(s,o);return mh(u,i,a)}}),vh={fft:Cp,ifft:Bp,rfft:Pp,irfft:Rp},Sh={hammingWindow:Vc,hannWindow:qc,frame:Wc,stft:jc},Eh={flipLeftRight:Kc,resizeNearestNeighbor:uh,resizeBilinear:ih,rotateWithOffset:Gc,cropAndResize:Uc,nonMaxSuppression:Jc,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Sa(e,"boxes","nonMaxSuppressionAsync"),o=Sa(t,"scores","nonMaxSuppressionAsync"),i=Hc(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),l=Zc(u[0],u[1],n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),l},nonMaxSuppressionWithScore:sh,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=Sa(e,"boxes","nonMaxSuppressionAsync"),i=Sa(t,"scores","nonMaxSuppressionAsync"),u=Hc(o,i,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),p=eh(l[0],l[1],n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),p},nonMaxSuppressionPadded:oh,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=Sa(e,"boxes","nonMaxSuppressionAsync"),i=Sa(t,"scores","nonMaxSuppressionAsync"),u=Hc(o,i,n,r,a,null),l=u.maxOutputSize,p=u.iouThreshold,c=u.scoreThreshold,[h,d]=await Promise.all([o.data(),i.data()]),m=Qc(h,d,l,p,c,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),m}},Th={bandPart:lh,gramSchmidt:ph,qr:hh},Dh={absoluteDifference:fh,computeWeightedLoss:mh,cosineDistance:yh,hingeLoss:gh,huberLoss:bh,logLoss:wh,meanSquaredError:xh,sigmoidCrossEntropy:Nh,softmaxCrossEntropy:kh};class Ih{static sgd(e){return new Di(e)}static momentum(e,t,n=!1){return new Ii(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Ai(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new xi(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new fi(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Ti(e,t,n,r,a)}static adagrad(e,t=.1){return new gi(e,t)}}const Ah={sgd:Ih.sgd,momentum:Ih.momentum,adadelta:Ih.adadelta,adagrad:Ih.adagrad,rmsprop:Ih.rmsprop,adamax:Ih.adamax,adam:Ih.adam},_h="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Fh(){return new Promise((e=>_h((()=>e()))))}function Mh(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function $h(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Oh(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Ch(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Bh(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Rh(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}const zh=1.7580993408473768,Lh=1.0507009873554805,Ph=.3275911,Vh=.254829592,qh=-.284496736,Wh=1.421413741,jh=-1.453152027,Uh=1.061405429;function Kh(...e){L().getBool("IS_TEST")||console.warn(...e)}function Gh(...e){L().getBool("IS_TEST")||console.log(...e)}function Hh(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Jh(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Yh(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Xh(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Zh(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Qh(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function ed(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function td(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function nd(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=Bl(e.shape),r=vs(e,"float32"),a=n.complex(r,t);return t.dispose(),r.dispose(),a}if(!fr(e.dtype,t))return ya.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const r=n.real(e),a=vs(r,t);return r.dispose(),a}if("int32"===t)return n.int(e);if("bool"===t){const t=di(0,e.dtype),r=n.notEqual(e,t);return t.dispose(),r}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)}function rd(e,t){return ya.makeTensorFromDataId(e.dataId,t,e.dtype)}function ad(e,t,n){const r=(t-e)/(n-1),a=Fr(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return hp(a,"float32")}function sd(e,t,n){const r=new Array(e.rank).fill(0),a=e.shape.slice();return t.map((t=>{const s=[...a];s[n]=t;const o=fu(e,r,s);return r[n]+=t,o}))}function od(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=ks(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r.toTensor()}function id(e,t,n,r,a){const s=t[t.length-1],[o,i]=[e.length/s,s],u=cr(n,o*r),l=cr("int32",o*r);for(let t=0;t<o;t++){const n=t*i,a=e.subarray(n,n+i),s=[];for(let e=0;e<a.length;e++)s.push({value:a[e],index:e});s.sort(((e,t)=>t.value-e.value));const o=t*r,p=u.subarray(o,o+r),c=l.subarray(o,o+r);for(let e=0;e<r;e++)p[e]=s[e].value,c[e]=s[e].index}const p=t.slice();return p[p.length-1]=r,[_a(u,p,n),_a(l,p,"int32")]}const ud={kernelName:j,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ni(e,jp(vs(n,"float32"),-1))}}},ld={kernelName:U,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ai(vs(n,"float32")),r=ri(wi(di(1),t));return kl(ti(e,r))}}}},pd={kernelName:K,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ri(wi(ai(vs(n,"float32")),1));return ti(e,t)}}}},cd={kernelName:G,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Si(n.shape,r.shape);return{a:()=>{let t=e;const r=vi(n.shape,a);return r.length>0&&(t=Tl(t,r)),Ws(t,n.shape)},b:()=>{let t=e;const n=vi(r.shape,a);return n.length>0&&(t=Tl(t,n)),Ws(t,r.shape)}}}},hd={kernelName:H,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},dd={kernelName:X,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>si(n)}}},md={kernelName:Z,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>si(n)}}},fd={kernelName:Q,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ti(e,ri(wi(di(1),ai(vs(n,"float32")))))}}},yd={kernelName:ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ri(Qo(di(1),ai(vs(n,"float32"))));return ti(e,t)}}}},gd={kernelName:re,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Si(n.shape,r.shape);return{a:()=>{const t=Qo(ai(n),ai(r));let s=ni(e,ti(r,t));const o=vi(n.shape,a);return o.length>0&&(s=Tl(s,o)),Ws(s,n.shape)},b:()=>{const t=Qo(ai(n),ai(r));let s=kl(ni(e,ti(n,t)));const o=vi(r.shape,a);return o.length>0&&(s=Tl(s,o)),Ws(s,r.shape)}}}},bd={kernelName:te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ti(e,Qo(ai(vs(n,"float32")),1))}}},wd={kernelName:ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ti(e,wi(di(1),ai(vs(n,"float32"))))}}},xd=Da({avgPool3dBackprop_:function(e,t,n,r,a=[1,1,1],s,o){const i=Sa(e,"dy","avgPool3dBackprop"),u=Sa(t,"input","avgPool3dBackprop");let l=i,p=u,c=!1;4===u.rank&&(c=!0,l=Ws(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=Ws(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Jn(5===l.rank,(()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+".")),Jn(5===p.rank,(()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+p.rank+".")),Jn(iu(r,a),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`)),null!=o&&Jn(nr(s),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`));const h={dy:l,input:p},d={filterSize:n,strides:r,dilations:a,pad:s,dimRoundingMode:o},m=ya.runKernelFunc((e=>{const t=Zi(p.shape,n,r,a,s,o);return e.avgPool3dBackprop(l,p,t)}),h,null,ie,d);return c?Ws(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),Nd={kernelName:oe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,dilations:o,pad:i,dimRoundingMode:u}=n,l=null==o?[1,1,1]:o;return{x:()=>xd(e,r,a,s,l,i,u)}}},kd=Da({avgPoolBackprop_:function(e,t,n,r,a){const s=Sa(e,"dy","avgPoolBackprop"),o=Sa(t,"input","avgPoolBackprop");Jn(o.rank===s.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${s.rank})`));let i=o,u=s,l=!1;3===o.rank&&(l=!0,i=Ws(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=Ws(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Jn(4===u.rank,(()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+u.rank+".")),Jn(4===i.rank,(()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+i.rank+"."));const p={dy:u,input:i},c={filterSize:n,strides:r,pad:a},h=ya.runKernelFunc((e=>{const t=Xi(i.shape,n,r,1,a);return e.avgPoolBackprop(u,i,t)}),p,null,se,c);return l?Ws(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),vd={kernelName:ae,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:o}=n;return{x:()=>kd(e,r,a,s,o)}}},Sd={kernelName:ue,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>js(e,a,!1,!1),b:()=>js(e,r,!0,!1)}:s&&!o?{a:()=>js(a,e,!1,!0),b:()=>js(r,e,!1,!1)}:{a:()=>js(a,e,!0,!0),b:()=>js(e,r,!0,!0)}:{a:()=>js(e,a,!1,!0),b:()=>js(r,e,!0,!1)}}},Ed={kernelName:le,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>ep(e,r,a)}}},Td={kernelName:pe,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,o=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])o[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const i=[];for(let e=0;e<o.length;e++)o[e]>1&&i.push(e);return{x:()=>Tl(e,i,!0)}}},Dd={kernelName:ce,gradFunc:e=>({x:()=>e.clone()})},Id={kernelName:he,gradFunc:e=>({x:()=>si(e)})},Ad={kernelName:de,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Ku(Al(pl(r,a),gl(r,s)),e,si(e))}}},_d={kernelName:fe,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=lr(a,t[0].shape)[0],o=r.map((e=>e[s]));return Lp(e,o,s).map((e=>()=>e))}},Fd={kernelName:ye,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:o,pad:i,dataFormat:u}=n;return Jn(ou(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>$u(r.shape,e,a,o,i,u),filter:()=>Fc(r,e,a.shape,o,i,u)}}},Md={kernelName:be,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>Fu(e,a,s,o,i,1,u),filter:()=>Fc(e,r,a.shape,s,o,i,u)}}},$d=Da({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Ws(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=Ws(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Jn(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+s.shape+".")),Jn(5===o.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+o.shape+".")),Jn(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+".")),Jn(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),Jn(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const i={x:s,y:o},u={strides:r,pad:a};return ya.runKernelFunc((e=>{const t=eu(s.shape,n,r,1,a);return e.conv3dDerFilter(s,o,t)}),i,null,xe,u)}}),Od={kernelName:we,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;Jn(ou(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[o,i]=t;return{x:()=>Bu(o.shape,e,i,a,s),filter:()=>$d(o,e,i.shape,a,s)}}},Cd={kernelName:ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ni(kl(Ip(vs(n,"float32"))),e)}}},Bd={kernelName:ve,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ni(Ap(vs(n,"float32")),e)}}},Rd={kernelName:Se,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:o}=n;return{x:()=>{const t=zi([a],r.rank);let n=Pu(e,a,s,!o);return null!=t&&(n=Ks(n,t)),n}}}},zd={kernelName:De,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:o}=n,i=null==r?[1,1]:r;Jn(ou(i),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[u,l]=t;Jn(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),Jn(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),Jn(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Jn(iu(a,i),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${i}'.`)),null!=o&&Jn(nr(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`));const p=Qi(u.shape,l.shape,a,i,s,o,!0);return{x:()=>zc(u.shape,e,l,p),filter:()=>Rc(u,e,l.shape,p)}}},Ld={kernelName:Fe,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},o={x:r,filter:a,dy:e};return{x:()=>ya.runKernel(Me,s,n),filter:()=>ya.runKernel($e,o,n)}}},Pd={kernelName:Oe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Si(n.shape,r.shape);return{a:()=>{const t=ti(e,vs(r,"float32")),s=vi(n.shape,a);return s.length>0?Ws(Tl(t,s),n.shape):t},b:()=>{let t=ni(e,vs(n,"float32"));const s=vi(r.shape,a);s.length>0&&(t=Ws(Tl(t,s),r.shape));const o=ai(r);return kl(ti(t,vs(o,"float32")))}}}},Vd={kernelName:Ce,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r=t=>t.eluDer(e,n),a={dy:e,y:n};return{x:()=>ya.runKernelFunc(r,a,null,Be)}}},qd={kernelName:Re,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ni(Xu(kl(ai(n))),2/Math.sqrt(Math.PI));return{x:()=>ni(e,r)}}},Wd={kernelName:Le,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ni(e,n)}}},jd={kernelName:Pe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ni(e,Xu(n))}}},Ud={kernelName:je,gradFunc:e=>({x:()=>si(e)})},Kd={kernelName:Ue,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Si(n.shape,r.shape);return{a:()=>{const t=ti(e,vs(r,"float32")),s=vi(n.shape,a);return s.length>0?Ws(Tl(t,s),n.shape):t},b:()=>{let t=ni(e,vs(n,"float32"));const s=vi(r.shape,a);s.length>0&&(t=Ws(Tl(t,s),r.shape));const o=ai(r);return kl(ti(t,vs(o,"float32")))}}}},Gd={kernelName:Ke,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,o,i]=t,u=null==i?di(1):i,l=vi(s.shape,a.shape),p=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)p.push(a.shape[e]);p.push(1)}const c=wi(a,s),h=ni(e,u),d=vp(Qo(o,di(r))),m=ni(ni(ni(d,d),d),di(-.5));return{x:()=>1===s.rank?Ws(ni(ni(e,el(Ws(d,[1,1,1,s.shape[0]]),p)),u),a.shape):Ws(ni(ni(e,d),u),a.shape),mean:()=>{let e=ni(ni(d,di(-1)),h);return 1===s.rank&&(e=Tl(e,l)),Ws(e,s.shape)},variance:()=>{let e=ni(ni(m,c),h);return 1===s.rank&&(e=Tl(e,l)),Ws(e,s.shape)},scale:()=>{const t=ni(c,d);let n=ni(e,t);return 1===s.rank&&(n=Tl(n,l)),Ws(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Tl(t,l)),Ws(t,s.shape)}}}},Hd={kernelName:Ge,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,o=lr(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,i=t.slice(0,o),u=i.length,l=t.slice(s,t.length).slice(1),p=l.length,c=Jd(0,u),h=Jd(u+1,u+1+p),d=Yd([i,[n],l]),m=Ws(e,d),f=Ws(a,[n]),y=Yd([[u],c,h]),g=Ks(m,y);let b=ec(g,f,r.shape[o]);const w=Li(y);return b=Ks(b,w),b},indices:()=>a}}};function Jd(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Yd(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Xd={kernelName:Ye,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>si(n),b:()=>si(r)}}},Zd={kernelName:Xe,gradFunc:e=>({x:()=>vs(e,"float32")})},Qd={kernelName:et,gradFunc:e=>({x:()=>si(e)})},em={kernelName:tt,gradFunc:e=>({x:()=>si(e)})},tm={kernelName:nt,gradFunc:e=>({x:()=>si(e)})},nm={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ti(e,Qo(n,1))}}},rm={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ti(e,vs(n,"float32"))}}},am={kernelName:ct,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=Xu(r);return wi(e,ni(Tl(e,a,!0),t))}}}},sm=Da({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,o=.5){const i={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:o};return ya.runKernelFunc((i=>i.LRNGrad(n,e,t,r,a,s,o)),i,null,dt,u)}}),om={kernelName:ht,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:o,alpha:i,beta:u}=n;return{x:()=>sm(r,a,e,s,o,i,u)}}};function im(e,t,n,r,a){return t.rank<n.rank&&(t=Ws(t,Bi(t.shape,r))),e.rank<n.rank&&(e=Ws(e,Bi(e.shape,r))),{x:()=>{const r=ni(e,vs(Uu(n,t),e.dtype));return null==a?r:Ks(r,a)}}}const um={kernelName:mt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,[s,o]=t,i=lr(a,s.shape),u=zi(i,s.rank),l=im(e,o,s,i,u);return{x:()=>{let e=l.x();return null!=u&&(e=Ks(e)),e}}}},lm={kernelName:ft,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ni(e,vs(pl(n,r),"float32")),b:()=>ni(e,vs(yl(n,r),"float32"))}}},pm=Da({maxPool3dBackprop_:function(e,t,n,r,a,s=[1,1,1],o,i){const u=Sa(e,"dy","maxPool3dBackprop"),l=Sa(t,"input","maxPool3dBackprop"),p=Sa(n,"output","maxPool3dBackprop");let c=u,h=l,d=p,m=!1;4===l.rank&&(m=!0,c=Ws(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=Ws(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Ws(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),Jn(5===c.rank,(()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+c.rank+".")),Jn(5===h.rank,(()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+h.rank+".")),Jn(5===d.rank,(()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+d.rank+".")),Jn(iu(a,s),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`)),null!=i&&Jn(nr(o),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`));const f={dy:c,input:h,output:d},y={filterSize:r,strides:a,dilations:s,pad:o,dimRoundingMode:i},g=ya.runKernelFunc((e=>{const t=Zi(h.shape,r,a,s,o,i);return e.maxPool3dBackprop(c,h,d,t)}),f,null,wt,y);return m?Ws(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),cm={kernelName:bt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:o,dilations:i,pad:u,dimRoundingMode:l}=n,p=null==i?[1,1,1]:i;return{x:()=>pm(e,r,a,s,o,p,u,l)}}},hm=Da({maxPoolBackprop_:function(e,t,n,r,a,s,o){const i=Sa(e,"dy","maxPoolBackprop"),u=Sa(t,"input","maxPoolBackprop"),l=Sa(n,"output","maxPoolBackprop");Jn(u.rank===i.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`)),Jn(4===i.rank,(()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+i.rank+".")),Jn(4===u.rank,(()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+u.rank+".")),null!=o&&Jn(nr(s),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`));const p={dy:i,input:u,output:l},c={filterSize:r,strides:a,pad:s,dimRoundingMode:o};return ya.runKernelFunc((e=>{const t=Xi(u.shape,r,a,1,s,o);return e.maxPoolBackprop(i,u,l,t)}),p,null,gt,c)}}),dm={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>fu(e,s,r.shape)}}},mm={kernelName:ln,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>bu(e,r,a)}}},fm={kernelName:pn,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>du(e,r)}}},ym=[ud,ld,pd,cd,hd,dd,md,fd,yd,gd,bd,wd,Nd,vd,Sd,Ed,Td,Dd,Id,Ad,_d,Md,Fd,Od,Cd,Bd,Rd,zd,Ld,Pd,Vd,qd,Wd,jd,Kd,Ud,Gd,Hd,Xd,Zd,Qd,em,tm,nm,rm,am,om,um,um,lm,cm,{kernelName:yt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>hm(e,r,a,s,o,i)}}},{kernelName:kt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,o]=t,i=lr(a,s.shape),u=zi(i,s.rank),l=im(e,o,s,i,u);return{x:()=>{let e=l.x();return null!=u&&(e=Ks(e)),e}}}},{kernelName:vt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ni(e,vs(gl(n,r),"float32")),b:()=>ni(e,vs(ll(n,r),"float32"))}}},{kernelName:St,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Si(n.shape,r.shape);return{a:()=>{const t=vi(n.shape,a);return t.length>0?Ws(Tl(e,t),n.shape):e},b:()=>{const t=ni(e,kl(nl(ti(n,r)))),s=vi(r.shape,a);return s.length>0?Ws(Tl(t,s),r.shape):t}}}},{kernelName:Et,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Si(n.shape,r.shape);return{a:()=>{const t=ni(e,vs(r,"float32")),s=vi(n.shape,a);return s.length>0?Ws(Tl(t,s),n.shape):t},b:()=>{const t=ni(e,vs(n,"float32")),s=vi(r.shape,a);return s.length>0?Ws(Tl(t,s),r.shape):t}}}},{kernelName:Tt,gradFunc:e=>({x:()=>kl(e)})},{kernelName:Mt,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Bl(n.shape,"float32")}}},{kernelName:Ft,gradFunc:e=>({x:()=>si(e)})},dm,dm,{kernelName:Ct,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,o=r,i=Si(s.shape,o.shape);return{a:()=>{const t=vs(o,"float32");let n=ni(e,ni(t,bi(s,wi(t,di(1)))));const r=vi(s.shape,i);return r.length>0&&(n=Tl(n,r)),Ws(n,s.shape)},b:()=>{const t=ll(s,0),n=Ku(t,xl(s),si(s));let r=ni(e,ni(a,n));const u=vi(o.shape,i);return u.length>0&&(r=Tl(r,u)),Ws(r,o.shape)}}}},{kernelName:Bt,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=ll(n,0);return{x:()=>Ku(a,e,ni(e,r)),alpha:()=>{let t=Ku(a,si(e),ni(e,n));const s=vi(r.shape,e.shape);return s.length>0&&(t=Tl(t,s)),Ws(t,r.shape)}}}},{kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ti(e,kl(ai(n)))}}},{kernelName:Gt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ni(gl(n,6),jp(n));return{x:()=>ni(e,vs(r,"float32"))}}},{kernelName:Vt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ni(e,vs(jp(n),"float32"))}}},{kernelName:qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ws(e,n.shape)}}},{kernelName:Ut,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a=t=>{const{alignCorners:a}=n;return t.resizeBilinearBackprop(e,r,a)},s={images:r};return{images:()=>ya.runKernelFunc(a,s,null,Kt,n)}}},{kernelName:Wt,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a=t=>{const{alignCorners:a}=n;return t.resizeNearestNeighborBackprop(e,r,a)},s={images:r};return{images:()=>ya.runKernelFunc(a,s,null,jt,n)}}},{kernelName:Ht,gradFunc:(e,t,n)=>{const{dims:r}=n,a=lr(r,e.shape);return{x:()=>gp(e,a)}}},{kernelName:Jt,gradFunc:e=>({x:()=>si(e)})},{kernelName:Yt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kl(ti(e,ni(bi(n,1.5),2)))}}},{kernelName:Zt,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>vs(si(n),"float32"),t:()=>ni(e,vs(n,e.dtype)),e:()=>ni(e,vs(_l(n),e.dtype))}}},{kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ll(n,di(0)),r=di(zh),a=di(Lh),s=ni(e,a),o=ni(ni(e,r),Xu(vs(n,"float32")));return Ku(t,s,o)}}}},{kernelName:an,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ni(e,ni(n,wi(di(1),n)))}}},{kernelName:rn,gradFunc:e=>({x:()=>si(e)})},{kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ni(zu(vs(n,"float32")),e)}}},{kernelName:nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ni(Lu(vs(n,"float32")),e)}}},{kernelName:en,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,o=r.shape,[i,u]=go(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([i[t],o[t]-i[t]-u[t]]);return{x:()=>Jl(e,l)}}},{kernelName:cn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=ni(e,r);return{logits:()=>wi(s,ni(Tl(s,[a],!0),r))}}},{kernelName:sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ni(e,mu(n))}}},mm,mm,fm,fm,{kernelName:on,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ti(e,ni(ri(vs(n,"float32")),2))}}},{kernelName:hn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=di(2);return{a:()=>ni(e,ni(a,wi(n,r))),b:()=>ni(e,ni(a,wi(r,n)))}}},{kernelName:dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ni(e,ni(vs(n,"float32"),2))}}},{kernelName:Tn,gradFunc:e=>({x:()=>si(e)})},{kernelName:mn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Si(n.shape,r.shape);return{a:()=>{let t=e;const r=vi(n.shape,a);return r.length>0&&(t=Tl(t,r)),Ws(t,n.shape)},b:()=>{let t=e;const n=vi(r.shape,a);return n.length>0&&(t=Tl(t,n)),Ws(kl(t),r.shape)}}}},{kernelName:un,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;lr(s,r.shape).forEach((e=>{a[e]=1}));const o=Ws(e,a),i=ni(o,Rl(r.shape,"float32"));return{x:()=>i}}},{kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ti(e,ai(zu(n)))}}},{kernelName:bn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ni(wi(di(1),ai(n)),e)}}},{kernelName:wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=si(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Qo(t,fu(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Qo(t,fu(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let o=0;o<a[2];++o)t=Qo(t,fu(e,[n*r.shape[0],s*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let o=0;o<a[2];++o)for(let i=0;i<a[3];++i)t=Qo(t,fu(e,[n*r.shape[0],s*r.shape[1],o*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Nn,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=Li(a);return{x:()=>Ks(e,s)}}},{kernelName:vn,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Wp(e,a)}}},{kernelName:Sn,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ei(t,si(t)),r=ul(e,n);let a=pl(t,di(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=Zu(a,e+1);a=Al(a,Rl(r.shape,"bool"));const o=si(r);return Ku(a,r,o)}(e,n)}}},{kernelName:En,gradFunc:e=>({x:()=>si(e)})}];for(const e of ym)zn(e);var gm,bm;Zr.prototype.abs=function(){return this.throwIfDisposed(),Ni(this)},Zr.prototype.acos=function(){return this.throwIfDisposed(),_i(this)},Zr.prototype.acosh=function(){return this.throwIfDisposed(),Fi(this)},Zr.prototype.addStrict=function(e){return this.throwIfDisposed(),hc(this,e)},Zr.prototype.add=function(e){return this.throwIfDisposed(),Qo(this,e)},Zr.prototype.all=function(e,t){return this.throwIfDisposed(),Vi(this,e,t)},Zr.prototype.any=function(e,t){return this.throwIfDisposed(),qi(this,e,t)},Zr.prototype.argMax=function(e){return this.throwIfDisposed(),Wi(this,e)},Zr.prototype.argMin=function(e){return this.throwIfDisposed(),ji(this,e)},Zr.prototype.asScalar=function(){return this.throwIfDisposed(),Jn(1===this.size,(()=>"The array must have only 1 element.")),Ws(this,[])},Zr.prototype.asType=function(e){return this.throwIfDisposed(),vs(this,e)},Zr.prototype.as1D=function(){return this.throwIfDisposed(),Ws(this,[this.size])},Zr.prototype.as2D=function(e,t){return this.throwIfDisposed(),Ws(this,[e,t])},Zr.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Ws(this,[e,t,n])},Zr.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Ws(this,[e,t,n,r])},Zr.prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Ws(this,[e,t,n,r,a])},Zr.prototype.asin=function(){return this.throwIfDisposed(),Ui(this)},Zr.prototype.asinh=function(){return this.throwIfDisposed(),Ki(this)},Zr.prototype.atan=function(){return this.throwIfDisposed(),Gi(this)},Zr.prototype.atan2=function(e){return this.throwIfDisposed(),Hi(this,e)},Zr.prototype.atanh=function(){return this.throwIfDisposed(),Ji(this)},Zr.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),lu(this,e,t,n,r)},Zr.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),bu(this,e,t)},Zr.prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),xu(this,e,t,n,r,a)},Zr.prototype.broadcastTo=function(e){return this.throwIfDisposed(),Su(this,e)},Zr.prototype.cast=function(e){return this.throwIfDisposed(),vs(this,e)},Zr.prototype.ceil=function(){return this.throwIfDisposed(),Eu(this)},Zr.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Tu(this,e,t)},Zr.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Zr&&(e=[e]),du([this,...e],t)},Zr.prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Mu(this,e,t,n,r,a,s)},Zr.prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Ou(this,e,t,n,r,a)},Zr.prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Fu(this,e,t,n,r,a,s)},Zr.prototype.cos=function(){return this.throwIfDisposed(),zu(this)},Zr.prototype.cosh=function(){return this.throwIfDisposed(),Lu(this)},Zr.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Pu(this,e,t,n)},Zr.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Vu(this,e,t)},Zr.prototype.depthwiseConv2D=function(e,t,n,r,a,s){return Co("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),qu(this,e,t,n,r,a,s)},Zr.prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),qu(this,e,t,n,r,a,s)},Zr.prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),ju(this,e,t,n,r,a)},Zr.prototype.divNoNan=function(e){return this.throwIfDisposed(),Gu(this,e)},Zr.prototype.divStrict=function(e){return this.throwIfDisposed(),dc(this,e)},Zr.prototype.div=function(e){return this.throwIfDisposed(),ti(this,e)},Zr.prototype.dot=function(e){return this.throwIfDisposed(),Hu(this,e)},Zr.prototype.elu=function(){return this.throwIfDisposed(),Ju(this)},Zr.prototype.equalStrict=function(e){return this.throwIfDisposed(),oc(this,e)},Zr.prototype.equal=function(e){return this.throwIfDisposed(),Uu(this,e)},Zr.prototype.erf=function(){return this.throwIfDisposed(),Yu(this)},Zr.prototype.exp=function(){return this.throwIfDisposed(),Xu(this)},Zr.prototype.expandDims=function(e){return this.throwIfDisposed(),Zu(this,e)},Zr.prototype.expm1=function(){return this.throwIfDisposed(),Qu(this)},Zr.prototype.fft=function(){return this.throwIfDisposed(),Cp(this)},Zr.prototype.flatten=function(){return this.throwIfDisposed(),Ws(this,[this.size])},Zr.prototype.floor=function(){return this.throwIfDisposed(),nl(this)},Zr.prototype.floorDiv=function(e){return this.throwIfDisposed(),ei(this,e)},Zr.prototype.gather=function(e,t){return this.throwIfDisposed(),ul(this,e,t)},Zr.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),ic(this,e)},Zr.prototype.greaterEqual=function(e){return this.throwIfDisposed(),pl(this,e)},Zr.prototype.greaterStrict=function(e){return this.throwIfDisposed(),uc(this,e)},Zr.prototype.greater=function(e){return this.throwIfDisposed(),ll(this,e)},Zr.prototype.ifft=function(){return this.throwIfDisposed(),Bp(this)},Zr.prototype.irfft=function(){return this.throwIfDisposed(),Rp(this)},Zr.prototype.isFinite=function(){return this.throwIfDisposed(),hl(this)},Zr.prototype.isInf=function(){return this.throwIfDisposed(),dl(this)},Zr.prototype.isNaN=function(){return this.throwIfDisposed(),ml(this)},Zr.prototype.leakyRelu=function(e){return this.throwIfDisposed(),fl(this,e)},Zr.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),lc(this,e)},Zr.prototype.lessEqual=function(e){return this.throwIfDisposed(),gl(this,e)},Zr.prototype.lessStrict=function(e){return this.throwIfDisposed(),pc(this,e)},Zr.prototype.less=function(e){return this.throwIfDisposed(),yl(this,e)},Zr.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),wl(this,e,t,n,r)},Zr.prototype.logSigmoid=function(){return this.throwIfDisposed(),Sl(this)},Zr.prototype.logSoftmax=function(e){return this.throwIfDisposed(),Dl(this,e)},Zr.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Il(this,e,t)},Zr.prototype.log=function(){return this.throwIfDisposed(),xl(this)},Zr.prototype.log1p=function(){return this.throwIfDisposed(),Nl(this)},Zr.prototype.logicalAnd=function(e){return this.throwIfDisposed(),Al(this,e)},Zr.prototype.logicalNot=function(){return this.throwIfDisposed(),_l(this)},Zr.prototype.logicalOr=function(e){return this.throwIfDisposed(),Fl(this,e)},Zr.prototype.logicalXor=function(e){return this.throwIfDisposed(),Ml(this,e)},Zr.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),js(this,e,t,n)},Zr.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),$l(this,e,t,n,r)},Zr.prototype.max=function(e,t){return this.throwIfDisposed(),El(this,e,t)},Zr.prototype.maximumStrict=function(e){return this.throwIfDisposed(),mc(this,e)},Zr.prototype.maximum=function(e){return this.throwIfDisposed(),Ei(this,e)},Zr.prototype.mean=function(e,t){return this.throwIfDisposed(),zl(this,e,t)},Zr.prototype.min=function(e,t){return this.throwIfDisposed(),Ll(this,e,t)},Zr.prototype.minimumStrict=function(e){return this.throwIfDisposed(),fc(this,e)},Zr.prototype.minimum=function(e){return this.throwIfDisposed(),Pl(this,e)},Zr.prototype.modStrict=function(e){return this.throwIfDisposed(),yc(this,e)},Zr.prototype.mod=function(e){return this.throwIfDisposed(),Vl(this,e)},Zr.prototype.mulStrict=function(e){return this.throwIfDisposed(),gc(this,e)},Zr.prototype.mul=function(e){return this.throwIfDisposed(),ni(this,e)},Zr.prototype.neg=function(){return this.throwIfDisposed(),kl(this)},Zr.prototype.norm=function(e,t,n){return this.throwIfDisposed(),kc(this,e,t,n)},Zr.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),cc(this,e)},Zr.prototype.notEqual=function(e){return this.throwIfDisposed(),Ul(this,e)},Zr.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Us(this,e,t,n)},Zr.prototype.onesLike=function(){return this.throwIfDisposed(),Gl(this)},Zr.prototype.pad=function(e,t){return this.throwIfDisposed(),Jl(this,e,t)},Zr.prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),tp(this,e,t,n,r,a)},Zr.prototype.powStrict=function(e){return this.throwIfDisposed(),bc(this,e)},Zr.prototype.pow=function(e){return this.throwIfDisposed(),bi(this,e)},Zr.prototype.prelu=function(e){return this.throwIfDisposed(),np(this,e)},Zr.prototype.prod=function(e,t){return this.throwIfDisposed(),rp(this,e,t)},Zr.prototype.reciprocal=function(){return this.throwIfDisposed(),mp(this)},Zr.prototype.relu=function(){return this.throwIfDisposed(),fp(this)},Zr.prototype.relu6=function(){return this.throwIfDisposed(),yp(this)},Zr.prototype.reshapeAs=function(e){return this.throwIfDisposed(),Ws(this,e.shape)},Zr.prototype.reshape=function(e){return this.throwIfDisposed(),Ws(this,e)},Zr.prototype.resizeBilinear=function(e,t){return this.throwIfDisposed(),ih(this,e,t)},Zr.prototype.resizeNearestNeighbor=function(e,t){return this.throwIfDisposed(),uh(this,e,t)},Zr.prototype.reverse=function(e){return this.throwIfDisposed(),gp(this,e)},Zr.prototype.rfft=function(){return this.throwIfDisposed(),Pp(this)},Zr.prototype.round=function(){return this.throwIfDisposed(),kp(this)},Zr.prototype.rsqrt=function(){return this.throwIfDisposed(),vp(this)},Zr.prototype.selu=function(){return this.throwIfDisposed(),Sp(this)},Zr.prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Ep(this,e,t,n,r,a,s)},Zr.prototype.sigmoid=function(){return this.throwIfDisposed(),mu(this)},Zr.prototype.sign=function(){return this.throwIfDisposed(),Dp(this)},Zr.prototype.sin=function(){return this.throwIfDisposed(),Ip(this)},Zr.prototype.sinh=function(){return this.throwIfDisposed(),Ap(this)},Zr.prototype.slice=function(e,t){return this.throwIfDisposed(),fu(this,e,t)},Zr.prototype.softmax=function(e){return this.throwIfDisposed(),Op(this,e)},Zr.prototype.softplus=function(){return this.throwIfDisposed(),vl(this)},Zr.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ep(this,e,t)},Zr.prototype.split=function(e,t){return this.throwIfDisposed(),Lp(this,e,t)},Zr.prototype.sqrt=function(){return this.throwIfDisposed(),ri(this)},Zr.prototype.square=function(){return this.throwIfDisposed(),ai(this)},Zr.prototype.squaredDifference=function(e){return this.throwIfDisposed(),Vp(this,e)},Zr.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),wc(this,e)},Zr.prototype.squeeze=function(e){return this.throwIfDisposed(),qp(this,e)},Zr.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Zr?[this,e]:[this,...e];return Wp(n,t)},Zr.prototype.step=function(e){return this.throwIfDisposed(),jp(this,e)},Zr.prototype.stridedSlice=function(e,t,n,r,a,s,o,i){return this.throwIfDisposed(),Up(this,e,t,n,r,a,s,o,i)},Zr.prototype.subStrict=function(e){return this.throwIfDisposed(),xc(this,e)},Zr.prototype.sub=function(e){return this.throwIfDisposed(),wi(this,e)},Zr.prototype.sum=function(e,t){return this.throwIfDisposed(),Tl(this,e,t)},Zr.prototype.tan=function(){return this.throwIfDisposed(),Kp(this)},Zr.prototype.tanh=function(){return this.throwIfDisposed(),yu(this)},Zr.prototype.tile=function(e){return this.throwIfDisposed(),el(this,e)},Zr.prototype.toBool=function(){return this.throwIfDisposed(),vs(this,"bool")},Zr.prototype.toFloat=function(){return this.throwIfDisposed(),vs(this,"float32")},Zr.prototype.toInt=function(){return this.throwIfDisposed(),vs(this,"int32")},Zr.prototype.topk=function(e,t){return this.throwIfDisposed(),Xp(this,e,t)},Zr.prototype.transpose=function(e){return this.throwIfDisposed(),Ks(this,e)},Zr.prototype.unique=function(e){return this.throwIfDisposed(),Qp(this,e)},Zr.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),ec(this,e,t)},Zr.prototype.unstack=function(e){return this.throwIfDisposed(),tc(this,e)},Zr.prototype.where=function(e,t){return this.throwIfDisposed(),Ku(e,this,t)},Zr.prototype.zerosLike=function(){return this.throwIfDisposed(),si(this)},function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(gm||(gm={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(bm||(bm={}));const wm={};function xm(e){return wm[e]}function Nm(e,t,n,r){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,s=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return km(t.inputNames[a.inputIndexStart],n,r);if("tensors"===a.type)return t.inputNames.slice(e,s).map((e=>km(e,n,r)));const o=km(t.inputNames.slice(e)[0],n,r),i=o.dataSync();return"number"===a.type?i[0]:Ar(o.shape,i)}const s=t.attrParams[e];return s&&s.value}function km(e,t,n){const[r,a]=Em(e),s=n.currentContextIds.find((e=>!!t[Sm(r,e)]));return void 0!==s?t[Sm(r,s)][a]:void 0}function vm(e,t){const[n,r]=Em(e);return[Sm(n,t&&t.currentContextId),r]}function Sm(e,t){return t?`${e}-${t}`:e}function Em(e){const t=e.split(":");return 1===t.length?[e,0]:[t[0],Number(t[t.length-1])]}function Tm(e,t,n){let r=Nm("pad",e,t,n);if("explicit"===r){r=Nm("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function Dm(e){return e.kept?e:Ss(e)}const Im=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Am=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_m=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],Fm=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Mm=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],$m=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Om=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Cm=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Bm=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],Rm=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],zm=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Lm=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Pm=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Vm=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],qm=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Wm=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class jm{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[w,x,N,k,v,S,E,I,D,T,A,_,F,M,$,O].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const u=[];let l={},p={};null!=t&&(l=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));const c=Object.keys(o);c.forEach((e=>{const t=o[e];t.inputNames.forEach((e=>{const[n]=vm(e);t.inputs.push(o[n]),o[n].children.push(t)}))})),0===Object.keys(p).length?c.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(p).forEach((e=>{const[t]=vm(e),n=o[t];null!=n&&(n.signatureKey=p[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=vm(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:o,inputs:i,outputs:u,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(d.initNodes=s),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=xm(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=Km(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Km(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=nf(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=nf(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=Hm(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=Hm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=tf(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=tf(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=Gm(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Gm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=af(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=af(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=ef(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ef(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=rf(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=rf(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=Xm(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Xm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=Zm(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Zm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=Ym(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ym(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=vm(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Jm(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach((e=>{const[n]=vm(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=vm(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Um(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=L().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Km(e,t,n,r=!1){const a=e[t];return null!=a?Um(a.s,r):n}function Gm(e,t,n){const r=e[t];return r?r.b:n}function Hm(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function Jm(e){switch("string"==typeof e&&(e=gm[e]),e){case gm.DT_FLOAT:return"float32";case gm.DT_INT32:case gm.DT_INT64:case gm.DT_INT8:case gm.DT_UINT8:return"int32";case gm.DT_BOOL:return"bool";case gm.DT_DOUBLE:return"float32";case gm.DT_STRING:return"string";default:return null}}function Ym(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Xm(e,t,n){const r=e[t];return r&&r.type?Jm(r.type):n}function Zm(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>Jm(e))):n}function Qm(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function ef(e,t,n){const r=e[t];return r&&r.shape?Qm(r.shape):n}function tf(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function nf(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>Um(e,r))):n}function rf(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>Qm(e))):n}function af(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class sf{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return km(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return km(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Hm(this.node.rawAttrs,e,t);if(null!=n.s)return Km(this.node.rawAttrs,e,t);if(null!=n.b)return Gm(this.node.rawAttrs,e,t);if(null!=n.shape)return ef(this.node.rawAttrs,e,t);if(null!=n.type)return Xm(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return tf(this.node.rawAttrs,e,t);if(null!=n.list.s)return nf(this.node.rawAttrs,e,t);if(null!=n.list.shape)return rf(this.node.rawAttrs,e,t);if(null!=n.list.b)return af(this.node.rawAttrs,e,t);if(null!=n.list.type)return Zm(this.node.rawAttrs,e,t)}return t}}function of(e,t,n=""){Jn(function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0}(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}class uf{constructor(e,t,n,r,a,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=di(0),qo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),of(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,qo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return _a([],[0].concat(this.elementShape));const n=this.readMany(e);return of(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Wp(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return _a([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return of(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),du(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,tc(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];Po((()=>{t=Ws(t,[1,n,a]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],a];s[n]=Ws(fu(t,o,i),this.elementShape)}return s}));const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,s)}}class lf{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);of(t,e.shape,"TensorList shape mismatch: "),qo(e)})),this.idTensor=di(0),this.maxNumElements=r,qo(this.idTensor)}get id(){return this.idTensor.id}copy(){return new lf([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return of(e,this.elementShape,"TensorList shape mismatch: "),Po((()=>{const t=this.tensors.map((t=>Ws(t,e)));return Wp(t,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return of(n.shape,e,"TensorList shape mismatch: "),Ws(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(of(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");qo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);return of(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);of(this.elementShape,t.shape,"TensorList shape mismatch: "),qo(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return of(this.elementShape,n,"TensorList shape mismatch: "),0===(e=e.slice(0,this.size())).length?_a([],[0].concat(this.elementShape)):Po((()=>{const t=e.map((e=>Ws(this.tensors[e],n)));return Wp(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return of(this.elementShape,t,"TensorList shape mismatch: "),0===this.size()?_a([],[0].concat(this.elementShape)):Po((()=>{const e=this.tensors.map((e=>Ws(e,t)));return du(e,0)}))}}function pf(e,t,n){const[r,a]=Nm("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===a,i="fusedbatchnorm"===r,u=Nm("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=Nm("strides",e,t,n),p=Tm(e,t,n),c=Nm("dataFormat",e,t,n).toUpperCase(),h=Nm("dilations",e,t,n),[d,m]=Nm("args",e,t,n);return{stride:l,pad:p,dataFormat:c,dilations:h,biasArg:d,preluArg:m,activationFunc:a}}function cf(e,t,n){return{boxes:Nm("boxes",e,t,n),scores:Nm("scores",e,t,n),maxOutputSize:Nm("maxOutputSize",e,t,n),iouThreshold:Nm("iouThreshold",e,t,n),scoreThreshold:Nm("scoreThreshold",e,t,n),softNmsSigma:Nm("softNmsSigma",e,t,n)}}function hf(e,t,n){const r=((e,t,n)=>{switch(e.category){case"arithmetic":return Po((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Qo(Nm("a",e,t,n),Nm("b",e,t,n))];case"AddN":return[Mi(Nm("tensors",e,t,n))];case"FloorMod":case"Mod":return[Vl(Nm("a",e,t,n),Nm("b",e,t,n))];case"Mul":return[ni(Nm("a",e,t,n),Nm("b",e,t,n))];case"RealDiv":case"Div":return[ti(Nm("a",e,t,n),Nm("b",e,t,n))];case"DivNoNan":return[Gu(Nm("a",e,t,n),Nm("b",e,t,n))];case"FloorDiv":return[ei(Nm("a",e,t,n),Nm("b",e,t,n))];case"Sub":return[wi(Nm("a",e,t,n),Nm("b",e,t,n))];case"Minimum":return[Pl(Nm("a",e,t,n),Nm("b",e,t,n))];case"Maximum":return[Ei(Nm("a",e,t,n),Nm("b",e,t,n))];case"Pow":return[bi(Nm("a",e,t,n),Nm("b",e,t,n))];case"SquaredDifference":return[Vp(Nm("a",e,t,n),Nm("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return Po((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Ni(Nm("x",e,t,n))];case"Acos":return[_i(Nm("x",e,t,n))];case"Acosh":return[Fi(Nm("x",e,t,n))];case"Asin":return[Ui(Nm("x",e,t,n))];case"Asinh":return[Ki(Nm("x",e,t,n))];case"Atan":return[Gi(Nm("x",e,t,n))];case"Atan2":return[Hi(Nm("x",e,t,n),Nm("y",e,t,n))];case"Atanh":return[Ji(Nm("x",e,t,n))];case"Ceil":return[Eu(Nm("x",e,t,n))];case"Complex":return[Ia(Nm("real",e,t,n),Nm("imag",e,t,n))];case"Cos":return[zu(Nm("x",e,t,n))];case"Cosh":return[Lu(Nm("x",e,t,n))];case"Elu":return[Ju(Nm("x",e,t,n))];case"Erf":return[Yu(Nm("x",e,t,n))];case"Exp":return[Xu(Nm("x",e,t,n))];case"Expm1":return[Qu(Nm("x",e,t,n))];case"Floor":return[nl(Nm("x",e,t,n))];case"Log":return[xl(Nm("x",e,t,n))];case"Log1p":return[Nl(Nm("x",e,t,n))];case"Imag":return[cl(Nm("x",e,t,n))];case"Neg":return[kl(Nm("x",e,t,n))];case"Reciprocal":return[mp(Nm("x",e,t,n))];case"Real":return[Kl(Nm("x",e,t,n))];case"Relu":return[fp(Nm("x",e,t,n))];case"Round":return[kp(Nm("x",e,t,n))];case"Selu":return[Sp(Nm("x",e,t,n))];case"Sigmoid":return[mu(Nm("x",e,t,n))];case"Sin":return[Ip(Nm("x",e,t,n))];case"Sign":return[Dp(Nm("x",e,t,n))];case"Sinh":return[Ap(Nm("x",e,t,n))];case"Softplus":return[vl(Nm("x",e,t,n))];case"Sqrt":return[ri(Nm("x",e,t,n))];case"Square":return[ai(Nm("x",e,t,n))];case"Tanh":return[yu(Nm("x",e,t,n))];case"Tan":return[Kp(Nm("x",e,t,n))];case"Relu6":case"ClipByValue":return[Tu(Nm("x",e,t,n),Nm("clipValueMin",e,t,n),Nm("clipValueMax",e,t,n))];case"Rsqrt":return[vp(km(e.inputNames[0],t,n))];case"Prod":return[rp(Nm("x",e,t,n),Nm("axes",e,t,n))];case"LeakyRelu":return[fl(Nm("x",e,t,n),Nm("alpha",e,t,n))];case"Prelu":return[np(Nm("x",e,t,n),Nm("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Nm("thenBranch",e,t,n),a=Nm("elseBranch",e,t,n),s=Nm("cond",e,t,n),o=Nm("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Nm("body",e,t,n),a=Nm("cond",e,t,n),s=Nm("args",e,t,n),o=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[Dm(Nm("pred",e,t,n))];case"Switch":{const r=Nm("pred",e,t,n);let a=Nm("data",e,t,n);return a.kept||(a=Dm(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==km(e,t,n)));return r?[Dm(km(r,t,n))]:void 0}case"Enter":{const r=Nm("frameName",e,t,n),a=Nm("tensor",e,t,n);return n.enterFrame(r),[Dm(a)]}case"Exit":{const r=Nm("tensor",e,t,n);return n.exitFrame(),[Dm(r)]}case"NextIteration":{const r=Nm("tensor",e,t,n);return n.nextIteration(),[Dm(r)]}case"TensorArrayV3":{const r=Nm("size",e,t,n),a=Nm("dtype",e,t,n),s=Nm("elementShape",e,t,n),o=Nm("dynamicSize",e,t,n),i=Nm("clearAfterRead",e,t,n),u=Nm("identicalElementShapes",e,t,n),l=Nm("name",e,t,n),p=new uf(l,a,r,s,u,o,i);return n.addTensorArray(p),[p.idTensor,di(1)]}case"TensorArrayWriteV3":{const r=Nm("tensorArrayId",e,t,n),a=Nm("index",e,t,n),s=Nm("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(a,s),[o.idTensor]}case"TensorArrayReadV3":{const r=Nm("tensorArrayId",e,t,n),a=Nm("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Nm("tensorArrayId",e,t,n),a=Nm("indices",e,t,n),s=Nm("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=Nm("tensorArrayId",e,t,n),a=Nm("indices",e,t,n),s=Nm("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(a,s),[o.idTensor]}case"TensorArrayConcatV3":{const r=Nm("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=Nm("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=Nm("tensorArrayId",e,t,n),a=Nm("tensor",e,t,n),s=Nm("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(s,a),[o.idTensor]}case"TensorArraySizeV3":{const r=Nm("tensorArrayId",e,t,n);return[di(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=Nm("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Nm("tensorListId",e,t,n),a=Nm("index",e,t,n),s=Nm("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(a,s),[o.idTensor]}case"TensorListGetItem":{const r=Nm("tensorListId",e,t,n),a=Nm("index",e,t,n),s=Nm("elementShape",e,t,n),o=Nm("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Nm("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new lf([],n,e.dtype,r),o=tc(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(Nm("tensor",e,t,n),r,Nm("elementShape",e,t,n),Nm("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":{const o=(r=Nm("elementShape",e,t,n),a=Nm("elementDType",e,t,n),s=Nm("numElements",e,t,n),new lf([],r,a,s));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=Nm("tensorListId",e,t,n),a=Nm("indices",e,t,n),s=Nm("elementShape",e,t,n),o=Nm("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,o,s)]}case"TensorListStack":{const r=Nm("tensorListId",e,t,n),a=Nm("elementShape",e,t,n),s=Nm("elementDType",e,t,n),o=Nm("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);of(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=tc(e);return new lf(a,t,r)}(Nm("tensor",e,t,n),Nm("elementShape",e,t,n),Nm("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=Nm("tensorListId",e,t,n),a=n.getTensorList(r.id),s=Nm("dtype",e,t,n),o=Nm("elementShape",e,t,n);return[a.concat(s,o)]}case"TensorListPushBack":{const r=Nm("tensorListId",e,t,n),a=Nm("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=Nm("tensorListId",e,t,n),a=Nm("elementShape",e,t,n),s=Nm("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=Nm("tensor",e,t,n),a=Nm("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=0===r?0:e.size/r,o=Po((()=>{const o=[];e=Ws(e,[1,r,s]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:a[r-1],0],u=[1,t[r],s];o[r]=Ws(fu(e,i,u),n)}return e.dispose(),o})),i=new lf([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)i.setItem(e,o[e]);return i}(r,Nm("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}var r,a,s})(e,t,n);case"convolution":return Po((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=Nm("stride",e,t,n),a=Nm("pad",e,t,n),s=Nm("dataFormat",e,t,n).toUpperCase(),o=Nm("dilation",e,t,n);return[Mu(Nm("x",e,t,n),Nm("filter",e,t,n),r,a,s,o)]}case"Conv2D":{const r=Nm("strides",e,t,n),a=Tm(e,t,n),s=Nm("dataFormat",e,t,n).toUpperCase(),o=Nm("dilations",e,t,n);return[Fu(Nm("x",e,t,n),Nm("filter",e,t,n),[r[1],r[2]],a,s,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:l}=pf(e,t,n);return[Bc({x:Nm("x",e,t,n),filter:Nm("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:l}=pf(e,t,n);return[Lc({x:Nm("x",e,t,n),filter:Nm("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Nm("outputShape",e,t,n),a=Nm("strides",e,t,n),s=Tm(e,t,n);return[Ou(Nm("x",e,t,n),Nm("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Nm("strides",e,t,n),a=Tm(e,t,n),s=Nm("dilations",e,t,n),o=Nm("dataFormat",e,t,n).toUpperCase();return[qu(Nm("input",e,t,n),Nm("filter",e,t,n),[r[1],r[2]],a,o,[s[1],s[2]])]}case"Conv3D":{const r=Nm("strides",e,t,n),a=Nm("pad",e,t,n),s=Nm("dataFormat",e,t,n).toUpperCase(),o=Nm("dilations",e,t,n);return[Cu(Nm("x",e,t,n),Nm("filter",e,t,n),[r[1],r[2],r[3]],a,s,[o[1],o[2],o[3]])]}case"AvgPool":{const r=Nm("strides",e,t,n),a=Nm("pad",e,t,n),s=Nm("kernelSize",e,t,n);return[lu(Nm("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Nm("strides",e,t,n),a=Nm("pad",e,t,n),s=Nm("kernelSize",e,t,n);return[$l(Nm("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Nm("strides",e,t,n),a=Nm("pad",e,t,n),s=Nm("kernelSize",e,t,n),o=Nm("includeBatchInIndex",e,t,n),{result:i,indexes:u}=Cl(Nm("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,o);return[i,u]}case"AvgPool3D":{const r=Nm("strides",e,t,n),a=Nm("pad",e,t,n),s=Nm("kernelSize",e,t,n);return[pu(Nm("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Nm("strides",e,t,n),a=Nm("pad",e,t,n),s=Nm("kernelSize",e,t,n);return[Ol(Nm("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Nm("strides",e,t,n),a=Nm("pad",e,t,n),s=Nm("dilations",e,t,n),o=r[1],i=r[2],u=s[1],l=s[2];return[ju(Nm("x",e,t,n),Nm("filter",e,t,n),[o,i],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return Po((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=Nm("shape",e,t,n),a=Nm("dtype",e,t,n);return[yi(r,Nm("value",e,t,n),a)]}case"LinSpace":return[bl(Nm("start",e,t,n),Nm("stop",e,t,n),Nm("num",e,t,n))];case"Multinomial":{const r=Nm("logits",e,t,n),a=Nm("numSamples",e,t,n),s=Nm("seed",e,t,n);return[jl(r,a,s)]}case"OneHot":{const r=Nm("indices",e,t,n),a=Nm("depth",e,t,n),s=Nm("onValue",e,t,n),o=Nm("offValue",e,t,n);return[Us(r,a,s,o)]}case"Ones":return[Rl(Nm("shape",e,t,n),Nm("dtype",e,t,n))];case"OnesLike":return[Gl(Nm("x",e,t,n))];case"RandomUniform":return[cp(Nm("shape",e,t,n),Nm("minval",e,t,n),Nm("maxval",e,t,n),Nm("dtype",e,t,n))];case"Range":return[dp(Nm("start",e,t,n),Nm("stop",e,t,n),Nm("step",e,t,n),Nm("dtype",e,t,n))];case"TruncatedNormal":{const r=Nm("shape",e,t,n),a=Nm("mean",e,t,n),s=Nm("stdDev",e,t,n),o=Nm("seed",e,t,n);return[Zp(r,a,s,Nm("dtype",e,t,n),o)]}case"Zeros":return[Bl(Nm("shape",e,t,n),Nm("dtype",e,t,n))];case"ZerosLike":return[si(Nm("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i,softNmsSigma:u}=cf(e,t,n),l=await Eh.nonMaxSuppressionWithScoreAsync(r,a,s,o,i,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=cf(e,t,n),u=Nm("padToMaxOutputSize",e,t,n),l=await Eh.nonMaxSuppressionPaddedAsync(r,a,s,o,i,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=cf(e,t,n);return[await Eh.nonMaxSuppressionAsync(r,a,s,o,i)]}case"Where":{const r=vs(Nm("condition",e,t,n),"bool"),a=[await ac(r)];return r.dispose(),a}case"ListDiff":return Tp(Nm("x",e,t,n),Nm("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Po((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=Nm("x",e,t,n),a=Nm("k",e,t,n),s=Nm("sorted",e,t,n),o=Xp(r,a,s);return[o.values,o.indices]}case"Unique":{const r=Nm("x",e,t,n),a=Qp(r);return[a.values,a.indices]}case"UniqueV2":{const r=Nm("x",e,t,n),a=Nm("axis",e,t,n),s=Qp(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return Po((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=Nm("images",e,t,n),a=Nm("size",e,t,n),s=Nm("alignCorners",e,t,n);return[Eh.resizeBilinear(r,[a[0],a[1]],s)]}case"ResizeNearestNeighbor":{const r=Nm("images",e,t,n),a=Nm("size",e,t,n),s=Nm("alignCorners",e,t,n);return[Eh.resizeNearestNeighbor(r,[a[0],a[1]],s)]}case"CropAndResize":{const r=Nm("image",e,t,n),a=Nm("boxes",e,t,n),s=Nm("boxInd",e,t,n),o=Nm("cropSize",e,t,n),i=Nm("method",e,t,n),u=Nm("extrapolationValue",e,t,n);return[Eh.cropAndResize(r,a,s,o,i,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return Po((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Nm("default",e,t,n);return[km(e.name,t,n)||r];case"Placeholder":return[km(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[Dm(Nm("x",e,t,n))];case"IdentityN":return Nm("x",e,t,n).map((e=>Dm(e)));case"Snapshot":return[Dm(Nm("x",e,t,n))];case"Shape":return[hp(Nm("x",e,t,n).shape,"int32")];case"ShapeN":return Nm("x",e,t,n).map((e=>hp(e.shape)));case"Size":return[di(Nm("x",e,t,n).size,"int32")];case"Rank":return[di(Nm("x",e,t,n).rank,"int32")];case"NoOp":return[di(1)];case"Print":const a=Nm("x",e,t,n),s=Nm("data",e,t,n),o=Nm("message",e,t,n),i=Nm("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,i));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return Po((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Uu(Nm("a",e,t,n),Nm("b",e,t,n))];case"NotEqual":return[Ul(Nm("a",e,t,n),Nm("b",e,t,n))];case"Greater":return[ll(Nm("a",e,t,n),Nm("b",e,t,n))];case"GreaterEqual":return[pl(Nm("a",e,t,n),Nm("b",e,t,n))];case"Less":return[yl(Nm("a",e,t,n),Nm("b",e,t,n))];case"LessEqual":return[gl(Nm("a",e,t,n),Nm("b",e,t,n))];case"LogicalAnd":return[Al(Nm("a",e,t,n),Nm("b",e,t,n))];case"LogicalNot":return[_l(Nm("a",e,t,n))];case"LogicalOr":return[Fl(Nm("a",e,t,n),Nm("b",e,t,n))];case"Select":case"SelectV2":return[Ku(Nm("condition",e,t,n),Nm("a",e,t,n),Nm("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return Po((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[js(Nm("a",e,t,n),Nm("b",e,t,n),Nm("transposeA",e,t,n),Nm("transposeB",e,t,n))];case"Transpose":return[Ks(Nm("x",e,t,n),Nm("perm",e,t,n))];case"_FusedMatMul":const[r,a]=Nm("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===a,i=Nm("numArgs",e,t,n);if(s){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,l]=Nm("args",e,t,n);return[Pc({a:Nm("a",e,t,n),b:Nm("b",e,t,n),transposeA:Nm("transposeA",e,t,n),transposeB:Nm("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return Po((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[xu(Nm("x",e,t,n),Nm("mean",e,t,n),Nm("variance",e,t,n),Nm("offset",e,t,n),Nm("scale",e,t,n),Nm("epsilon",e,t,n))];case"LRN":return[wl(Nm("x",e,t,n),Nm("radius",e,t,n),Nm("bias",e,t,n),Nm("alpha",e,t,n),Nm("beta",e,t,n))];case"Softmax":return[Op(Nm("x",e,t,n))];case"LogSoftmax":return[Dl(Nm("x",e,t,n))];case"SparseToDense":return[Ec(Nm("sparseIndices",e,t,n),Nm("outputShape",e,t,n),Nm("sparseValues",e,t,n),Nm("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return Po((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=Nm("axis",e,t,n),a=Nm("keepDims",e,t,n);return[El(Nm("x",e,t,n),r,a)]}case"Mean":{const r=Nm("axis",e,t,n),a=Nm("keepDims",e,t,n);return[zl(Nm("x",e,t,n),r,a)]}case"Min":{const r=Nm("axis",e,t,n),a=Nm("keepDims",e,t,n);return[Ll(Nm("x",e,t,n),r,a)]}case"Sum":{const r=Nm("axis",e,t,n),a=Nm("keepDims",e,t,n);return[Tl(Nm("x",e,t,n),r,a)]}case"All":{const r=Nm("axis",e,t,n),a=Nm("keepDims",e,t,n);return[Vi(Nm("x",e,t,n),r,a)]}case"Any":{const r=Nm("axis",e,t,n),a=Nm("keepDims",e,t,n);return[qi(Nm("x",e,t,n),r,a)]}case"ArgMax":{const r=Nm("axis",e,t,n);return[Wi(Nm("x",e,t,n),r)]}case"ArgMin":{const r=Nm("axis",e,t,n);return[ji(Nm("x",e,t,n),r)]}case"Prod":{const r=Nm("axis",e,t,n),a=Nm("keepDims",e,t,n);return[rp(Nm("x",e,t,n),r,a)]}case"Cumsum":{const r=Nm("axis",e,t,n),a=Nm("exclusive",e,t,n),s=Nm("reverse",e,t,n);return[Pu(Nm("x",e,t,n),r,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return Po((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Nm("n",e,t,n),a=Nm("axis",e,t,n);let s=Nm("tensors",e,t,n);return s=s.slice(0,r),[du(s,a)]}case"GatherV2":case"Gather":{const r=Nm("axis",e,t,n),a=Nm("x",e,t,n),s=Nm("indices",e,t,n);return[ul(a,vs(s,"int32"),r)]}case"ReverseV2":case"Reverse":{const r=Nm("axis",e,t,n),a=Nm("x",e,t,n);return[gp(a,r)]}case"Slice":{const r=Nm("begin",e,t,n),a=Nm("size",e,t,n);return[fu(Nm("x",e,t,n),r,a)]}case"StridedSlice":{const r=Nm("begin",e,t,n),a=Nm("end",e,t,n),s=Nm("strides",e,t,n),o=Nm("beginMask",e,t,n),i=Nm("endMask",e,t,n),u=Nm("ellipsisMask",e,t,n),l=Nm("newAxisMask",e,t,n),p=Nm("shrinkAxisMask",e,t,n),c=Nm("x",e,t,n);return[Up(c,r,a,s,o,i,u,l,p)]}case"Pack":return Po((()=>{const r=Nm("axis",e,t,n),a=Nm("tensors",e,t,n),s=a[0].shape,o=qp(a[0]).shape,i=a.map((e=>{const t=tr(e.shape,s);if(!t&&!tr(qp(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:Ws(e,s)}));return[Wp(i,r)]}));case"Unpack":{const r=Nm("axis",e,t,n),a=Nm("tensor",e,t,n);return tc(a,r)}case"Tile":{const r=Nm("reps",e,t,n);return[el(Nm("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Nm("axis",e,t,n),a=Nm("numOrSizeSplits",e,t,n),s=Nm("x",e,t,n);return Lp(s,a,r)}case"ScatterNd":{const r=Nm("indices",e,t,n),a=Nm("values",e,t,n),s=Nm("shape",e,t,n);return[Sc(r,a,s)]}case"GatherNd":{const r=Nm("x",e,t,n),a=Nm("indices",e,t,n);return[Tc(r,a)]}case"SparseToDense":{const r=Nm("sparseIndices",e,t,n),a=Nm("outputShape",e,t,n),s=Nm("sparseValues",e,t,n),o=Nm("defaultValue",e,t,n);return[Ec(r,s,a,s.dtype===o.dtype?o:vs(o,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return Po((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Cp(Nm("x",e,t,n))];case"IFFT":return[Bp(Nm("x",e,t,n))];case"RFFT":return[Pp(Nm("x",e,t,n))];case"IRFFT":return[Rp(Nm("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return Po((()=>((e,t,n)=>{switch(e.op){case"Cast":return[vs(Nm("x",e,t,n),Nm("dtype",e,t,n))];case"ExpandDims":{const r=Nm("axis",e,t,n);return[Zu(Nm("x",e,t,n),r)]}case"Squeeze":{const r=Nm("axis",e,t,n);return[qp(Nm("x",e,t,n),r)]}case"Reshape":return[Ws(Nm("x",e,t,n),Nm("shape",e,t,n))];case"PadV2":case"Pad":return[Jl(Nm("x",e,t,n),Nm("padding",e,t,n),Nm("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Nm("blockShape",e,t,n),a=Nm("paddings",e,t,n);return[ep(Nm("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=Nm("blockShape",e,t,n),a=Nm("crops",e,t,n);return[bu(Nm("x",e,t,n),r,a)]}case"DepthToSpace":{const r=Nm("blockSize",e,t,n),a=Nm("dataFormat",e,t,n).toUpperCase();return[Vu(Nm("x",e,t,n),r,a)]}case"BroadcastTo":return[Su(Nm("x",e,t,n),Nm("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"custom":const r=xm(e.op);if(r&&r.customExecutor)return r.customExecutor(new sf(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return r instanceof Promise?r.then((e=>[].concat(e))):[].concat(r)}class df{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function mf(e,t,n,r){const a=new Set,s=[];let o=null,i=null;const u=new Set,l=Object.keys(e).map((e=>Em(e)[0]));let p=[];null!=r&&(p=r.map((e=>Em(e.name)[0])));const c=[...t];for(;c.length>0;){const e=c.pop();(gf(e)||bf(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===p.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),c.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:o,syncInputs:i}}const ff=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],yf=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"];function gf(e){return ff.indexOf(e.op)>=0}function bf(e){return yf.indexOf(e.op)>=0}class wf{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new wf(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=mf(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],o=Object.keys(a).map((e=>Em(e)[0])).map((t=>e.nodes[t])),i=e.initNodes;o.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=i&&i.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Em(e)[0]])),a=t.map((e=>Em(e)[0]));let s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const o=this.getCompilationKey(r,s);let i=this.compiledMap.get(o);null==i&&(i=this.compile(e,s),this.compiledMap.set(o,i));const u={},l={};return Po((()=>{const n=new df(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=Em(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),o={};for(let e=0;e<i.length;e++){const t=i[e];if(!r[t.name]){const e=hf(t,r,n);if(e instanceof Promise)throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,o)}}return null==this.parent&&n.dispose(s),t.map((e=>km(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,o){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[Sm(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!a.has(e.id)){const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new df(this.weightMap,r,a,this.functionExecutorMap),o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>km(e,o,s))),u=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),p=new Set([...u,...l,...this.weightIds]);return Object.keys(o).forEach((e=>{o[e].forEach((e=>{!e||e.isDisposed||p.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(p),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[Em(e)[0]])),o=n.map((e=>Em(e)[0])),i=o.map((e=>this.graph.nodes[e])),{usedNodes:u,missingInputs:l,dynamicNode:p,syncInputs:c}=mf(e,i,this.weightMap),h=[...s,...this.graph.weights].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Em(t),a=[];a[r]=e[t],d[n]=a}));const m={},f=this.getFrozenTensorIds(d),y={};for(;h.length>0;){const e=this.processStack(s,h,t,d,y,f,o,m,u);await Promise.all(e)}null!=p||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const g=i.filter((e=>!gf(e)&&!km(e.name,d,t))).map((e=>e.name));if(g.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${g}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,a,s,o,i,u){const l=[];for(;t.length>0;){const p=t.pop();n.currentContext=p.contexts;let c="";if("Enter"===p.node.op&&Nm("isConstant",p.node,r,n)&&([c]=vm(p.node.name,n)),-1===e.indexOf(p.node)){const e=hf(p.node,r,n);c||([c]=vm(p.node.name,n));const h=n.currentContext;e instanceof Promise?l.push(e.then((e=>(r[c]=e,n.currentContext=h,this.checkTensorForDisposal(c,p.node,r,n,s,o,i),this.processChildNodes(p.node,t,n,r,a,u),e)))):(r[c]=e,this.checkTensorForDisposal(c,p.node,r,n,s,o,i),this.processChildNodes(p.node,t,n,r,a,u))}else this.processChildNodes(p.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[o]=vm(e.name,n);!a[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!km(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!km(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=Em(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value;Jn(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&Jn(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Em(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=Em(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class xf{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={})}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=zs(e,this.loadOptions);else{const t=Ua(e,this.loadOptions);if(0===t.length)t.push(zs(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=$a(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new wf(jm.Instance.transformGraph(t,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),null!=e.modelInitializer){const t=jm.Instance.transformGraph(e.modelInitializer);this.initializer=new wf(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.execute({},[])}return!0}async save(e,t){if("string"==typeof e){const t=ja(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Zr||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose()}}const Nf={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}},kf="2.1.0";async function vf(e={}){if(null==b)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",n=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error("ObjectDetection constructed with invalid base model "+t+". Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.");const r=new Sf(t,n);return await r.load(),r}class Sf{constructor(e,t){this.modelPath=t||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(e)}/model.json`}getPrefix(e){return"lite_mobilenet_v2"===e?"ssd"+e:"ssd_"+e}async load(){this.model=await async function(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file");const n=new xf(e,t);return await n.load(),n}(this.modelPath);const e=Bl([1,300,300,3],"int32"),t=await this.model.executeAsync(e);await Promise.all(t.map((e=>e.data()))),t.map((e=>e.dispose())),e.dispose()}async infer(e,t,n){const r=Po((()=>(e instanceof Zr||(e=Xs(e)),e.expandDims(0)))),a=r.shape[1],s=r.shape[2],o=await this.model.executeAsync(r),i=o[0].dataSync(),u=o[1].dataSync();r.dispose(),Vo(o);const[l,p]=this.calculateMaxScores(i,o[0].shape[1],o[0].shape[2]),c=Ko();jo("cpu");const h=Po((()=>{const e=Gp(u,[o[1].shape[1],o[1].shape[3]]);return Eh.nonMaxSuppression(e,l,t,n,n)})),d=h.dataSync();return h.dispose(),jo(c),this.buildDetectedObjects(s,a,u,l,d,p)}buildDetectedObjects(e,t,n,r,a,s){const o=a.length,i=[];for(let u=0;u<o;u++){const o=[];for(let e=0;e<4;e++)o[e]=n[4*a[u]+e];const l=o[0]*t,p=o[1]*e,c=o[2]*t,h=o[3]*e;o[0]=p,o[1]=l,o[2]=h-p,o[3]=c-l,i.push({bbox:o,class:Nf[s[a[u]]+1].displayName,score:r[a[u]]})}return i}calculateMaxScores(e,t,n){const r=[],a=[];for(let s=0;s<t;s++){let t=Number.MIN_VALUE,o=-1;for(let r=0;r<n;r++)e[s*n+r]>t&&(t=e[s*n+r],o=r);r[s]=t,a[s]=o}return[r,a]}async detect(e,t=20,n=.5){return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}},36377:(e,t,n)=>{var r=n(84832),a=n(68652),s=n(90801),o=n(92030),i=n(3618),u=n(89049),l=n(51971);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},84832:function(e,t,n){var r;!function(e,a,s){function o(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},89049:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},68652:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},92030:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},90801:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},51971:(e,t,n)=>{var r;!function(a,s){var o,i=this,u=256,l=s.pow(u,6),p=s.pow(2,52),c=2*p,h=255;function d(e,t,n){var r=[],h=g(y((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,b(a)]}}():e,3),r),d=new m(r),w=function(){for(var e=d.g(6),t=l,n=0;e<p;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=c;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|d.g(4)},w.quick=function(){return d.g(4)/4294967296},w.double=w,g(b(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&f(r,d),e.state=function(){return f(d,{})}),n?(s.random=e,t):e})(w,h,"global"in t?t.global:this==s,t.state)}function m(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<u;)o[a]=a++;for(a=0;a<u;a++)o[a]=o[s=h&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=h&a+1],n=n*u+o[h&(o[a]=o[s=h&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(u)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(y(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=d,g(s.random(),a),e.exports){e.exports=d;try{o=n(63906)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},63906:()=>{},78352:()=>{},61758:()=>{}},t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{const e=n(61480),t=document.getElementById("file"),r=document.getElementById("img"),a=document.querySelector(".predictions");t.addEventListener("change",(e=>{e.preventDefault();const n=t.files[0];n&&(r.src=URL.createObjectURL(n),s())}));const s=async()=>{a.replaceChildren("");const t=await e.load(),n=await t.detect(r);if(console.log(n),0===n.length){const e=document.createElement("p");e.textContent="Could not detect anything 🤖",a.append(e)}n.forEach((e=>{const t=document.createElement("p");t.textContent=e.class,a.append(t)}))}})()})();